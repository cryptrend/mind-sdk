{"version":3,"file":"sdk.cjs.development.js","sources":["../src/enums/ChainId.ts","../src/enums/Rounding.ts","../src/enums/TradeType.ts","../src/enums/KashiAction.ts","../src/enums/Fee.ts","../src/enums/OrderStatus.ts","../src/constants/addresses.ts","../src/constants/kashi.ts","../src/entities/AbstractCurrency.ts","../src/entities/NativeCurrency.ts","../src/functions/validateAndParseAddress.ts","../src/entities/Token.ts","../src/constants/tokens.ts","../src/entities/Native/Avalanche.ts","../src/entities/Native/Binance.ts","../src/entities/Native/Celo.ts","../src/entities/Native/Ether.ts","../src/entities/Native/Fantom.ts","../src/entities/Native/Harmony.ts","../src/entities/Native/Heco.ts","../src/entities/Native/Matic.ts","../src/entities/Native/Movr.ts","../src/entities/Native/Okex.ts","../src/entities/Native/xDai.ts","../src/entities/Native/Palm.ts","../src/entities/Native/Aurora.ts","../src/constants/natives.ts","../src/constants/numbers.ts","../src/constants/index.ts","../src/errors.ts","../src/entities/Fraction.ts","../src/entities/CurrencyAmount.ts","../src/entities/Price.ts","../src/functions/computePoolInitCodeHash.ts","../src/functions/computeConstantProductPoolAddress.ts","../src/functions/sqrt.ts","../src/entities/ConstantProductPool.ts","../src/functions/computePairAddress.ts","../src/entities/Pair.ts","../src/entities/Percent.ts","../src/entities/Route.ts","../src/functions/computePriceImpact.ts","../src/functions/sortedInsert.ts","../src/entities/Trade.ts","../node_modules/regenerator-runtime/runtime.js","../src/types/MultiRouterTypes.ts","../src/types/LimitOrderTypes.ts","../src/entities/eip712.ts","../src/utils/MultiRouterMath.ts","../src/entities/MultiRouter.ts","../src/functions/validateSolidityTypeInstance.ts","../src/router.ts","../src/limitorder.ts"],"sourcesContent":["export enum ChainId {\r\n  MAINNET = 1,\r\n  ROPSTEN = 3,\r\n  RINKEBY = 4,\r\n  GÖRLI = 5,\r\n  KOVAN = 42,\r\n  MATIC = 137,\r\n  MATIC_TESTNET = 80001,\r\n  FANTOM = 250,\r\n  FANTOM_TESTNET = 4002,\r\n  XDAI = 100,\r\n  BSC = 56,\r\n  BSC_TESTNET = 97,\r\n  ARBITRUM = 42161,\r\n  ARBITRUM_TESTNET = 79377087078960,\r\n  MOONBEAM_TESTNET = 1287,\r\n  AVALANCHE = 43114,\r\n  AVALANCHE_TESTNET = 43113,\r\n  HECO = 128,\r\n  HECO_TESTNET = 256,\r\n  HARMONY = 1666600000,\r\n  HARMONY_TESTNET = 1666700000,\r\n  OKEX = 66,\r\n  OKEX_TESTNET = 65,\r\n  CELO = 42220,\r\n  PALM = 11297108109,\r\n  PALM_TESTNET = 11297108099,\r\n  MOONRIVER = 1285,\r\n  AURORA = 1313161554,\r\n  AURORA_TESTNET = 1313161556,\r\n  AURORA_PRIVATENET = 1337\r\n}\r\n","export enum Rounding {\r\n  ROUND_DOWN,\r\n  ROUND_HALF_UP,\r\n  ROUND_UP\r\n}\r\n","export enum TradeType {\r\n  EXACT_INPUT,\r\n  EXACT_OUTPUT\r\n}\r\n","export enum KashiAction {\r\n  ADD_ASSET = 1,\r\n  REPAY = 2,\r\n  REMOVE_ASSET = 3,\r\n  REMOVE_COLLATERAL = 4,\r\n  BORROW = 5,\r\n  GET_REPAY_SHARE = 6,\r\n  GET_REPAY_PART = 7,\r\n  ACCRUE = 8,\r\n\r\n  // Functions that don't need accrue to be called\r\n  ADD_COLLATERAL = 10,\r\n  UPDATE_EXCHANGE_RATE = 11,\r\n\r\n  // Function on BentoBox\r\n  BENTO_DEPOSIT = 20,\r\n  BENTO_WITHDRAW = 21,\r\n  BENTO_TRANSFER = 22,\r\n  BENTO_TRANSFER_MULTIPLE = 23,\r\n  BENTO_SETAPPROVAL = 24,\r\n\r\n  // Any external call (except to BentoBox)\r\n  CALL = 30\r\n}\r\n","// Fee - Tiers TBD\r\nexport enum Fee {\r\n  DEFAULT = 35\r\n}\r\n","export enum OrderStatus {\r\n  FILLED = 'FILLED',\r\n  CANCELLED = 'CANCELLED',\r\n  EXPIRED = 'EXPIRED',\r\n  PENDING = 'PENDING'\r\n}\r\n","import { AddressMap } from '../types'\r\nimport { ChainId } from '../enums'\r\n\r\nexport const USDC_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\r\n  [ChainId.ROPSTEN]: '0x0D9C8723B343A8368BebE0B5E89273fF8D712e3C',\r\n  [ChainId.KOVAN]: '0xb7a4F3E9097C08dA09517b5aB877F7a917224ede',\r\n  [ChainId.MATIC]: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\r\n  [ChainId.FANTOM]: '0x04068DA6C83AFCFA0e13ba15A6696662335D5B75',\r\n  [ChainId.BSC]: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\r\n  [ChainId.HARMONY]: '0x985458E523dB3d53125813eD68c274899e9DfAb4',\r\n  [ChainId.HECO]: '0x9362Bbef4B8313A8Aa9f0c9808B80577Aa26B73B',\r\n  [ChainId.OKEX]: '0xc946DAf81b08146B1C7A8Da2A851Ddf2B3EAaf85',\r\n  [ChainId.XDAI]: '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',\r\n  [ChainId.ARBITRUM]: '0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8',\r\n  [ChainId.AURORA]: '0xB12BFcA5A55806AaF64E99521918A4bf0fC40802'\r\n}\r\n\r\nexport const FACTORY_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac',\r\n  [ChainId.ROPSTEN]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.RINKEBY]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.GÖRLI]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.KOVAN]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.FANTOM]: '',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.MATIC_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.XDAI]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.BSC]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.BSC_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.ARBITRUM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.ARBITRUM_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '0x2Ce3F07dD4c62b56a502E223A7cBE38b1d77A1b5',\r\n  [ChainId.AVALANCHE]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.AVALANCHE_TESTNET]: '0xd00ae08403B9bbb9124bB305C09058E32C39A48c',\r\n  [ChainId.HECO]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.HECO_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.HARMONY]: '0x9014B937069918bd319f80e8B3BB4A2cf6FAA5F7',\r\n  [ChainId.HARMONY_TESTNET]: '',\r\n  [ChainId.OKEX]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.OKEX_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.CELO]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.PALM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.PALM_TESTNET]: '',\r\n  [ChainId.MOONRIVER]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\r\n  [ChainId.AURORA]: '',\r\n  [ChainId.AURORA_TESTNET]: '',\r\n  [ChainId.AURORA_PRIVATENET]: '0xA7c8B0D74b68EF10511F27e97c379FB1651e1eD2',\r\n}\r\n\r\nexport const ROUTER_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F',\r\n  [ChainId.RINKEBY]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.ROPSTEN]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.GÖRLI]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.KOVAN]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.FANTOM]: '',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.MATIC_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.XDAI]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.BSC]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.BSC_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.ARBITRUM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.ARBITRUM_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '0xeB5c2BB5E83B51d83F3534Ae21E84336B8B376ef',\r\n  [ChainId.AVALANCHE]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.AVALANCHE_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.HECO]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.HECO_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.HARMONY]: '0x24ad62502d1C652Cc7684081169D04896aC20f30',\r\n  [ChainId.HARMONY_TESTNET]: '',\r\n  [ChainId.OKEX]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.OKEX_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.CELO]: '0x1421bDe4B10e8dd459b3BCb598810B1337D56842',\r\n  [ChainId.PALM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.PALM_TESTNET]: '',\r\n  [ChainId.MOONRIVER]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\r\n  [ChainId.AURORA]: '',\r\n  [ChainId.AURORA_TESTNET]: '',\r\n  [ChainId.AURORA_PRIVATENET]: '0xAbB12158488d9C9Bd52C14B9AE4C835eCE4A6e13',\r\n}\r\n\r\nexport const SUSHI_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\r\n  [ChainId.ROPSTEN]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\r\n  [ChainId.RINKEBY]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\r\n  [ChainId.GÖRLI]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\r\n  [ChainId.KOVAN]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\r\n  [ChainId.FANTOM]: '',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a',\r\n  [ChainId.MATIC_TESTNET]: '',\r\n  [ChainId.XDAI]: '0x2995D1317DcD4f0aB89f4AE60F3f020A4F17C7CE',\r\n  [ChainId.BSC]: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\r\n  [ChainId.BSC_TESTNET]: '',\r\n  [ChainId.ARBITRUM]: '0xd4d42F0b6DEF4CE0383636770eF773390d85c61A',\r\n  [ChainId.ARBITRUM_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '',\r\n  [ChainId.AVALANCHE]: '0x39cf1BD5f15fb22eC3D9Ff86b0727aFc203427cc',\r\n  [ChainId.AVALANCHE_TESTNET]: '',\r\n  [ChainId.HECO]: '0x52E00B2dA5Bd7940fFe26B609A42F957f31118D5',\r\n  [ChainId.HECO_TESTNET]: '',\r\n  [ChainId.HARMONY]: '0x8D760497554eecC3B9036fb0364156ef2F0D02BC',\r\n  [ChainId.HARMONY_TESTNET]: '',\r\n  [ChainId.OKEX]: '0x2218E0D5E0173769F5b4939a3aE423f7e5E4EAB7',\r\n  [ChainId.OKEX_TESTNET]: '',\r\n  [ChainId.CELO]: '',\r\n  [ChainId.PALM]: '',\r\n  [ChainId.PALM_TESTNET]: ''\r\n}\r\n\r\nexport const MASTERCHEF_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\r\n  [ChainId.ROPSTEN]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\r\n  [ChainId.RINKEBY]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\r\n  [ChainId.GÖRLI]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\r\n  [ChainId.KOVAN]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\r\n  [ChainId.FANTOM]: '',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '',\r\n  [ChainId.MATIC_TESTNET]: '',\r\n  [ChainId.XDAI]: '',\r\n  [ChainId.BSC]: '',\r\n  [ChainId.BSC_TESTNET]: '',\r\n  [ChainId.ARBITRUM]: '',\r\n  [ChainId.ARBITRUM_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '',\r\n  [ChainId.AVALANCHE]: '',\r\n  [ChainId.AVALANCHE_TESTNET]: '',\r\n  [ChainId.HECO]: '',\r\n  [ChainId.HECO_TESTNET]: '',\r\n  [ChainId.HARMONY]: '',\r\n  [ChainId.HARMONY_TESTNET]: '',\r\n  [ChainId.OKEX]: '',\r\n  [ChainId.OKEX_TESTNET]: '',\r\n  [ChainId.CELO]: '',\r\n  [ChainId.PALM]: '',\r\n  [ChainId.PALM_TESTNET]: ''\r\n}\r\n\r\nexport const BAR_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272',\r\n  [ChainId.ROPSTEN]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\r\n  [ChainId.RINKEBY]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\r\n  [ChainId.GÖRLI]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\r\n  [ChainId.KOVAN]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\r\n  [ChainId.FANTOM]: '',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '',\r\n  [ChainId.MATIC_TESTNET]: '',\r\n  [ChainId.XDAI]: '',\r\n  [ChainId.BSC]: '',\r\n  [ChainId.BSC_TESTNET]: '',\r\n  [ChainId.ARBITRUM]: '',\r\n  [ChainId.ARBITRUM_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '',\r\n  [ChainId.AVALANCHE]: '',\r\n  [ChainId.AVALANCHE_TESTNET]: '',\r\n  [ChainId.HECO]: '',\r\n  [ChainId.HECO_TESTNET]: '',\r\n  [ChainId.HARMONY]: '',\r\n  [ChainId.HARMONY_TESTNET]: '',\r\n  [ChainId.OKEX]: '',\r\n  [ChainId.OKEX_TESTNET]: '',\r\n  [ChainId.CELO]: '',\r\n  [ChainId.PALM]: '',\r\n  [ChainId.PALM_TESTNET]: ''\r\n}\r\n\r\nexport const MAKER_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50',\r\n  [ChainId.ROPSTEN]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\r\n  [ChainId.RINKEBY]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\r\n  [ChainId.GÖRLI]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\r\n  [ChainId.KOVAN]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\r\n  [ChainId.FANTOM]: '',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '',\r\n  [ChainId.MATIC_TESTNET]: '',\r\n  [ChainId.XDAI]: '',\r\n  [ChainId.BSC]: '',\r\n  [ChainId.BSC_TESTNET]: '',\r\n  [ChainId.ARBITRUM]: '',\r\n  [ChainId.ARBITRUM_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '',\r\n  [ChainId.AVALANCHE]: '',\r\n  [ChainId.AVALANCHE_TESTNET]: '',\r\n  [ChainId.HECO]: '',\r\n  [ChainId.HECO_TESTNET]: '',\r\n  [ChainId.HARMONY]: '',\r\n  [ChainId.HARMONY_TESTNET]: '',\r\n  [ChainId.OKEX]: '',\r\n  [ChainId.OKEX_TESTNET]: '',\r\n  [ChainId.CELO]: '',\r\n  [ChainId.PALM]: '',\r\n  [ChainId.PALM_TESTNET]: ''\r\n}\r\n\r\nexport const TIMELOCK_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0x9a8541Ddf3a932a9A922B607e9CF7301f1d47bD1',\r\n  [ChainId.ROPSTEN]: '',\r\n  [ChainId.RINKEBY]: '',\r\n  [ChainId.GÖRLI]: '',\r\n  [ChainId.KOVAN]: '',\r\n  [ChainId.FANTOM]: '',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '',\r\n  [ChainId.MATIC_TESTNET]: '',\r\n  [ChainId.XDAI]: '',\r\n  [ChainId.BSC]: '',\r\n  [ChainId.BSC_TESTNET]: '',\r\n  [ChainId.ARBITRUM]: '',\r\n  [ChainId.ARBITRUM_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '',\r\n  [ChainId.AVALANCHE]: '',\r\n  [ChainId.AVALANCHE_TESTNET]: '',\r\n  [ChainId.HECO]: '',\r\n  [ChainId.HECO_TESTNET]: '',\r\n  [ChainId.HARMONY]: '',\r\n  [ChainId.HARMONY_TESTNET]: '',\r\n  [ChainId.OKEX]: '',\r\n  [ChainId.OKEX_TESTNET]: '',\r\n  [ChainId.CELO]: '',\r\n  [ChainId.PALM]: '',\r\n  [ChainId.PALM_TESTNET]: ''\r\n}\r\n\r\nexport const BENTOBOX_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\r\n  [ChainId.ROPSTEN]: '0x6BdD85290001C8Aef74f35A7606065FA15aD5ACF',\r\n  [ChainId.RINKEBY]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\r\n  [ChainId.GÖRLI]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\r\n  [ChainId.KOVAN]: '0x9A0D9920D92c178a58D99B455898Df2df22A2eE4',\r\n  [ChainId.FANTOM]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '0x0319000133d3AdA02600f0875d2cf03D442C3367',\r\n  [ChainId.MATIC_TESTNET]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\r\n  [ChainId.XDAI]: '0xE2d7F5dd869Fc7c126D21b13a9080e75a4bDb324',\r\n  [ChainId.BSC]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\r\n  [ChainId.BSC_TESTNET]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\r\n  [ChainId.ARBITRUM]: '0x74c764D41B77DBbb4fe771daB1939B00b146894A',\r\n  [ChainId.ARBITRUM_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '',\r\n  [ChainId.AVALANCHE]: '',\r\n  [ChainId.AVALANCHE_TESTNET]: '',\r\n  [ChainId.HECO]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\r\n  [ChainId.HECO_TESTNET]: '',\r\n  [ChainId.HARMONY]: '',\r\n  [ChainId.HARMONY_TESTNET]: '',\r\n  [ChainId.OKEX]: '',\r\n  [ChainId.OKEX_TESTNET]: '',\r\n  [ChainId.CELO]: '',\r\n  [ChainId.PALM]: '',\r\n  [ChainId.PALM_TESTNET]: ''\r\n}\r\n\r\nexport const KASHI_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\r\n  [ChainId.ROPSTEN]: '',\r\n  [ChainId.RINKEBY]: '',\r\n  [ChainId.GÖRLI]: '',\r\n  [ChainId.KOVAN]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\r\n  [ChainId.FANTOM]: '',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '0xB527C5295c4Bc348cBb3a2E96B2494fD292075a7',\r\n  [ChainId.MATIC_TESTNET]: '',\r\n  [ChainId.XDAI]: '0x7a6DA9903d0a481F40b8336c1463487BC8C0407e',\r\n  [ChainId.BSC]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\r\n  [ChainId.BSC_TESTNET]: '',\r\n  [ChainId.ARBITRUM]: '0xa010eE0226cd071BeBd8919A1F675cAE1f1f5D3e',\r\n  [ChainId.ARBITRUM_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '',\r\n  [ChainId.AVALANCHE]: '',\r\n  [ChainId.AVALANCHE_TESTNET]: '',\r\n  [ChainId.HECO]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\r\n  [ChainId.HECO_TESTNET]: '',\r\n  [ChainId.HARMONY]: '',\r\n  [ChainId.HARMONY_TESTNET]: '',\r\n  [ChainId.OKEX]: '',\r\n  [ChainId.OKEX_TESTNET]: '',\r\n  [ChainId.CELO]: '',\r\n  [ChainId.PALM]: '',\r\n  [ChainId.PALM_TESTNET]: ''\r\n}\r\n\r\nexport const SUSHISWAP_SWAPPER_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0x1766733112408b95239aD1951925567CB1203084',\r\n  [ChainId.ROPSTEN]: '',\r\n  [ChainId.RINKEBY]: '',\r\n  [ChainId.GÖRLI]: '',\r\n  [ChainId.KOVAN]: '',\r\n  [ChainId.FANTOM]: '',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '0xe9589382130Ded5DF2397E2fD7A3E9b41DD2701D',\r\n  [ChainId.MATIC_TESTNET]: '',\r\n  [ChainId.XDAI]: '0xE02BDb31C353CE95A1D74F81C93eEa70Bf7371B9',\r\n  [ChainId.BSC]: '0x1766733112408b95239aD1951925567CB1203084',\r\n  [ChainId.BSC_TESTNET]: '',\r\n  [ChainId.ARBITRUM]: '0x0bFcD5dD76218bF9e3BE8A1055f9e6D27E5745eb',\r\n  [ChainId.ARBITRUM_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '',\r\n  [ChainId.AVALANCHE]: '',\r\n  [ChainId.AVALANCHE_TESTNET]: '',\r\n  [ChainId.HECO]: '0x1766733112408b95239aD1951925567CB1203084',\r\n  [ChainId.HECO_TESTNET]: '',\r\n  [ChainId.HARMONY]: '',\r\n  [ChainId.HARMONY_TESTNET]: '',\r\n  [ChainId.OKEX]: '',\r\n  [ChainId.OKEX_TESTNET]: '',\r\n  [ChainId.CELO]: '',\r\n  [ChainId.PALM]: '',\r\n  [ChainId.PALM_TESTNET]: ''\r\n}\r\n\r\nexport const SUSHISWAP_MULTISWAPPER_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0x545820d5Cc05248da112419fEfb18522c63C8e12',\r\n  [ChainId.ROPSTEN]: '',\r\n  [ChainId.RINKEBY]: '',\r\n  [ChainId.GÖRLI]: '',\r\n  [ChainId.KOVAN]: '0xc0c1649b2c67f1a9f5ff1dd618188165e2555bcf',\r\n  [ChainId.FANTOM]: '',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '0x73BE093B84c773fe8eE0f76DDc0829E45c215415',\r\n  [ChainId.MATIC_TESTNET]: '',\r\n  [ChainId.XDAI]: '0x735f0FbEb3b6389986BcaAf073Af07D2F8be2b93',\r\n  [ChainId.BSC]: '0x86c655cAc122e9A2fd9Ae1f79Df27b30E357968c',\r\n  [ChainId.BSC_TESTNET]: '',\r\n  [ChainId.ARBITRUM]: '0xbe7D5968296843756109D42946D01195320922EF',\r\n  [ChainId.ARBITRUM_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '',\r\n  [ChainId.AVALANCHE]: '',\r\n  [ChainId.AVALANCHE_TESTNET]: '',\r\n  [ChainId.HECO]: '',\r\n  [ChainId.HECO_TESTNET]: '',\r\n  [ChainId.HARMONY]: '',\r\n  [ChainId.HARMONY_TESTNET]: '',\r\n  [ChainId.OKEX]: '',\r\n  [ChainId.OKEX_TESTNET]: '',\r\n  [ChainId.CELO]: '',\r\n  [ChainId.PALM]: '',\r\n  [ChainId.PALM_TESTNET]: ''\r\n}\r\n\r\nexport const SUSHISWAP_MULTI_EXACT_SWAPPER_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0xB527C5295c4Bc348cBb3a2E96B2494fD292075a7',\r\n  [ChainId.ROPSTEN]: '',\r\n  [ChainId.RINKEBY]: '',\r\n  [ChainId.GÖRLI]: '',\r\n  [ChainId.KOVAN]: '0x75AE0Aa596D39b20addC921DeB5EE3c96279dABE',\r\n  [ChainId.FANTOM]: '',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '0xDB6C4EDd9545d3b815dA85E6429B699c418886f9',\r\n  [ChainId.MATIC_TESTNET]: '',\r\n  [ChainId.XDAI]: '0x07b6e34EeCF38B02e83b6B4702699717e298967E',\r\n  [ChainId.BSC]: '0x1B16149Edaf1EFa6ADE6aEEF33e63C6e08c9bB1B',\r\n  [ChainId.BSC_TESTNET]: '',\r\n  [ChainId.ARBITRUM]: '0x860D841bfD1cfEf72A14B2b734005799F07dC7ED',\r\n  [ChainId.ARBITRUM_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '',\r\n  [ChainId.AVALANCHE]: '',\r\n  [ChainId.AVALANCHE_TESTNET]: '',\r\n  [ChainId.HECO]: '',\r\n  [ChainId.HECO_TESTNET]: '',\r\n  [ChainId.HARMONY]: '',\r\n  [ChainId.HARMONY_TESTNET]: '',\r\n  [ChainId.OKEX]: '',\r\n  [ChainId.OKEX_TESTNET]: '',\r\n  [ChainId.CELO]: '',\r\n  [ChainId.PALM]: '',\r\n  [ChainId.PALM_TESTNET]: ''\r\n}\r\n\r\nexport const PEGGED_ORACLE_ADDRESS = '0x6cbfbB38498Df0E1e7A4506593cDB02db9001564'\r\n\r\nexport const SUSHISWAP_TWAP_0_ORACLE_ADDRESS = '0x66F03B0d30838A3fee971928627ea6F59B236065'\r\n\r\nexport const SUSHISWAP_TWAP_1_ORACLE_ADDRESS = '0x0D51b575591F8f74a2763Ade75D3CDCf6789266f'\r\n\r\nexport const CHAINLINK_ORACLE_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB',\r\n  [ChainId.MATIC]: '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB',\r\n  [ChainId.XDAI]: '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB',\r\n  [ChainId.BSC]: '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB',\r\n  [ChainId.ARBITRUM]: '0xB2B5C26B6868be10fF77e4E233fD231ceB90162a'\r\n}\r\n\r\nexport const BORING_HELPER_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\r\n  [ChainId.ROPSTEN]: '',\r\n  [ChainId.RINKEBY]: '',\r\n  [ChainId.GÖRLI]: '',\r\n  [ChainId.KOVAN]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\r\n  [ChainId.FANTOM]: '',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '0xA77a7fD5a16237B85E0FAd02C51f459D18AE93Cd',\r\n  [ChainId.MATIC_TESTNET]: '',\r\n  [ChainId.XDAI]: '0x97e4a0fb71243A83A6FbaEF7Cf73617594e4cF2F',\r\n  [ChainId.BSC]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\r\n  [ChainId.BSC_TESTNET]: '',\r\n  [ChainId.ARBITRUM]: '0x37B3287292De241278fB5FCa514a756E0BE924f8',\r\n  [ChainId.ARBITRUM_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '',\r\n  [ChainId.AVALANCHE]: '',\r\n  [ChainId.AVALANCHE_TESTNET]: '',\r\n  [ChainId.HECO]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\r\n  [ChainId.HECO_TESTNET]: '',\r\n  [ChainId.HARMONY]: '',\r\n  [ChainId.HARMONY_TESTNET]: '',\r\n  [ChainId.OKEX]: '',\r\n  [ChainId.OKEX_TESTNET]: '',\r\n  [ChainId.CELO]: '',\r\n  [ChainId.PALM]: '',\r\n  [ChainId.PALM_TESTNET]: ''\r\n}\r\n\r\nexport const STOP_LIMIT_ORDER_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '',\r\n  [ChainId.ROPSTEN]: '',\r\n  [ChainId.RINKEBY]: '',\r\n  [ChainId.GÖRLI]: '',\r\n  [ChainId.KOVAN]: '0xce9365dB1C99897f04B3923C03ba9a5f80E8DB87',\r\n  [ChainId.FANTOM]: '',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '0x1aDb3Bd86bb01797667eC382a0BC6A9854b4005f',\r\n  [ChainId.MATIC_TESTNET]: '',\r\n  [ChainId.XDAI]: '',\r\n  [ChainId.BSC]: '',\r\n  [ChainId.BSC_TESTNET]: '',\r\n  [ChainId.ARBITRUM]: '',\r\n  [ChainId.ARBITRUM_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '',\r\n  [ChainId.AVALANCHE]: '',\r\n  [ChainId.AVALANCHE_TESTNET]: '',\r\n  [ChainId.HECO]: '',\r\n  [ChainId.HECO_TESTNET]: '',\r\n  [ChainId.HARMONY]: '',\r\n  [ChainId.HARMONY_TESTNET]: '',\r\n  [ChainId.OKEX]: '',\r\n  [ChainId.OKEX_TESTNET]: '',\r\n  [ChainId.CELO]: '',\r\n  [ChainId.PALM]: '',\r\n  [ChainId.PALM_TESTNET]: ''\r\n}\r\n\r\nexport const ARCHER_ROUTER_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0x9917C083FF9FbD29Df1367FBF7F2388A9a202431'\r\n}\r\n\r\nexport const MINICHEF_ADDRESS: AddressMap = {\r\n  [ChainId.MATIC]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\r\n  [ChainId.XDAI]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\r\n  [ChainId.HARMONY]: '0x67dA5f2FfaDDfF067AB9d5F025F8810634d84287',\r\n  [ChainId.ARBITRUM]: '0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3'\r\n}\r\n\r\nexport const WETH9_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\r\n  [ChainId.ROPSTEN]: '0xc778417E063141139Fce010982780140Aa0cD5Ab',\r\n  [ChainId.RINKEBY]: '0xc778417E063141139Fce010982780140Aa0cD5Ab',\r\n  [ChainId.GÖRLI]: '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6',\r\n  [ChainId.KOVAN]: '0xd0A1E359811322d97991E03f863a0C30C2cF029C',\r\n  [ChainId.ARBITRUM]: '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1',\r\n  [ChainId.ARBITRUM_TESTNET]: '0xf8456e5e6A225C2C1D74D8C9a4cB2B1d5dc1153b',\r\n  [ChainId.BSC]: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n  [ChainId.FANTOM]: '0x74b23882a30290451A17c44f4F05243b6b58C76d',\r\n  [ChainId.MATIC]: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\r\n  [ChainId.OKEX]: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n  [ChainId.HECO]: '0x64FF637fB478863B7468bc97D30a5bF3A428a1fD',\r\n  [ChainId.HARMONY]: '0x6983D1E6DEf3690C4d616b13597A09e6193EA013',\r\n  [ChainId.XDAI]: '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1',\r\n  [ChainId.AVALANCHE]: '0xf20d962a6c8f70c731bd838a3a388D7d48fA6e15'\r\n}\r\n\r\nexport const WNATIVE_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: WETH9_ADDRESS[ChainId.MAINNET],\r\n  [ChainId.ROPSTEN]: WETH9_ADDRESS[ChainId.ROPSTEN],\r\n  [ChainId.RINKEBY]: WETH9_ADDRESS[ChainId.RINKEBY],\r\n  [ChainId.GÖRLI]: WETH9_ADDRESS[ChainId.GÖRLI],\r\n  [ChainId.KOVAN]: WETH9_ADDRESS[ChainId.KOVAN],\r\n  [ChainId.ARBITRUM]: WETH9_ADDRESS[ChainId.ARBITRUM],\r\n  [ChainId.ARBITRUM_TESTNET]: WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET],\r\n  [ChainId.FANTOM]: '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83',\r\n  [ChainId.FANTOM_TESTNET]: '0xf1277d1Ed8AD466beddF92ef448A132661956621',\r\n  [ChainId.MATIC]: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\r\n  [ChainId.MATIC_TESTNET]: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\r\n  [ChainId.XDAI]: '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d',\r\n  [ChainId.BSC]: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n  [ChainId.BSC_TESTNET]: '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\r\n  [ChainId.MOONBEAM_TESTNET]: '0xe73763DB808ecCDC0E36bC8E32510ED126910394',\r\n  [ChainId.AVALANCHE]: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\r\n  [ChainId.AVALANCHE_TESTNET]: '0xd00ae08403B9bbb9124bB305C09058E32C39A48c',\r\n  [ChainId.HECO]: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\r\n  [ChainId.HECO_TESTNET]: '0x5B2DA6F42CA09C77D577a12BeaD0446148830687',\r\n  [ChainId.HARMONY]: '0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a',\r\n  [ChainId.HARMONY_TESTNET]: '0x7a2afac38517d512E55C0bCe3b6805c10a04D60F',\r\n  [ChainId.OKEX]: '0x8F8526dbfd6E38E3D8307702cA8469Bae6C56C15',\r\n  [ChainId.OKEX_TESTNET]: '0x2219845942d28716c0F7C605765fABDcA1a7d9E0',\r\n  [ChainId.CELO]: '0x471EcE3750Da237f93B8E339c536989b8978a438',\r\n  [ChainId.PALM]: '0xF98cABF0a963452C5536330408B2590567611a71',\r\n  [ChainId.MOONRIVER]: '0xf50225a84382c74CbdeA10b0c176f71fc3DE0C4d',\r\n  [ChainId.AURORA]: '',\r\n  [ChainId.AURORA_TESTNET]: '',\r\n  [ChainId.AURORA_PRIVATENET]: '0xC92B72ecf468D2642992b195bea99F9B9BB4A838'\r\n}\r\n\r\nexport const MASTERCHEF_V2_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0xEF0881eC094552b2e128Cf945EF17a6752B4Ec5d'\r\n}\r\n\r\nexport const ENS_REGISTRAR_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\r\n  [ChainId.GÖRLI]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\r\n  [ChainId.ROPSTEN]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\r\n  [ChainId.RINKEBY]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\r\n}\r\n\r\nexport const ZAPPER_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0xcff6eF0B9916682B37D80c19cFF8949bc1886bC2',\r\n  [ChainId.ROPSTEN]: '0xcff6eF0B9916682B37D80c19cFF8949bc1886bC2'\r\n}\r\n\r\nexport const MERKLE_DISTRIBUTOR_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0xcBE6B83e77cdc011Cc18F6f0Df8444E5783ed982',\r\n  [ChainId.ROPSTEN]: '0x84d1f7202e0e7dac211617017ca72a2cb5e2b955'\r\n}\r\n\r\nexport const MULTICALL2_ADDRESS: AddressMap = {\r\n  [ChainId.MAINNET]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\r\n  [ChainId.ROPSTEN]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\r\n  [ChainId.RINKEBY]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\r\n  [ChainId.GÖRLI]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\r\n  [ChainId.KOVAN]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\r\n  [ChainId.ARBITRUM]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\r\n  [ChainId.ARBITRUM_TESTNET]: '0xa501c031958F579dB7676fF1CE78AD305794d579',\r\n  [ChainId.CELO]: '0x9aac9048fC8139667D6a2597B902865bfdc225d3',\r\n  [ChainId.FANTOM]: '0x22D4cF72C45F8198CfbF4B568dBdB5A85e8DC0B5',\r\n  [ChainId.FANTOM_TESTNET]: '',\r\n  [ChainId.MATIC]: '0x02817C1e3543c2d908a590F5dB6bc97f933dB4BD',\r\n  [ChainId.MATIC_TESTNET]: '',\r\n  [ChainId.XDAI]: '0x67dA5f2FfaDDfF067AB9d5F025F8810634d84287',\r\n  [ChainId.BSC]: '0xa9193376D09C7f31283C54e56D013fCF370Cd9D9',\r\n  [ChainId.BSC_TESTNET]: '',\r\n  [ChainId.MOONBEAM_TESTNET]: '',\r\n  [ChainId.AVALANCHE]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\r\n  [ChainId.AVALANCHE_TESTNET]: '',\r\n  [ChainId.HECO]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\r\n  [ChainId.HECO_TESTNET]: '',\r\n  [ChainId.HARMONY]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\r\n  [ChainId.HARMONY_TESTNET]: '',\r\n  [ChainId.OKEX]: '0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3',\r\n  [ChainId.OKEX_TESTNET]: '',\r\n  [ChainId.PALM]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\r\n  [ChainId.MOONRIVER]: '0x270f2F35bED92B7A59eA5F08F6B3fd34c8D9D9b5',\r\n  [ChainId.AURORA]: '',\r\n  [ChainId.AURORA_TESTNET]: '',\r\n  [ChainId.AURORA_PRIVATENET]: '0x446C29FBFEF829F81E236a2376191F648dbEF995'\r\n  \r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\n// Functions that need accrue to be called\r\nexport const ACTION_ADD_ASSET = 1\r\nexport const ACTION_REPAY = 2\r\nexport const ACTION_REMOVE_ASSET = 3\r\nexport const ACTION_REMOVE_COLLATERAL = 4\r\nexport const ACTION_BORROW = 5\r\nexport const ACTION_GET_REPAY_SHARE = 6\r\nexport const ACTION_GET_REPAY_PART = 7\r\nexport const ACTION_ACCRUE = 8\r\n\r\n// Functions that don't need accrue to be called\r\nexport const ACTION_ADD_COLLATERAL = 10\r\nexport const ACTION_UPDATE_EXCHANGE_RATE = 11\r\n\r\n// Function on BentoBox\r\nexport const ACTION_BENTO_DEPOSIT = 20\r\nexport const ACTION_BENTO_WITHDRAW = 21\r\nexport const ACTION_BENTO_TRANSFER = 22\r\nexport const ACTION_BENTO_TRANSFER_MULTIPLE = 23\r\nexport const ACTION_BENTO_SETAPPROVAL = 24\r\n\r\n// Any external call (except to BentoBox)\r\nexport const ACTION_CALL = 30\r\n\r\nexport const MINIMUM_TARGET_UTILIZATION = BigNumber.from('700000000000000000') // 70%\r\n\r\nexport const MAXIMUM_TARGET_UTILIZATION = BigNumber.from('800000000000000000') // 80%\r\n\r\nexport const UTILIZATION_PRECISION = BigNumber.from('1000000000000000000')\r\n\r\nexport const FULL_UTILIZATION = BigNumber.from('1000000000000000000')\r\n\r\nexport const FULL_UTILIZATION_MINUS_MAX = FULL_UTILIZATION.sub(MAXIMUM_TARGET_UTILIZATION)\r\n\r\nexport const STARTING_INTEREST_PER_YEAR = BigNumber.from(317097920)\r\n  .mul(BigNumber.from(60))\r\n  .mul(BigNumber.from(60))\r\n  .mul(BigNumber.from(24))\r\n  .mul(BigNumber.from(365)) // approx 1% APR\r\n\r\nexport const MINIMUM_INTEREST_PER_YEAR = BigNumber.from(79274480)\r\n  .mul(BigNumber.from(60))\r\n  .mul(BigNumber.from(60))\r\n  .mul(BigNumber.from(24))\r\n  .mul(BigNumber.from(365)) // approx 0.25% APR\r\n\r\nexport const MAXIMUM_INTEREST_PER_YEAR = BigNumber.from(317097920000)\r\n  .mul(BigNumber.from(60))\r\n  .mul(BigNumber.from(60))\r\n  .mul(BigNumber.from(24))\r\n  .mul(BigNumber.from(365)) // approx 1000% APR\r\n\r\nexport const INTEREST_ELASTICITY = BigNumber.from('28800000000000000000000000000000000000000') // Half or double in 28800 seconds (8 hours) if linear\r\n\r\nexport const FACTOR_PRECISION = BigNumber.from('1000000000000000000')\r\n\r\nexport const PROTOCOL_FEE = BigNumber.from('10000') // 10%\r\n\r\nexport const PROTOCOL_FEE_DIVISOR = BigNumber.from('100000')\r\n","import { Currency } from './Currency'\r\nimport { Token } from './Token'\r\nimport invariant from 'tiny-invariant'\r\n\r\n/**\r\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\r\n */\r\nexport abstract class AbstractCurrency {\r\n  /**\r\n   * Returns whether the currency is native to the chain and must be wrapped (e.g. Ether)\r\n   */\r\n  public abstract readonly isNative: boolean\r\n  /**\r\n   * Returns whether the currency is a token that is usable in Uniswap without wrapping\r\n   */\r\n  public abstract readonly isToken: boolean\r\n\r\n  /**\r\n   * The chain ID on which this currency resides\r\n   */\r\n  public readonly chainId: number\r\n  /**\r\n   * The decimals used in representing currency amounts\r\n   */\r\n  public readonly decimals: number\r\n  /**\r\n   * The symbol of the currency, i.e. a short textual non-unique identifier\r\n   */\r\n  public readonly symbol?: string\r\n  /**\r\n   * The name of the currency, i.e. a descriptive textual non-unique identifier\r\n   */\r\n  public readonly name?: string\r\n\r\n  /**\r\n   * Constructs an instance of the base class `BaseCurrency`.\r\n   * @param chainId the chain ID on which this currency resides\r\n   * @param decimals decimals of the currency\r\n   * @param symbol symbol of the currency\r\n   * @param name of the currency\r\n   */\r\n  protected constructor(chainId: number, decimals: number, symbol?: string, name?: string) {\r\n    invariant(Number.isSafeInteger(chainId), 'CHAIN_ID')\r\n    invariant(decimals >= 0 && decimals < 255 && Number.isInteger(decimals), 'DECIMALS')\r\n\r\n    this.chainId = chainId\r\n    this.decimals = decimals\r\n    this.symbol = symbol\r\n    this.name = name\r\n  }\r\n\r\n  /**\r\n   * Returns whether this currency is functionally equivalent to the other currency\r\n   * @param other the other currency\r\n   */\r\n  public abstract equals(other: Currency): boolean\r\n\r\n  /**\r\n   * Return the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must\r\n   * implement this to be used in Uniswap\r\n   */\r\n  public abstract get wrapped(): Token\r\n}\r\n","import { AbstractCurrency } from './AbstractCurrency'\r\n\r\n/**\r\n * Represents the native currency of the chain on which it resides, e.g.\r\n */\r\nexport abstract class NativeCurrency extends AbstractCurrency {\r\n  public readonly isNative: true = true\r\n  public readonly isToken: false = false\r\n}\r\n","import { getAddress } from '@ethersproject/address'\r\nimport invariant from 'tiny-invariant'\r\nimport warning from 'tiny-warning'\r\n\r\n// warns if addresses are not checksummed\r\nexport function validateAndParseAddress(address: string): string {\r\n  try {\r\n    const checksummedAddress = getAddress(address)\r\n    warning(address === checksummedAddress, `${address} is not checksummed.`)\r\n    return checksummedAddress\r\n  } catch (error) {\r\n    invariant(false, `${address} is not a valid address.`)\r\n  }\r\n}\r\n","import { AbstractCurrency } from './AbstractCurrency'\r\nimport { ChainId } from '../enums'\r\nimport { Currency } from './Currency'\r\nimport invariant from 'tiny-invariant'\r\nimport { validateAndParseAddress } from '../functions/validateAndParseAddress'\r\n\r\n/**\r\n * Represents an ERC20 token with a unique address and some metadata.\r\n */\r\nexport class Token extends AbstractCurrency {\r\n  public readonly chainId: ChainId\r\n  public readonly address: string\r\n\r\n  public readonly isNative: false = false\r\n  public readonly isToken: true = true\r\n\r\n  public constructor(chainId: ChainId, address: string, decimals: number, symbol?: string, name?: string) {\r\n    super(chainId, decimals, symbol, name)\r\n    this.chainId = chainId\r\n    this.address = validateAndParseAddress(address)\r\n  }\r\n\r\n  /**\r\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\r\n   * @param other other token to compare\r\n   */\r\n  public equals(other: Currency): boolean {\r\n    return other.isToken && this.chainId === other.chainId && this.address === other.address\r\n  }\r\n\r\n  /**\r\n   * Returns true if the address of this token sorts before the address of the other token\r\n   * @param other other token to compare\r\n   * @throws if the tokens have the same address\r\n   * @throws if the tokens are on different chains\r\n   */\r\n  public sortsBefore(other: Token): boolean {\r\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\r\n    invariant(this.address !== other.address, 'ADDRESSES')\r\n    return this.address.toLowerCase() < other.address.toLowerCase()\r\n  }\r\n\r\n  /**\r\n   * Return this token, which does not need to be wrapped\r\n   */\r\n  public get wrapped(): Token {\r\n    return this\r\n  }\r\n}\r\n\r\n/**\r\n * Compares two currencies for equality\r\n */\r\nexport function currencyEquals(currencyA: Currency, currencyB: Currency): boolean {\r\n  if (currencyA instanceof Token && currencyB instanceof Token) {\r\n    return currencyA.equals(currencyB)\r\n  } else if (currencyA instanceof Token) {\r\n    return false\r\n  } else if (currencyB instanceof Token) {\r\n    return false\r\n  } else {\r\n    return currencyA === currencyB\r\n  }\r\n}\r\n","import { USDC_ADDRESS, WETH9_ADDRESS, WNATIVE_ADDRESS } from './addresses'\r\n\r\nimport { ChainId } from '../enums'\r\nimport { Token } from '../entities/Token'\r\nimport { TokenMap } from '../types/TokenMap'\r\n\r\nexport const USDC: TokenMap = {\r\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, USDC_ADDRESS[ChainId.MAINNET], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, USDC_ADDRESS[ChainId.ROPSTEN], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, USDC_ADDRESS[ChainId.KOVAN], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.MATIC]: new Token(ChainId.MATIC, USDC_ADDRESS[ChainId.MATIC], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, USDC_ADDRESS[ChainId.FANTOM], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.BSC]: new Token(ChainId.BSC, USDC_ADDRESS[ChainId.BSC], 18, 'USDC', 'USD Coin'),\r\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, USDC_ADDRESS[ChainId.HARMONY], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.HECO]: new Token(ChainId.HECO, USDC_ADDRESS[ChainId.HECO], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.OKEX]: new Token(ChainId.OKEX, USDC_ADDRESS[ChainId.OKEX], 18, 'USDC', 'USD Coin'),\r\n  [ChainId.XDAI]: new Token(ChainId.XDAI, USDC_ADDRESS[ChainId.XDAI], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.ARBITRUM]: new Token(ChainId.ARBITRUM, USDC_ADDRESS[ChainId.ARBITRUM], 6, 'USDC', 'USD Coin'),\r\n  [ChainId.AURORA]: new Token(ChainId.AURORA, USDC_ADDRESS[ChainId.AURORA], 6, 'USDC', 'USD Coin'),\r\n}\r\n\r\nexport const WETH9: TokenMap = {\r\n  [ChainId.MAINNET]: new Token(ChainId.MAINNET, WETH9_ADDRESS[ChainId.MAINNET], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, WETH9_ADDRESS[ChainId.ROPSTEN], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, WETH9_ADDRESS[ChainId.RINKEBY], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, WETH9_ADDRESS[ChainId.GÖRLI], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, WETH9_ADDRESS[ChainId.KOVAN], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.ARBITRUM]: new Token(ChainId.ARBITRUM, WETH9_ADDRESS[ChainId.ARBITRUM], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.ARBITRUM_TESTNET]: new Token(\r\n    ChainId.ARBITRUM_TESTNET,\r\n    WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET],\r\n    18,\r\n    'WETH',\r\n    'Wrapped Ether'\r\n  ),\r\n  [ChainId.BSC]: new Token(ChainId.BSC, WETH9_ADDRESS[ChainId.BSC], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, WETH9_ADDRESS[ChainId.FANTOM], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.MATIC]: new Token(ChainId.MATIC, WETH9_ADDRESS[ChainId.MATIC], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.OKEX]: new Token(ChainId.OKEX, WETH9_ADDRESS[ChainId.OKEX], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.HECO]: new Token(ChainId.HECO, WETH9_ADDRESS[ChainId.HECO], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, WETH9_ADDRESS[ChainId.HARMONY], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.XDAI]: new Token(ChainId.XDAI, WETH9_ADDRESS[ChainId.XDAI], 18, 'WETH', 'Wrapped Ether'),\r\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, WETH9_ADDRESS[ChainId.AVALANCHE], 18, 'WETH', 'Wrapped Ether')\r\n}\r\n\r\nexport const WNATIVE: TokenMap = {\r\n  [ChainId.MAINNET]: WETH9[ChainId.MAINNET],\r\n  [ChainId.ROPSTEN]: WETH9[ChainId.ROPSTEN],\r\n  [ChainId.RINKEBY]: WETH9[ChainId.RINKEBY],\r\n  [ChainId.GÖRLI]: WETH9[ChainId.GÖRLI],\r\n  [ChainId.KOVAN]: WETH9[ChainId.KOVAN],\r\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, WNATIVE_ADDRESS[ChainId.FANTOM], 18, 'WFTM', 'Wrapped FTM'),\r\n  [ChainId.FANTOM_TESTNET]: new Token(\r\n    ChainId.FANTOM_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.FANTOM_TESTNET],\r\n    18,\r\n    'FTM',\r\n    'Wrapped FTM'\r\n  ),\r\n  [ChainId.MATIC]: new Token(ChainId.MATIC, WNATIVE_ADDRESS[ChainId.MATIC], 18, 'WMATIC', 'Wrapped Matic'),\r\n  [ChainId.MATIC_TESTNET]: new Token(\r\n    ChainId.MATIC_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.MATIC_TESTNET],\r\n    18,\r\n    'WMATIC',\r\n    'Wrapped Matic'\r\n  ),\r\n  [ChainId.XDAI]: new Token(ChainId.XDAI, WNATIVE_ADDRESS[ChainId.XDAI], 18, 'WXDAI', 'Wrapped xDai'),\r\n  [ChainId.BSC]: new Token(ChainId.BSC, WNATIVE_ADDRESS[ChainId.BSC], 18, 'WBNB', 'Wrapped BNB'),\r\n  [ChainId.BSC_TESTNET]: new Token(\r\n    ChainId.BSC_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.BSC_TESTNET],\r\n    18,\r\n    'WBNB',\r\n    'Wrapped BNB'\r\n  ),\r\n  [ChainId.ARBITRUM]: WETH9[ChainId.ARBITRUM],\r\n  [ChainId.ARBITRUM_TESTNET]: WETH9[ChainId.ARBITRUM_TESTNET],\r\n  [ChainId.MOONBEAM_TESTNET]: new Token(\r\n    ChainId.MOONBEAM_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.MOONBEAM_TESTNET],\r\n    18,\r\n    'WETH',\r\n    'Wrapped Ether'\r\n  ),\r\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, WNATIVE_ADDRESS[ChainId.AVALANCHE], 18, 'WAVAX', 'Wrapped AVAX'),\r\n  [ChainId.AVALANCHE_TESTNET]: new Token(\r\n    ChainId.AVALANCHE_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.AVALANCHE_TESTNET],\r\n    18,\r\n    'WAVAX',\r\n    'Wrapped AVAX'\r\n  ),\r\n  [ChainId.HECO]: new Token(ChainId.HECO, WNATIVE_ADDRESS[ChainId.HECO], 18, 'WHT', 'Wrapped HT'),\r\n  [ChainId.HECO_TESTNET]: new Token(\r\n    ChainId.HECO_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.HECO_TESTNET],\r\n    18,\r\n    'WHT',\r\n    'Wrapped HT'\r\n  ),\r\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, WNATIVE_ADDRESS[ChainId.HARMONY], 18, 'WONE', 'Wrapped ONE'),\r\n  [ChainId.HARMONY_TESTNET]: new Token(\r\n    ChainId.HARMONY_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.HARMONY_TESTNET],\r\n    18,\r\n    'WONE',\r\n    'Wrapped ONE'\r\n  ),\r\n  [ChainId.OKEX]: new Token(ChainId.OKEX, WNATIVE_ADDRESS[ChainId.OKEX], 18, 'WOKT', 'Wrapped OKExChain'),\r\n  [ChainId.OKEX_TESTNET]: new Token(\r\n    ChainId.OKEX_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.OKEX_TESTNET],\r\n    18,\r\n    'WOKT',\r\n    'Wrapped OKExChain'\r\n  ),\r\n  [ChainId.CELO]: new Token(ChainId.CELO, WNATIVE_ADDRESS[ChainId.CELO], 18, 'CELO', 'Celo'),\r\n  [ChainId.PALM]: new Token(ChainId.PALM, WNATIVE_ADDRESS[ChainId.PALM], 18, 'WPALM', 'Wrapped Palm'),\r\n  [ChainId.MOONRIVER]: new Token(\r\n    ChainId.MOONRIVER,\r\n    WNATIVE_ADDRESS[ChainId.MOONRIVER],\r\n    18,\r\n    'WMOVR',\r\n    'Wrapped Moonriver'\r\n  ),\r\n  [ChainId.AURORA]: new Token(\r\n    ChainId.AURORA,\r\n    WNATIVE_ADDRESS[ChainId.AURORA],\r\n    18,\r\n    'WETH',\r\n    'Wrapped ETH'\r\n  ),\r\n  [ChainId.AURORA_TESTNET]: new Token(\r\n    ChainId.AURORA_TESTNET,\r\n    WNATIVE_ADDRESS[ChainId.AURORA_TESTNET],\r\n    18,\r\n    'WETH',\r\n    'Wrapped ETH'\r\n  ),\r\n  [ChainId.AURORA_PRIVATENET]: new Token(\r\n    ChainId.AURORA_PRIVATENET,\r\n    WNATIVE_ADDRESS[ChainId.AURORA_PRIVATENET],\r\n    18,\r\n    'WETH',\r\n    'Wrapped ETH'\r\n  )\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Avalanche extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'AVAX', 'Avalanche')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Avalanche } = {}\r\n\r\n  public static onChain(chainId: number): Avalanche {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Avalanche(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Binance extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'BNB', 'Binance Coin')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Binance } = {}\r\n\r\n  public static onChain(chainId: number): Binance {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Binance(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Celo extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'CELO', 'Celo')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wcelo = WNATIVE[this.chainId]\r\n    invariant(!!wcelo, 'WRAPPED')\r\n    return wcelo\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Celo } = {}\r\n\r\n  public static onChain(chainId: number): Celo {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Celo(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WETH9 } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\n/**\r\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\r\n */\r\nexport class Ether extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'ETH', 'Ether')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const weth9 = WETH9[this.chainId]\r\n    invariant(!!weth9, 'WRAPPED')\r\n    return weth9\r\n  }\r\n\r\n  private static _etherCache: { [chainId: number]: Ether } = {}\r\n\r\n  public static onChain(chainId: number): Ether {\r\n    return this._etherCache[chainId] ?? (this._etherCache[chainId] = new Ether(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Fantom extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'FTM', 'Fantom')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Fantom } = {}\r\n\r\n  public static onChain(chainId: number): Fantom {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Fantom(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Harmony extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'ONE', 'Harmony')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Harmony } = {}\r\n\r\n  public static onChain(chainId: number): Harmony {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Harmony(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Heco extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'HT', 'Huobi Token')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Heco } = {}\r\n\r\n  public static onChain(chainId: number): Heco {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Heco(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Matic extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'MATIC', 'Matic')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Matic } = {}\r\n\r\n  public static onChain(chainId: number): Matic {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Matic(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Movr extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'MOVR', 'Moonriver')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Movr } = {}\r\n\r\n  public static onChain(chainId: number): Movr {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Movr(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Okex extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'OKT', 'OKExChain')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Okex } = {}\r\n\r\n  public static onChain(chainId: number): Okex {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Okex(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class xDai extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'XDAI', 'xDai')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: xDai } = {}\r\n\r\n  public static onChain(chainId: number): xDai {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new xDai(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Palm extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'PALM', 'Palm')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Palm } = {}\r\n\r\n  public static onChain(chainId: number): Palm {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Palm(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import { Currency } from '../Currency'\r\nimport { NativeCurrency } from '../NativeCurrency'\r\nimport { Token } from '../Token'\r\nimport { WNATIVE } from '../../constants/tokens'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Aurora extends NativeCurrency {\r\n  protected constructor(chainId: number) {\r\n    super(chainId, 18, 'ETH', 'Aurora')\r\n  }\r\n\r\n  public get wrapped(): Token {\r\n    const wnative = WNATIVE[this.chainId]\r\n    invariant(!!wnative, 'WRAPPED')\r\n    return wnative\r\n  }\r\n\r\n  private static _cache: { [chainId: number]: Aurora } = {}\r\n\r\n  public static onChain(chainId: number): Aurora {\r\n    return this._cache[chainId] ?? (this._cache[chainId] = new Aurora(chainId))\r\n  }\r\n\r\n  public equals(other: Currency): boolean {\r\n    return other.isNative && other.chainId === this.chainId\r\n  }\r\n}\r\n","import {\r\n  Aurora,\r\n  Avalanche,\r\n  Binance,\r\n  Celo,\r\n  Ether,\r\n  Fantom,\r\n  Harmony,\r\n  Heco,\r\n  Matic,\r\n  Movr,\r\n  Okex,\r\n  Palm,\r\n  xDai\r\n} from '../entities/Native'\r\n\r\nimport { ChainId } from '../enums'\r\n\r\nexport const NATIVE = {\r\n  [ChainId.MAINNET]: Ether.onChain(ChainId.MAINNET),\r\n  [ChainId.ROPSTEN]: Ether.onChain(ChainId.ROPSTEN),\r\n  [ChainId.RINKEBY]: Ether.onChain(ChainId.RINKEBY),\r\n  [ChainId.GÖRLI]: Ether.onChain(ChainId.GÖRLI),\r\n  [ChainId.KOVAN]: Ether.onChain(ChainId.KOVAN),\r\n  [ChainId.FANTOM]: Fantom.onChain(ChainId.FANTOM),\r\n  [ChainId.FANTOM_TESTNET]: Fantom.onChain(ChainId.FANTOM_TESTNET),\r\n  [ChainId.MATIC]: Matic.onChain(ChainId.MATIC),\r\n  [ChainId.MATIC_TESTNET]: Matic.onChain(ChainId.MATIC_TESTNET),\r\n  [ChainId.XDAI]: xDai.onChain(ChainId.XDAI),\r\n  [ChainId.BSC]: Binance.onChain(ChainId.BSC),\r\n  [ChainId.BSC_TESTNET]: Binance.onChain(ChainId.BSC_TESTNET),\r\n  // [ChainId.MOONBEAM_TESTNET]: Currency.GLMR,\r\n  [ChainId.ARBITRUM]: Ether.onChain(ChainId.ARBITRUM),\r\n  [ChainId.AVALANCHE]: Avalanche.onChain(ChainId.AVALANCHE),\r\n  [ChainId.AVALANCHE_TESTNET]: Avalanche.onChain(ChainId.AVALANCHE_TESTNET),\r\n  [ChainId.HECO]: Heco.onChain(ChainId.HECO),\r\n  [ChainId.HECO_TESTNET]: Heco.onChain(ChainId.HECO_TESTNET),\r\n  [ChainId.HARMONY]: Harmony.onChain(ChainId.HARMONY),\r\n  [ChainId.HARMONY_TESTNET]: Harmony.onChain(ChainId.HARMONY_TESTNET),\r\n  [ChainId.OKEX]: Okex.onChain(ChainId.OKEX),\r\n  [ChainId.OKEX_TESTNET]: Okex.onChain(ChainId.OKEX_TESTNET),\r\n  [ChainId.CELO]: Celo.onChain(ChainId.CELO),\r\n  [ChainId.PALM]: Palm.onChain(ChainId.PALM),\r\n  [ChainId.MOONRIVER]: Movr.onChain(ChainId.MOONRIVER),\r\n  [ChainId.AURORA]: Aurora.onChain(ChainId.AURORA),\r\n  [ChainId.AURORA_TESTNET]: Aurora.onChain(ChainId.AURORA_TESTNET),\r\n  [ChainId.AURORA_PRIVATENET]: Aurora.onChain(ChainId.AURORA_PRIVATENET)\r\n}\r\n","import JSBI from 'jsbi'\r\n\r\nexport const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\r\n\r\n// exports for internal consumption\r\nexport const ZERO = JSBI.BigInt(0)\r\nexport const ONE = JSBI.BigInt(1)\r\nexport const TWO = JSBI.BigInt(2)\r\nexport const THREE = JSBI.BigInt(3)\r\nexport const FIVE = JSBI.BigInt(5)\r\nexport const TEN = JSBI.BigInt(10)\r\nexport const _100 = JSBI.BigInt(100)\r\nexport const _997 = JSBI.BigInt(997)\r\nexport const _1000 = JSBI.BigInt(1000)\r\n","import JSBI from 'jsbi'\r\n\r\nexport * from './addresses'\r\nexport * from './kashi'\r\nexport * from './natives'\r\nexport * from './numbers'\r\nexport * from './tokens'\r\n\r\nexport const INIT_CODE_HASH: string = '0xf1c21a825f13eff153022ddea53156462dd79972b6f88adf06f79ca8b042c3c1'\r\n\r\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000)\r\n\r\nexport enum SolidityType {\r\n  uint8 = 'uint8',\r\n  uint256 = 'uint256'\r\n}\r\n\r\nexport const SOLIDITY_TYPE_MAXIMA = {\r\n  [SolidityType.uint8]: JSBI.BigInt('0xff'),\r\n  [SolidityType.uint256]: JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\r\n}\r\n\r\nexport const LAMBDA_URL = 'https://9epjsvomc4.execute-api.us-east-1.amazonaws.com/dev'\r\n\r\nexport const SOCKET_URL = 'wss://hfimt374ge.execute-api.us-east-1.amazonaws.com/dev'\r\n","// see https://stackoverflow.com/a/41102306\r\nconst CAN_SET_PROTOTYPE = 'setPrototypeOf' in Object\r\n\r\n/**\r\n * Indicates that the pair has insufficient reserves for a desired output amount. I.e. the amount of output cannot be\r\n * obtained by sending any amount of input.\r\n */\r\nexport class InsufficientReservesError extends Error {\r\n  public readonly isInsufficientReservesError: true = true\r\n\r\n  public constructor() {\r\n    super()\r\n    this.name = this.constructor.name\r\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\r\n  }\r\n}\r\n\r\n/**\r\n * Indicates that the input amount is too small to produce any amount of output. I.e. the amount of input sent is less\r\n * than the price of a single unit of output after fees.\r\n */\r\nexport class InsufficientInputAmountError extends Error {\r\n  public readonly isInsufficientInputAmountError: true = true\r\n\r\n  public constructor() {\r\n    super()\r\n    this.name = this.constructor.name\r\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\r\n  }\r\n}\r\n","import _Big, { RoundingMode } from 'big.js'\r\n\r\nimport { BigintIsh } from '../types'\r\nimport JSBI from 'jsbi'\r\nimport { Rounding } from '../enums'\r\nimport _Decimal from 'decimal.js-light'\r\nimport invariant from 'tiny-invariant'\r\nimport toFormat from 'toformat'\r\n\r\nconst Decimal = toFormat(_Decimal)\r\nconst Big = toFormat(_Big)\r\n\r\nBig.strict = true\r\n\r\nconst toSignificantRounding = {\r\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\r\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\r\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP\r\n}\r\n\r\nconst toFixedRounding = {\r\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\r\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\r\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp\r\n}\r\n\r\nexport class Fraction {\r\n  public readonly numerator: JSBI\r\n  public readonly denominator: JSBI\r\n\r\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = JSBI.BigInt(1)) {\r\n    this.numerator = JSBI.BigInt(numerator)\r\n    this.denominator = JSBI.BigInt(denominator)\r\n  }\r\n\r\n  private static tryParseFraction(fractionish: BigintIsh | Fraction): Fraction {\r\n    if (fractionish instanceof JSBI || typeof fractionish === 'number' || typeof fractionish === 'string')\r\n      return new Fraction(fractionish)\r\n\r\n    if ('numerator' in fractionish && 'denominator' in fractionish) return fractionish\r\n    throw new Error('Could not parse fraction')\r\n  }\r\n\r\n  // performs floor division\r\n  public get quotient(): JSBI {\r\n    return JSBI.divide(this.numerator, this.denominator)\r\n  }\r\n\r\n  // remainder after floor division\r\n  public get remainder(): Fraction {\r\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\r\n  }\r\n\r\n  public invert(): Fraction {\r\n    return new Fraction(this.denominator, this.numerator)\r\n  }\r\n\r\n  public add(other: Fraction | BigintIsh): Fraction {\r\n    const otherParsed = Fraction.tryParseFraction(other)\r\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\r\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\r\n    }\r\n    return new Fraction(\r\n      JSBI.add(\r\n        JSBI.multiply(this.numerator, otherParsed.denominator),\r\n        JSBI.multiply(otherParsed.numerator, this.denominator)\r\n      ),\r\n      JSBI.multiply(this.denominator, otherParsed.denominator)\r\n    )\r\n  }\r\n\r\n  public subtract(other: Fraction | BigintIsh): Fraction {\r\n    const otherParsed = Fraction.tryParseFraction(other)\r\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\r\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\r\n    }\r\n    return new Fraction(\r\n      JSBI.subtract(\r\n        JSBI.multiply(this.numerator, otherParsed.denominator),\r\n        JSBI.multiply(otherParsed.numerator, this.denominator)\r\n      ),\r\n      JSBI.multiply(this.denominator, otherParsed.denominator)\r\n    )\r\n  }\r\n\r\n  public lessThan(other: Fraction | BigintIsh): boolean {\r\n    const otherParsed = Fraction.tryParseFraction(other)\r\n    return JSBI.lessThan(\r\n      JSBI.multiply(this.numerator, otherParsed.denominator),\r\n      JSBI.multiply(otherParsed.numerator, this.denominator)\r\n    )\r\n  }\r\n\r\n  public equalTo(other: Fraction | BigintIsh): boolean {\r\n    const otherParsed = Fraction.tryParseFraction(other)\r\n    return JSBI.equal(\r\n      JSBI.multiply(this.numerator, otherParsed.denominator),\r\n      JSBI.multiply(otherParsed.numerator, this.denominator)\r\n    )\r\n  }\r\n\r\n  public greaterThan(other: Fraction | BigintIsh): boolean {\r\n    const otherParsed = Fraction.tryParseFraction(other)\r\n    return JSBI.greaterThan(\r\n      JSBI.multiply(this.numerator, otherParsed.denominator),\r\n      JSBI.multiply(otherParsed.numerator, this.denominator)\r\n    )\r\n  }\r\n\r\n  public multiply(other: Fraction | BigintIsh): Fraction {\r\n    const otherParsed = Fraction.tryParseFraction(other)\r\n    return new Fraction(\r\n      JSBI.multiply(this.numerator, otherParsed.numerator),\r\n      JSBI.multiply(this.denominator, otherParsed.denominator)\r\n    )\r\n  }\r\n\r\n  public divide(other: Fraction | BigintIsh): Fraction {\r\n    const otherParsed = Fraction.tryParseFraction(other)\r\n    return new Fraction(\r\n      JSBI.multiply(this.numerator, otherParsed.denominator),\r\n      JSBI.multiply(this.denominator, otherParsed.numerator)\r\n    )\r\n  }\r\n\r\n  public toSignificant(\r\n    significantDigits: number,\r\n    format: object = { groupSeparator: '' },\r\n    rounding: Rounding = Rounding.ROUND_HALF_UP\r\n  ): string {\r\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\r\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\r\n\r\n    Decimal.set({\r\n      precision: significantDigits + 1,\r\n      rounding: toSignificantRounding[rounding]\r\n    })\r\n    const quotient = new Decimal(this.numerator.toString())\r\n      .div(this.denominator.toString())\r\n      .toSignificantDigits(significantDigits)\r\n    return quotient.toFormat(quotient.decimalPlaces(), format)\r\n  }\r\n\r\n  public toFixed(\r\n    decimalPlaces: number,\r\n    format: object = { groupSeparator: '' },\r\n    rounding: Rounding = Rounding.ROUND_HALF_UP\r\n  ): string {\r\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\r\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\r\n\r\n    Big.DP = decimalPlaces\r\n    Big.RM = toFixedRounding[rounding]\r\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\r\n  }\r\n\r\n  /**\r\n   * Helper method for converting any super class back to a fraction\r\n   */\r\n  public get asFraction(): Fraction {\r\n    return new Fraction(this.numerator, this.denominator)\r\n  }\r\n}\r\n","import { BigintIsh } from '../types'\r\nimport { Currency } from './Currency'\r\nimport { Fraction } from './Fraction'\r\nimport JSBI from 'jsbi'\r\nimport { MaxUint256 } from '../constants'\r\nimport { Rounding } from '../enums'\r\nimport { Token } from './Token'\r\nimport _Big from 'big.js'\r\nimport invariant from 'tiny-invariant'\r\nimport toFormat from 'toformat'\r\n\r\nconst Big = toFormat(_Big)\r\n\r\nBig.strict = true\r\n\r\nexport class CurrencyAmount<T extends Currency> extends Fraction {\r\n  public readonly currency: T\r\n  public readonly decimalScale: JSBI\r\n\r\n  /**\r\n   * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\r\n   * @param currency the currency in the amount\r\n   * @param rawAmount the raw token or ether amount\r\n   */\r\n  public static fromRawAmount<T extends Currency>(currency: T, rawAmount: BigintIsh): CurrencyAmount<T> {\r\n    return new CurrencyAmount(currency, rawAmount)\r\n  }\r\n\r\n  /**\r\n   * Construct a currency amount with a denominator that is not equal to 1\r\n   * @param currency the currency\r\n   * @param numerator the numerator of the fractional token amount\r\n   * @param denominator the denominator of the fractional token amount\r\n   */\r\n  public static fromFractionalAmount<T extends Currency>(\r\n    currency: T,\r\n    numerator: BigintIsh,\r\n    denominator: BigintIsh\r\n  ): CurrencyAmount<T> {\r\n    return new CurrencyAmount(currency, numerator, denominator)\r\n  }\r\n\r\n  protected constructor(currency: T, numerator: BigintIsh, denominator?: BigintIsh) {\r\n    super(numerator, denominator)\r\n    invariant(JSBI.lessThanOrEqual(this.quotient, MaxUint256), 'AMOUNT')\r\n    this.currency = currency\r\n    this.decimalScale = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(currency.decimals))\r\n  }\r\n\r\n  public add(other: CurrencyAmount<T>): CurrencyAmount<T> {\r\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\r\n    const added = super.add(other)\r\n    return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator)\r\n  }\r\n\r\n  public subtract(other: CurrencyAmount<T>): CurrencyAmount<T> {\r\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\r\n    const subtracted = super.subtract(other)\r\n    return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator)\r\n  }\r\n\r\n  public multiply(other: Fraction | BigintIsh): CurrencyAmount<T> {\r\n    const multiplied = super.multiply(other)\r\n    return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator)\r\n  }\r\n\r\n  public divide(other: Fraction | BigintIsh): CurrencyAmount<T> {\r\n    const divided = super.divide(other)\r\n    return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator)\r\n  }\r\n\r\n  public toSignificant(\r\n    significantDigits: number = 6,\r\n    format?: object,\r\n    rounding: Rounding = Rounding.ROUND_DOWN\r\n  ): string {\r\n    return super.divide(this.decimalScale).toSignificant(significantDigits, format, rounding)\r\n  }\r\n\r\n  public toFixed(\r\n    decimalPlaces: number = this.currency.decimals,\r\n    format?: object,\r\n    rounding: Rounding = Rounding.ROUND_DOWN\r\n  ): string {\r\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\r\n    return super.divide(this.decimalScale).toFixed(decimalPlaces, format, rounding)\r\n  }\r\n\r\n  public toExact(format: object = { groupSeparator: '' }): string {\r\n    Big.DP = this.currency.decimals\r\n    return new Big(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format)\r\n  }\r\n\r\n  public get wrapped(): CurrencyAmount<Token> {\r\n    if (this.currency.isToken) return this as CurrencyAmount<Token>\r\n    return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator)\r\n  }\r\n}\r\n","import { BigintIsh } from '../types'\r\nimport { Currency } from './Currency'\r\nimport { CurrencyAmount } from './CurrencyAmount'\r\nimport { Fraction } from './Fraction'\r\nimport JSBI from 'jsbi'\r\nimport { Rounding } from '../enums'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Price<TBase extends Currency, TQuote extends Currency> extends Fraction {\r\n  public readonly baseCurrency: TBase // input i.e. denominator\r\n  public readonly quoteCurrency: TQuote // output i.e. numerator\r\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\r\n\r\n  /**\r\n   * Construct a price, either with the base and quote currency amount, or the\r\n   * @param args\r\n   */\r\n  public constructor(\r\n    ...args:\r\n      | [TBase, TQuote, BigintIsh, BigintIsh]\r\n      | [\r\n          {\r\n            baseAmount: CurrencyAmount<TBase>\r\n            quoteAmount: CurrencyAmount<TQuote>\r\n          }\r\n        ]\r\n  ) {\r\n    let baseCurrency: TBase, quoteCurrency: TQuote, denominator: BigintIsh, numerator: BigintIsh\r\n\r\n    if (args.length === 4) {\r\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = args\r\n    } else {\r\n      const result = args[0].quoteAmount.divide(args[0].baseAmount)\r\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = [\r\n        args[0].baseAmount.currency,\r\n        args[0].quoteAmount.currency,\r\n        result.denominator,\r\n        result.numerator\r\n      ]\r\n    }\r\n    super(numerator, denominator)\r\n\r\n    this.baseCurrency = baseCurrency\r\n    this.quoteCurrency = quoteCurrency\r\n    this.scalar = new Fraction(\r\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(baseCurrency.decimals)),\r\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(quoteCurrency.decimals))\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Flip the price, switching the base and quote currency\r\n   */\r\n  public invert(): Price<TQuote, TBase> {\r\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\r\n  }\r\n\r\n  /**\r\n   * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency\r\n   * @param other the other price\r\n   */\r\n  public multiply<TOtherQuote extends Currency>(other: Price<TQuote, TOtherQuote>): Price<TBase, TOtherQuote> {\r\n    invariant(this.quoteCurrency.equals(other.baseCurrency), 'TOKEN')\r\n    const fraction = super.multiply(other)\r\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\r\n  }\r\n\r\n  /**\r\n   * Return the amount of quote currency corresponding to a given amount of the base currency\r\n   * @param currencyAmount the amount of base currency to quote against the price\r\n   */\r\n  public quote(currencyAmount: CurrencyAmount<TBase>): CurrencyAmount<TQuote> {\r\n    invariant(currencyAmount.currency.equals(this.baseCurrency), 'TOKEN')\r\n    const result = super.multiply(currencyAmount)\r\n    return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator)\r\n  }\r\n\r\n  /**\r\n   * Get the value scaled by decimals for formatting\r\n   * @private\r\n   */\r\n  private get adjustedForDecimals(): Fraction {\r\n    return super.multiply(this.scalar)\r\n  }\r\n\r\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\r\n    return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding)\r\n  }\r\n\r\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\r\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding)\r\n  }\r\n}\r\n","import { keccak256, pack } from '@ethersproject/solidity'\r\n\r\nimport { defaultAbiCoder } from '@ethersproject/abi'\r\n\r\nexport const computePoolInitCodeHash = ({\r\n  creationCode,\r\n  deployData,\r\n  masterDeployerAddress\r\n}: {\r\n  creationCode: string\r\n  deployData: string\r\n  masterDeployerAddress: string\r\n}): string =>\r\n  keccak256(\r\n    ['bytes'],\r\n    [\r\n      pack(\r\n        ['bytes', 'bytes'],\r\n        [creationCode, defaultAbiCoder.encode(['bytes', 'address'], [deployData, masterDeployerAddress])]\r\n      )\r\n    ]\r\n  )\r\n","import { Fee } from '../enums'\r\nimport { Token } from '../entities'\r\nimport { computePoolInitCodeHash } from './computePoolInitCodeHash'\r\nimport { defaultAbiCoder } from '@ethersproject/abi'\r\nimport { getCreate2Address } from '@ethersproject/address'\r\nimport { keccak256 } from '@ethersproject/solidity'\r\n\r\nconst MASTER_DEPLOYER_ADDRESS = '0xa2A7Aa74cb94f37221FD49F5BA6F3fF876092700'\r\n\r\nconst CONSTANT_PRODUCT_POOL_CREATION_CODE =\r\n  '0x6101806040523480156200001257600080fd5b5060405162004195380380620041958339810160408190526200003591620005d2565b604080518082018252600e81526d29bab9b434902628102a37b5b2b760911b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527fc2bf45081e840722410522aa366600d7fe4da5bfb5a5b417f4d5125b4ed180a4918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015246608082018190523060a08301529060c0016040516020818303038152906040528051906020012060808181525050506000806000808580602001905181019062000132919062000572565b929650909450925090506001600160a01b038416620001875760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064015b60405180910390fd5b826001600160a01b0316846001600160a01b03161415620001eb5760405162461bcd60e51b815260206004820152601360248201527f4944454e544943414c5f4144445245535345530000000000000000000000000060448201526064016200017e565b6001600160a01b038416301415620002365760405162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22faa27a5a2a760991b60448201526064016200017e565b6001600160a01b038316301415620002815760405162461bcd60e51b815260206004820152600d60248201526c24a72b20a624a22faa27a5a2a760991b60448201526064016200017e565b612710821115620002c85760405162461bcd60e51b815260206004820152601060248201526f494e56414c49445f535741505f46454560801b60448201526064016200017e565b60408051600481526024810182526020810180516001600160e01b03166360a56c0160e11b17905290516000916001600160a01b038816916200030c9190620006b9565b600060405180830381855afa9150503d806000811462000349576040519150601f19603f3d011682016040523d82523d6000602084013e6200034e565b606091505b5060408051600481526024810182526020810180516001600160e01b0316630605066960e11b1790529051919350600092506001600160a01b03891691620003979190620006b9565b600060405180830381855afa9150503d8060008114620003d4576040519150601f19603f3d011682016040523d82523d6000602084013e620003d9565b606091505b5060408051600481526024810182526020810180516001600160e01b0316634da3182760e01b1790529051919350600092506001600160a01b038a1691620004229190620006b9565b600060405180830381855afa9150503d80600081146200045f576040519150601f19603f3d011682016040523d82523d6000602084013e62000464565b606091505b506001600160601b031960608a811b82166101405289901b166101605260a087905261271087900360c0528451909250620004aa9150840160209081019085016200069f565b6004558151620004c490830160209081019084016200054b565b60601b6001600160601b03191660e0528051620004eb90602090830181019083016200054b565b6001600160601b0319606091821b8116610100529089901b1661012052600160095583156200052a57600880546001600160e01b0316600160e01b1790555b50505050505050505062000739565b8051620005468162000720565b919050565b6000602082840312156200055e57600080fd5b81516200056b8162000720565b9392505050565b600080600080608085870312156200058957600080fd5b8451620005968162000720565b6020860151909450620005a98162000720565b6040860151606087015191945092508015158114620005c757600080fd5b939692955090935050565b60008060408385031215620005e657600080fd5b82516001600160401b0380821115620005fe57600080fd5b818501915085601f8301126200061357600080fd5b8151818111156200062857620006286200070a565b604051601f8201601f19908116603f011681019083821181831017156200065357620006536200070a565b816040528281528860208487010111156200066d57600080fd5b62000680836020830160208801620006d7565b8096505050505050620006966020840162000539565b90509250929050565b600060208284031215620006b257600080fd5b5051919050565b60008251620006cd818460208701620006d7565b9190910192915050565b60005b83811015620006f4578181015183820152602001620006da565b8381111562000704576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146200073657600080fd5b50565b60805160a05160c05160e05160601c6101005160601c6101205160601c6101405160601c6101605160601c61390062000895600039600081816105b301528181610791015281816108c00152818161096e01528181610ff6015281816110fe01528181611336015281816113a5015281816115e701528181611fc30152818161204a01526129e701526000818161032e0152818161070d01528181610a5301528181610b8201528181610fca01528181611095015281816112e2015281816114860152818161157901528181611d24015281816120830152818161216e01526128e801526000818161058c015281816118070152611c240152600081816103f901528181612650015281816127c6015281816128ac0152612a900152600081816102e20152612eb3015260006125520152600081816104200152818161315501526131c00152600081816103d2015261233901526139006000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c8063627dd56a1161012a578063a69840a8116100bd578063c14ad8021161008c578063d21220a711610071578063d21220a7146105ae578063d505accf146105d5578063dd62ed3e146105e857600080fd5b8063c14ad8021461057e578063cf58879a1461058757600080fd5b8063a69840a81461051e578063a8f1f52e14610545578063a9059cbb14610558578063af8c09bf1461056b57600080fd5b80637ba0e2e7116100f95780637ba0e2e7146104a55780637ecebe00146104b857806392bc3219146104d857806395d89b41146104e257600080fd5b8063627dd56a1461045457806367e4ac2c1461046757806370a082311461047c5780637464fc3d1461049c57600080fd5b80632a07b6c7116101a25780634da31827116101715780634da31827146103f457806354cf2aeb1461041b5780635909c0d5146104425780635a3d54931461044b57600080fd5b80632a07b6c71461036c57806330adf81f1461038c578063313ce567146103b35780633644e515146103cd57600080fd5b80630c0a0cd2116101de5780630c0a0cd2146102dd5780630dfe16811461032957806318160ddd1461035057806323b872dd1461035957600080fd5b8063053da1c81461021057806306fdde03146102365780630902f1ac1461027f578063095ea7b3146102ba575b600080fd5b61022361021e366004613566565b610613565b6040519081526020015b60405180910390f35b6102726040518060400160405280600e81526020017f5375736869204c5020546f6b656e00000000000000000000000000000000000081525081565b60405161022d9190613716565b610287610c3e565b604080516dffffffffffffffffffffffffffff948516815293909216602084015263ffffffff169082015260600161022d565b6102cd6102c8366004613449565b610ca7565b604051901515815260200161022d565b6103047f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161022d565b6103047f000000000000000000000000000000000000000000000000000000000000000081565b61022360005481565b6102cd6103673660046134ae565b610d20565b61037f61037a366004613566565b610e6c565b60405161022d91906136b1565b6102237f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6103bb601281565b60405160ff909116815260200161022d565b6102237f000000000000000000000000000000000000000000000000000000000000000081565b6103047f000000000000000000000000000000000000000000000000000000000000000081565b6102237f000000000000000000000000000000000000000000000000000000000000000081565b61022360055481565b61022360065481565b610223610462366004613566565b6111e1565b61046f611557565b60405161022d9190613657565b61022361048a36600461327d565b60016020526000908152604090205481565b61022360075481565b6102236104b3366004613566565b611656565b6102236104c636600461327d565b60036020526000908152604090205481565b6104e0611bb2565b005b6102726040518060400160405280600381526020017f534c50000000000000000000000000000000000000000000000000000000000081525081565b6102237f54726964656e743a436f6e7374616e7450726f6475637400000000000000000081565b610223610553366004613566565b611cad565b6102cd610566366004613449565b611de0565b610223610579366004613566565b611e65565b61022360045481565b6103047f000000000000000000000000000000000000000000000000000000000000000081565b6103047f000000000000000000000000000000000000000000000000000000000000000081565b6104e06105e33660046134ef565b61220e565b6102236105f6366004613475565b600260209081526000928352604080842090915290825290205481565b6000600954600114610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f4c4f434b4544000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600260095560008080808061069d87890189613305565b9450945094509450945060008060006107056008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b9250925092507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16141561096c5761078a85846dffffffffffffffffffffffffffff16846dffffffffffffffffffffffffffff1661254a565b98506107b87f00000000000000000000000000000000000000000000000000000000000000008a89896125ad565b6040517fbd50c7b1000000000000000000000000000000000000000000000000000000008152339063bd50c7b1906107f4908790600401613716565b600060405180830381600087803b15801561080e57600080fd5b505af1158015610822573d6000803e3d6000fd5b505050506000806108316128a5565b9150915086856dffffffffffffffffffffffffffff16830310156108b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f494e53554646494349454e545f414d4f554e545f494e00000000000000000000604482015260640161067d565b6108be8282878787612b1d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628a8f60405161095d929190918252602082015260400190565b60405180910390a45050610c2a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614610a21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e56414c49445f494e5055545f544f4b454e00000000000000000000000000604482015260640161067d565b610a4c85836dffffffffffffffffffffffffffff16856dffffffffffffffffffffffffffff1661254a565b9850610a7a7f00000000000000000000000000000000000000000000000000000000000000008a89896125ad565b6040517fbd50c7b1000000000000000000000000000000000000000000000000000000008152339063bd50c7b190610ab6908790600401613716565b600060405180830381600087803b158015610ad057600080fd5b505af1158015610ae4573d6000803e3d6000fd5b50505050600080610af36128a5565b9150915086846dffffffffffffffffffffffffffff1682031015610b73576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f494e53554646494349454e545f414d4f554e545f494e00000000000000000000604482015260640161067d565b610b808282878787612b1d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460628a8f604051610c1f929190918252602082015260400190565b60405180910390a450505b505060016009555094979650505050505050565b6000806000610c9c6008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b925092509250909192565b33600081815260026020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610d0f9086815260200190565b60405180910390a350600192915050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526002602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff14610dbd5773ffffffffffffffffffffffffffffffffffffffff8416600090815260026020908152604080832033845290915281208054849290610db7908490613792565b90915550505b73ffffffffffffffffffffffffffffffffffffffff841660009081526001602052604081208054849290610df2908490613792565b909155505073ffffffffffffffffffffffffffffffffffffffff808416600081815260016020526040908190208054860190555190918616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e5a9086815260200190565b60405180910390a35060019392505050565b6060600954600114610eda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f4c4f434b45440000000000000000000000000000000000000000000000000000604482015260640161067d565b6002600955600080610eee84860186613414565b915091506000806000610f506008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b925092509250600080610f616128a5565b60008054308252600160205260409091205492945090925090610f85878784612e33565b90910190600082610f968684613755565b610fa09190613741565b9050600083610faf8685613755565b610fb99190613741565b9050610fc53084612ee2565b610ff17f0000000000000000000000000000000000000000000000000000000000000000838d8d6125ad565b61101d7f0000000000000000000000000000000000000000000000000000000000000000828d8d6125ad565b8186039550808503945061103486868b8b8b612b1d565b6110466110418688613755565b612f75565b6007556040805160028082526060820190925290816020015b604080518082019091526000808252602082015281526020019060019003908161105f579050509b5060405180604001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001838152508c6000815181106110e6576110e6613847565b602002602001018190525060405180604001604052807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168152602001828152508c60018151811061114f5761114f613847565b60200260200101819052508a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d8193649684846040516111c2929190918252602082015260400190565b60405180910390a35050600160095550979a9950505050505050505050565b600060095460011461124f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f4c4f434b45440000000000000000000000000000000000000000000000000000604482015260640161067d565b600260095560008080611264858701876132be565b92509250925060008060006112c86008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b9250925092506000806112d96128a5565b915091506000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614156113a3577f00000000000000000000000000000000000000000000000000000000000000009050866dffffffffffffffffffffffffffff168403915061139782886dffffffffffffffffffffffffffff16886dffffffffffffffffffffffffffff1661254a565b9a508a830392506114bf565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f494e56414c49445f494e5055545f544f4b454e00000000000000000000000000604482015260640161067d565b50506008546dffffffffffffffffffffffffffff6e01000000000000000000000000000090910481168203907f0000000000000000000000000000000000000000000000000000000000000000906114b7908390888116908a1661254a565b9a508a840393505b6114cb818c8b8b6125ad565b6114d88484898989612b1d565b8073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff167fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062858f604051610c1f929190918252602082015260400190565b60408051600280825260608083018452926020830190803683370190505090507f0000000000000000000000000000000000000000000000000000000000000000816000815181106115ab576115ab613847565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250507f00000000000000000000000000000000000000000000000000000000000000008160018151811061161957611619613847565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505090565b60006009546001146116c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f4c4f434b45440000000000000000000000000000000000000000000000000000604482015260640161067d565b600260095560006116d78385018561327d565b905060008060006117376008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b9250925092506000806117486128a5565b600054919350915061175b868683612e33565b0160006117786dffffffffffffffffffffffffffff881685613792565b905060006117966dffffffffffffffffffffffffffff881685613792565b90506000806117c784848c6dffffffffffffffffffffffffffff168c6dffffffffffffffffffffffffffff166130fa565b909250905060006117ef6117db8389613792565b6117e5858b613792565b6110419190613755565b905085611a705761180360006103e86131fd565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16637cd07e476040518163ffffffff1660e01b815260040160206040518083038186803b15801561186b57600080fd5b505afa15801561187f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a391906132a1565b90503373ffffffffffffffffffffffffffffffffffffffff821614156119dd578073ffffffffffffffffffffffffffffffffffffffff166340dc0e376040518163ffffffff1660e01b815260040160206040518083038186803b15801561190957600080fd5b505afa15801561191d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194191906135d8565b9d508d1580159061197257507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8e14155b6119d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4241445f444553495245445f4c49515549444954590000000000000000000000604482015260640161067d565b611a6a565b73ffffffffffffffffffffffffffffffffffffffff811615611a5b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f4f4e4c595f4d49475241544f5200000000000000000000000000000000000000604482015260640161067d565b611a676103e883613792565b9d505b50611ab8565b6000611a926110416dffffffffffffffffffffffffffff808e16908f16613755565b90508087611aa08285613792565b611aaa9190613755565b611ab49190613741565b9d50505b8c611b1f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f494e53554646494349454e545f4c49515549444954595f4d494e544544000000604482015260640161067d565b611b298c8e6131fd565b611b3688888d8d8d612b1d565b611b43611041888a613755565b600755604080518681526020810186905273ffffffffffffffffffffffffffffffffffffffff8e169133917fdbba30eb0402b389513e87f51f4db2db80bed454384ec6925a24097c3548a02a91015b60405180910390a35050600160095550989b9a5050505050505050505050565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fc14ad80200000000000000000000000000000000000000000000000000000000179052905160009173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691611c4f919061363b565b600060405180830381855afa9150503d8060008114611c8a576040519150601f19603f3d011682016040523d82523d6000602084013e611c8f565b606091505b5091505080806020019051810190611ca791906135d8565b60045550565b60008080611cbd84860186613449565b91509150600080611d1d6008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b50915091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611da857611da183836dffffffffffffffffffffffffffff16836dffffffffffffffffffffffffffff1661254a565b9450611dd6565b611dd383826dffffffffffffffffffffffffffff16846dffffffffffffffffffffffffffff1661254a565b94505b5050505092915050565b33600090815260016020526040812080548391908390611e01908490613792565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600081815260016020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d0f9086815260200190565b6000600954600114611ed3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f4c4f434b45440000000000000000000000000000000000000000000000000000604482015260640161067d565b600260095560008080611ee8858701876132be565b9250925092506000806000611f4c6008546dffffffffffffffffffffffffffff808216926e01000000000000000000000000000083049091169163ffffffff7c01000000000000000000000000000000000000000000000000000000009091041690565b925092509250600080611f5d6128a5565b60008054308252600160205260409091205492945090925090611f81878784612e33565b90910190600082611f928684613755565b611f9c9190613741565b9050600083611fab8685613755565b611fb59190613741565b9050611fc13084612ee2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1614156120815761204482838b6dffffffffffffffffffffffffffff1603838b6dffffffffffffffffffffffffffff160361254a565b016120717f0000000000000000000000000000000000000000000000000000000000000000828d8d6125ad565b9b5050918a90039160008b6121a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff1614612136576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f494e56414c49445f4f55545055545f544f4b454e000000000000000000000000604482015260640161067d565b61216581828a6dffffffffffffffffffffffffffff1603848c6dffffffffffffffffffffffffffff160361254a565b820191506121957f0000000000000000000000000000000000000000000000000000000000000000838d8d6125ad565b509a50928a9003928a60005b6121ae86868b8b8b612b1d565b6121bb6110418688613755565b600755604080518381526020810183905273ffffffffffffffffffffffffffffffffffffffff8d169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d819364969101611b92565b42841015612278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f5045524d49545f444541444c494e455f45585049524544000000000000000000604482015260640161067d565b73ffffffffffffffffffffffffffffffffffffffff878116600081815260036020908152604080832080546001810190915581517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98185015280830195909552948b166060850152608084018a905260a084019490945260c08084018990528451808503909101815260e0840190945283519301929092207f19010000000000000000000000000000000000000000000000000000000000006101008301527f000000000000000000000000000000000000000000000000000000000000000061010283015261012282015261014201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156123f1573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff81161580159061246c57508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6124d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f494e56414c49445f5045524d49545f5349474e41545552450000000000000000604482015260640161067d565b73ffffffffffffffffffffffffffffffffffffffff90811660009081526002602090815260408083208b8516808552908352928190208a905551898152919350918a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6000806125777f000000000000000000000000000000000000000000000000000000000000000086613755565b90508061258661271086613755565b6125909190613729565b61259a8483613755565b6125a49190613741565b95945050505050565b801561272f576040805173ffffffffffffffffffffffffffffffffffffffff8681166024830152306044830152848116606483015260006084830181905260a48084018890528451808503909101815260c490930184526020830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f97da6d300000000000000000000000000000000000000000000000000000000017905292517f00000000000000000000000000000000000000000000000000000000000000009091169161267c9161363b565b6000604051808303816000865af19150503d80600081146126b9576040519150601f19603f3d011682016040523d82523d6000602084013e6126be565b606091505b5050905080612729576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f57495448445241575f4641494c45440000000000000000000000000000000000604482015260640161067d565b5061289f565b6040805173ffffffffffffffffffffffffffffffffffffffff8681166024830152306044830152848116606483015260848083018790528351808403909101815260a490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ff18d03cc0000000000000000000000000000000000000000000000000000000017905291516000927f000000000000000000000000000000000000000000000000000000000000000016916127f09161363b565b6000604051808303816000865af19150503d806000811461282d576040519150601f19603f3d011682016040523d82523d6000602084013e612832565b606091505b505090508061289d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015260640161067d565b505b50505050565b60008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f7888aec7f00000000000000000000000000000000000000000000000000000000000000003060405160240161293b92919073ffffffffffffffffffffffffffffffffffffffff92831681529116602082015260400190565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051612989919061363b565b600060405180830381855afa9150503d80600081146129c4576040519150601f19603f3d011682016040523d82523d6000602084013e6129c9565b606091505b50915050808060200190518101906129e191906135d8565b604080517f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff90811660248301523060448084019190915283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167ff7888aec0000000000000000000000000000000000000000000000000000000017905291519295506000927f000000000000000000000000000000000000000000000000000000000000000090921691612abd919061363b565b600060405180830381855afa9150503d8060008114612af8576040519150601f19603f3d011682016040523d82523d6000602084013e612afd565b606091505b5091505080806020019051810190612b1591906135d8565b925050509091565b6dffffffffffffffffffffffffffff8511801590612b4957506dffffffffffffffffffffffffffff8411155b612baf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4f564552464c4f57000000000000000000000000000000000000000000000000604482015260640161067d565b6008547c0100000000000000000000000000000000000000000000000000000000900463ffffffff16612c3357600880546dffffffffffffffffffffffffffff8681166e010000000000000000000000000000027fffffffff0000000000000000000000000000000000000000000000000000000090921690881617179055612df3565b6000612c44640100000000426137d5565b90508163ffffffff168163ffffffff1614158015612c7157506dffffffffffffffffffffffffffff841615155b8015612c8c57506dffffffffffffffffffffffffffff831615155b15612d515781810360006dffffffffffffffffffffffffffff86167bffffffffffffffffffffffffffff0000000000000000000000000000607087901b1681612cd757612cd7613818565b600580549290910463ffffffff851681029092019055905060006dffffffffffffffffffffffffffff8616607088901b7bffffffffffffffffffffffffffff00000000000000000000000000001681612d3257612d32613818565b0490508263ffffffff1681026006600082825401925050819055505050505b6008805463ffffffff9092167c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff6dffffffffffffffffffffffffffff8881166e010000000000000000000000000000027fffffffff00000000000000000000000000000000000000000000000000000000909516908a161793909317929092169190911790555b60408051868152602081018690527fcf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a910160405180910390a15050505050565b6007546000908015612eda576000612e616110416dffffffffffffffffffffffffffff808816908916613755565b905081811115612ed857612710816004548484612e7e9190613792565b612e889088613755565b612e929190613755565b612e9c9190613741565b612ea69190613741565b92508215612ed857612ed87f0000000000000000000000000000000000000000000000000000000000000000846131fd565b505b509392505050565b73ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604081208054839290612f17908490613792565b909155505060008054829003815560405182815273ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b600081612f8457506000919050565b8160017001000000000000000000000000000000008210612faa5760809190911c9060401b5b680100000000000000008210612fc55760409190911c9060201b5b6401000000008210612fdc5760209190911c9060101b5b620100008210612ff15760109190911c9060081b5b61010082106130055760089190911c9060041b5b601082106130185760049190911c9060021b5b600882106130245760011b5b600181858161303557613035613818565b048201901c9050600181858161304d5761304d613818565b048201901c9050600181858161306557613065613818565b048201901c9050600181858161307d5761307d613818565b048201901c9050600181858161309557613095613818565b048201901c905060018185816130ad576130ad613818565b048201901c905060018185816130c5576130c5613818565b048201901c905060008185816130dd576130dd613818565b0490508082106130ed57806130ef565b815b93505050505b919050565b600080831580613108575082155b15613118575060009050806131f4565b6000846131258589613755565b61312f9190613741565b905085811161318a576131456127106002613755565b61314f8288613792565b613179907f0000000000000000000000000000000000000000000000000000000000000000613755565b6131839190613741565b91506131f2565b6000846131978789613755565b6131a19190613741565b90506131b06127106002613755565b6131ba828a613792565b6131e4907f0000000000000000000000000000000000000000000000000000000000000000613755565b6131ee9190613741565b9350505b505b94509492505050565b8060008082825461320e9190613729565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101612f69565b803580151581146130f557600080fd5b60006020828403121561328f57600080fd5b813561329a816138a5565b9392505050565b6000602082840312156132b357600080fd5b815161329a816138a5565b6000806000606084860312156132d357600080fd5b83356132de816138a5565b925060208401356132ee816138a5565b91506132fc6040850161326d565b90509250925092565b600080600080600060a0868803121561331d57600080fd5b8535613328816138a5565b94506020860135613338816138a5565b93506133466040870161326d565b925060608601359150608086013567ffffffffffffffff8082111561336a57600080fd5b818801915088601f83011261337e57600080fd5b81358181111561339057613390613876565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156133d6576133d6613876565b816040528281528b60208487010111156133ef57600080fd5b8260208601602083013760006020848301015280955050505050509295509295909350565b6000806040838503121561342757600080fd5b8235613432816138a5565b91506134406020840161326d565b90509250929050565b6000806040838503121561345c57600080fd5b8235613467816138a5565b946020939093013593505050565b6000806040838503121561348857600080fd5b8235613493816138a5565b915060208301356134a3816138a5565b809150509250929050565b6000806000606084860312156134c357600080fd5b83356134ce816138a5565b925060208401356134de816138a5565b929592945050506040919091013590565b600080600080600080600060e0888a03121561350a57600080fd5b8735613515816138a5565b96506020880135613525816138a5565b95506040880135945060608801359350608088013560ff8116811461354957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806020838503121561357957600080fd5b823567ffffffffffffffff8082111561359157600080fd5b818501915085601f8301126135a557600080fd5b8135818111156135b457600080fd5b8660208285010111156135c657600080fd5b60209290920196919550909350505050565b6000602082840312156135ea57600080fd5b5051919050565b600081518084526136098160208601602086016137a9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000825161364d8184602087016137a9565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b818110156136a557835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101613673565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015613709578151805173ffffffffffffffffffffffffffffffffffffffff1685528601518685015292840192908501906001016136ce565b5091979650505050505050565b60208152600061329a60208301846135f1565b6000821982111561373c5761373c6137e9565b500190565b60008261375057613750613818565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561378d5761378d6137e9565b500290565b6000828210156137a4576137a46137e9565b500390565b60005b838110156137c45781810151838201526020016137ac565b8381111561289f5750506000910152565b6000826137e4576137e4613818565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff811681146138c757600080fd5b5056fea264697066735822122004f193ad403a2048e6ef0c1fc9da9b9f522fe2ad030c99737c73f0f04901cf7464736f6c63430008070033'\r\n\r\nexport const computeConstantProductPoolAddress = ({\r\n  factoryAddress,\r\n  tokenA,\r\n  tokenB,\r\n  fee,\r\n  twap\r\n}: {\r\n  factoryAddress: string\r\n  tokenA: Token\r\n  tokenB: Token\r\n  fee: Fee\r\n  twap: boolean\r\n}): string => {\r\n  // does safety checks\r\n  const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\r\n\r\n  const deployData = defaultAbiCoder.encode(\r\n    ['address', 'address', 'uint256', 'bool'],\r\n    [...[token0.address, token1.address].sort(), fee, twap]\r\n  )\r\n\r\n  // Compute init code hash based off the bytecode, deployData & masterDeployerAddress\r\n  const CONSTANT_PRODUCT_POOL_INIT_CODE_HASH = computePoolInitCodeHash({\r\n    creationCode: CONSTANT_PRODUCT_POOL_CREATION_CODE,\r\n    deployData,\r\n    masterDeployerAddress: MASTER_DEPLOYER_ADDRESS\r\n  })\r\n\r\n  // Compute pool address\r\n  return getCreate2Address(factoryAddress, keccak256(['bytes'], [deployData]), CONSTANT_PRODUCT_POOL_INIT_CODE_HASH)\r\n}\r\n","import JSBI from 'jsbi'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport const MAX_SAFE_INTEGER = JSBI.BigInt(Number.MAX_SAFE_INTEGER)\r\n\r\nconst ZERO = JSBI.BigInt(0)\r\nconst ONE = JSBI.BigInt(1)\r\nconst TWO = JSBI.BigInt(2)\r\n\r\n/**\r\n * Computes floor(sqrt(value))\r\n * @param value the value for which to compute the square root, rounded down\r\n */\r\nexport function sqrt(value: JSBI): JSBI {\r\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), 'NEGATIVE')\r\n\r\n  // rely on built in sqrt if possible\r\n  if (JSBI.lessThan(value, MAX_SAFE_INTEGER)) {\r\n    return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))))\r\n  }\r\n\r\n  let z: JSBI\r\n  let x: JSBI\r\n  z = value\r\n  x = JSBI.add(JSBI.divide(value, TWO), ONE)\r\n  while (JSBI.lessThan(x, z)) {\r\n    z = x\r\n    x = JSBI.divide(JSBI.add(JSBI.divide(value, x), x), TWO)\r\n  }\r\n  return z\r\n}\r\n","import { FACTORY_ADDRESS, FIVE, MINIMUM_LIQUIDITY, ONE, ZERO, _1000, _997 } from '../constants'\r\nimport { InsufficientInputAmountError, InsufficientReservesError } from '../errors'\r\n\r\nimport { BigintIsh } from '../types'\r\nimport { CurrencyAmount } from './CurrencyAmount'\r\nimport { Fee } from '../enums'\r\nimport JSBI from 'jsbi'\r\nimport { Price } from './Price'\r\nimport { Token } from './Token'\r\nimport { computeConstantProductPoolAddress } from '../functions/computeConstantProductPoolAddress'\r\nimport invariant from 'tiny-invariant'\r\nimport { sqrt } from '../functions/sqrt'\r\n\r\nexport class ConstantProductPool {\r\n  public readonly liquidityToken: Token\r\n  public readonly fee: Fee\r\n  private readonly tokenAmounts: [CurrencyAmount<Token>, CurrencyAmount<Token>]\r\n\r\n  public static getAddress(tokenA: Token, tokenB: Token, fee: Fee = 25, twap: boolean = true): string {\r\n    return computeConstantProductPoolAddress({\r\n      factoryAddress: FACTORY_ADDRESS[tokenA.chainId],\r\n      tokenA,\r\n      tokenB,\r\n      fee,\r\n      twap\r\n    })\r\n  }\r\n\r\n  public constructor(\r\n    currencyAmountA: CurrencyAmount<Token>,\r\n    currencyAmountB: CurrencyAmount<Token>,\r\n    fee: Fee = 25,\r\n    twap: boolean = true\r\n  ) {\r\n    const currencyAmounts = currencyAmountA.currency.sortsBefore(currencyAmountB.currency) // does safety checks\r\n      ? [currencyAmountA, currencyAmountB]\r\n      : [currencyAmountB, currencyAmountA]\r\n    this.liquidityToken = new Token(\r\n      currencyAmounts[0].currency.chainId,\r\n      ConstantProductPool.getAddress(currencyAmounts[0].currency, currencyAmounts[1].currency, fee, twap),\r\n      18,\r\n      'SLP',\r\n      'Sushi LP Token'\r\n    )\r\n    this.fee = fee\r\n    this.tokenAmounts = currencyAmounts as [CurrencyAmount<Token>, CurrencyAmount<Token>]\r\n  }\r\n\r\n  /**\r\n   * Returns true if the token is either token0 or token1\r\n   * @param token to check\r\n   */\r\n  public involvesToken(token: Token): boolean {\r\n    return token.equals(this.token0) || token.equals(this.token1)\r\n  }\r\n\r\n  /**\r\n   * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\r\n   */\r\n  public get token0Price(): Price<Token, Token> {\r\n    const result = this.tokenAmounts[1].divide(this.tokenAmounts[0])\r\n    return new Price(this.token0, this.token1, result.denominator, result.numerator)\r\n  }\r\n\r\n  /**\r\n   * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\r\n   */\r\n  public get token1Price(): Price<Token, Token> {\r\n    const result = this.tokenAmounts[0].divide(this.tokenAmounts[1])\r\n    return new Price(this.token1, this.token0, result.denominator, result.numerator)\r\n  }\r\n\r\n  /**\r\n   * Return the price of the given token in terms of the other token in the pair.\r\n   * @param token token to return price of\r\n   */\r\n  public priceOf(token: Token): Price<Token, Token> {\r\n    invariant(this.involvesToken(token), 'TOKEN')\r\n    return token.equals(this.token0) ? this.token0Price : this.token1Price\r\n  }\r\n\r\n  /**\r\n   * Returns the chain ID of the tokens in the pair.\r\n   */\r\n  public get chainId(): number {\r\n    return this.token0.chainId\r\n  }\r\n\r\n  public get token0(): Token {\r\n    return this.tokenAmounts[0].currency\r\n  }\r\n\r\n  public get token1(): Token {\r\n    return this.tokenAmounts[1].currency\r\n  }\r\n\r\n  public get reserve0(): CurrencyAmount<Token> {\r\n    return this.tokenAmounts[0]\r\n  }\r\n\r\n  public get reserve1(): CurrencyAmount<Token> {\r\n    return this.tokenAmounts[1]\r\n  }\r\n\r\n  public reserveOf(token: Token): CurrencyAmount<Token> {\r\n    invariant(this.involvesToken(token), 'TOKEN')\r\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1\r\n  }\r\n\r\n  public getOutputAmount(inputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, ConstantProductPool] {\r\n    invariant(this.involvesToken(inputAmount.currency), 'TOKEN')\r\n    if (JSBI.equal(this.reserve0.quotient, ZERO) || JSBI.equal(this.reserve1.quotient, ZERO)) {\r\n      throw new InsufficientReservesError()\r\n    }\r\n    const inputReserve = this.reserveOf(inputAmount.currency)\r\n    const outputReserve = this.reserveOf(inputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\r\n    const inputAmountWithFee = JSBI.multiply(inputAmount.quotient, _997)\r\n    const numerator = JSBI.multiply(inputAmountWithFee, outputReserve.quotient)\r\n    const denominator = JSBI.add(JSBI.multiply(inputReserve.quotient, _1000), inputAmountWithFee)\r\n    const outputAmount = CurrencyAmount.fromRawAmount(\r\n      inputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\r\n      JSBI.divide(numerator, denominator)\r\n    )\r\n    if (JSBI.equal(outputAmount.quotient, ZERO)) {\r\n      throw new InsufficientInputAmountError()\r\n    }\r\n    return [outputAmount, new ConstantProductPool(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\r\n  }\r\n\r\n  public getInputAmount(outputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, ConstantProductPool] {\r\n    invariant(this.involvesToken(outputAmount.currency), 'TOKEN')\r\n    if (\r\n      JSBI.equal(this.reserve0.quotient, ZERO) ||\r\n      JSBI.equal(this.reserve1.quotient, ZERO) ||\r\n      JSBI.greaterThanOrEqual(outputAmount.quotient, this.reserveOf(outputAmount.currency).quotient)\r\n    ) {\r\n      throw new InsufficientReservesError()\r\n    }\r\n\r\n    const outputReserve = this.reserveOf(outputAmount.currency)\r\n    const inputReserve = this.reserveOf(outputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\r\n    const numerator = JSBI.multiply(JSBI.multiply(inputReserve.quotient, outputAmount.quotient), _1000)\r\n    const denominator = JSBI.multiply(\r\n      JSBI.subtract(outputReserve.quotient, outputAmount.quotient),\r\n      _997 // 3%\r\n    )\r\n    const inputAmount = CurrencyAmount.fromRawAmount(\r\n      outputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\r\n      JSBI.add(JSBI.divide(numerator, denominator), ONE)\r\n    )\r\n    return [inputAmount, new ConstantProductPool(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\r\n  }\r\n\r\n  public getLiquidityMinted(\r\n    totalSupply: CurrencyAmount<Token>,\r\n    tokenAmountA: CurrencyAmount<Token>,\r\n    tokenAmountB: CurrencyAmount<Token>\r\n  ): CurrencyAmount<Token> {\r\n    invariant(totalSupply.currency.equals(this.liquidityToken), 'LIQUIDITY')\r\n    const tokenAmounts = tokenAmountA.currency.sortsBefore(tokenAmountB.currency) // does safety checks\r\n      ? [tokenAmountA, tokenAmountB]\r\n      : [tokenAmountB, tokenAmountA]\r\n    invariant(tokenAmounts[0].currency.equals(this.token0) && tokenAmounts[1].currency.equals(this.token1), 'TOKEN')\r\n\r\n    let liquidity: JSBI\r\n    if (JSBI.equal(totalSupply.quotient, ZERO)) {\r\n      liquidity = JSBI.subtract(\r\n        sqrt(JSBI.multiply(tokenAmounts[0].quotient, tokenAmounts[1].quotient)),\r\n        MINIMUM_LIQUIDITY\r\n      )\r\n    } else {\r\n      const amount0 = JSBI.divide(JSBI.multiply(tokenAmounts[0].quotient, totalSupply.quotient), this.reserve0.quotient)\r\n      const amount1 = JSBI.divide(JSBI.multiply(tokenAmounts[1].quotient, totalSupply.quotient), this.reserve1.quotient)\r\n      liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1\r\n    }\r\n    if (!JSBI.greaterThan(liquidity, ZERO)) {\r\n      throw new InsufficientInputAmountError()\r\n    }\r\n    return CurrencyAmount.fromRawAmount(this.liquidityToken, liquidity)\r\n  }\r\n\r\n  public getLiquidityValue(\r\n    token: Token,\r\n    totalSupply: CurrencyAmount<Token>,\r\n    liquidity: CurrencyAmount<Token>,\r\n    feeOn: boolean = false,\r\n    kLast?: BigintIsh\r\n  ): CurrencyAmount<Token> {\r\n    invariant(this.involvesToken(token), 'TOKEN')\r\n    invariant(totalSupply.currency.equals(this.liquidityToken), 'TOTAL_SUPPLY')\r\n    invariant(liquidity.currency.equals(this.liquidityToken), 'LIQUIDITY')\r\n    invariant(JSBI.lessThanOrEqual(liquidity.quotient, totalSupply.quotient), 'LIQUIDITY')\r\n\r\n    let totalSupplyAdjusted: CurrencyAmount<Token>\r\n    if (!feeOn) {\r\n      totalSupplyAdjusted = totalSupply\r\n    } else {\r\n      invariant(!!kLast, 'K_LAST')\r\n      const kLastParsed = JSBI.BigInt(kLast)\r\n      if (!JSBI.equal(kLastParsed, ZERO)) {\r\n        const rootK = sqrt(JSBI.multiply(this.reserve0.quotient, this.reserve1.quotient))\r\n        const rootKLast = sqrt(kLastParsed)\r\n        if (JSBI.greaterThan(rootK, rootKLast)) {\r\n          const numerator = JSBI.multiply(totalSupply.quotient, JSBI.subtract(rootK, rootKLast))\r\n          const denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast)\r\n          const feeLiquidity = JSBI.divide(numerator, denominator)\r\n          totalSupplyAdjusted = totalSupply.add(CurrencyAmount.fromRawAmount(this.liquidityToken, feeLiquidity))\r\n        } else {\r\n          totalSupplyAdjusted = totalSupply\r\n        }\r\n      } else {\r\n        totalSupplyAdjusted = totalSupply\r\n      }\r\n    }\r\n\r\n    return CurrencyAmount.fromRawAmount(\r\n      token,\r\n      JSBI.divide(JSBI.multiply(liquidity.quotient, this.reserveOf(token).quotient), totalSupplyAdjusted.quotient)\r\n    )\r\n  }\r\n}\r\n","import { keccak256, pack } from '@ethersproject/solidity'\r\n\r\nimport { INIT_CODE_HASH } from '../constants'\r\nimport { Token } from '../entities'\r\nimport { getCreate2Address } from '@ethersproject/address'\r\n\r\nexport const computePairAddress = ({\r\n  factoryAddress,\r\n  tokenA,\r\n  tokenB\r\n}: {\r\n  factoryAddress: string\r\n  tokenA: Token\r\n  tokenB: Token\r\n}): string => {\r\n  const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] // does safety checks\r\n  return getCreate2Address(\r\n    factoryAddress,\r\n    keccak256(['bytes'], [pack(['address', 'address'], [token0.address, token1.address])]),\r\n    INIT_CODE_HASH\r\n  )\r\n}\r\n","import { FACTORY_ADDRESS, FIVE, MINIMUM_LIQUIDITY, ONE, ZERO, _1000, _997 } from '../constants'\r\nimport { InsufficientInputAmountError, InsufficientReservesError } from '../errors'\r\n\r\nimport { BigintIsh } from '../types'\r\nimport { CurrencyAmount } from './CurrencyAmount'\r\nimport JSBI from 'jsbi'\r\nimport { Price } from './Price'\r\nimport { Token } from './Token'\r\nimport { computePairAddress } from '../functions/computePairAddress'\r\nimport invariant from 'tiny-invariant'\r\nimport { sqrt } from '../functions/sqrt'\r\n\r\nexport class Pair {\r\n  public readonly liquidityToken: Token\r\n  private readonly tokenAmounts: [CurrencyAmount<Token>, CurrencyAmount<Token>]\r\n\r\n  public static getAddress(tokenA: Token, tokenB: Token): string {\r\n    return computePairAddress({\r\n      factoryAddress: FACTORY_ADDRESS[tokenA.chainId],\r\n      tokenA,\r\n      tokenB\r\n    })\r\n  }\r\n\r\n  public constructor(currencyAmountA: CurrencyAmount<Token>, currencyAmountB: CurrencyAmount<Token>) {\r\n    const currencyAmounts = currencyAmountA.currency.sortsBefore(currencyAmountB.currency) // does safety checks\r\n      ? [currencyAmountA, currencyAmountB]\r\n      : [currencyAmountB, currencyAmountA]\r\n    this.liquidityToken = new Token(\r\n      currencyAmounts[0].currency.chainId,\r\n      Pair.getAddress(currencyAmounts[0].currency, currencyAmounts[1].currency),\r\n      18,\r\n      'Jewel-LP',\r\n      'DFK'\r\n    )\r\n    this.tokenAmounts = currencyAmounts as [CurrencyAmount<Token>, CurrencyAmount<Token>]\r\n  }\r\n\r\n  /**\r\n   * Returns true if the token is either token0 or token1\r\n   * @param token to check\r\n   */\r\n  public involvesToken(token: Token): boolean {\r\n    return token.equals(this.token0) || token.equals(this.token1)\r\n  }\r\n\r\n  /**\r\n   * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\r\n   */\r\n  public get token0Price(): Price<Token, Token> {\r\n    const result = this.tokenAmounts[1].divide(this.tokenAmounts[0])\r\n    return new Price(this.token0, this.token1, result.denominator, result.numerator)\r\n  }\r\n\r\n  /**\r\n   * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\r\n   */\r\n  public get token1Price(): Price<Token, Token> {\r\n    const result = this.tokenAmounts[0].divide(this.tokenAmounts[1])\r\n    return new Price(this.token1, this.token0, result.denominator, result.numerator)\r\n  }\r\n\r\n  /**\r\n   * Return the price of the given token in terms of the other token in the pair.\r\n   * @param token token to return price of\r\n   */\r\n  public priceOf(token: Token): Price<Token, Token> {\r\n    invariant(this.involvesToken(token), 'TOKEN')\r\n    return token.equals(this.token0) ? this.token0Price : this.token1Price\r\n  }\r\n\r\n  /**\r\n   * Returns the chain ID of the tokens in the pair.\r\n   */\r\n  public get chainId(): number {\r\n    return this.token0.chainId\r\n  }\r\n\r\n  public get token0(): Token {\r\n    return this.tokenAmounts[0].currency\r\n  }\r\n\r\n  public get token1(): Token {\r\n    return this.tokenAmounts[1].currency\r\n  }\r\n\r\n  public get reserve0(): CurrencyAmount<Token> {\r\n    return this.tokenAmounts[0]\r\n  }\r\n\r\n  public get reserve1(): CurrencyAmount<Token> {\r\n    return this.tokenAmounts[1]\r\n  }\r\n\r\n  public reserveOf(token: Token): CurrencyAmount<Token> {\r\n    invariant(this.involvesToken(token), 'TOKEN')\r\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1\r\n  }\r\n\r\n  public getOutputAmount(inputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, Pair] {\r\n    invariant(this.involvesToken(inputAmount.currency), 'TOKEN')\r\n    if (JSBI.equal(this.reserve0.quotient, ZERO) || JSBI.equal(this.reserve1.quotient, ZERO)) {\r\n      throw new InsufficientReservesError()\r\n    }\r\n    const inputReserve = this.reserveOf(inputAmount.currency)\r\n    const outputReserve = this.reserveOf(inputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\r\n    const inputAmountWithFee = JSBI.multiply(inputAmount.quotient, _997)\r\n    const numerator = JSBI.multiply(inputAmountWithFee, outputReserve.quotient)\r\n    const denominator = JSBI.add(JSBI.multiply(inputReserve.quotient, _1000), inputAmountWithFee)\r\n    const outputAmount = CurrencyAmount.fromRawAmount(\r\n      inputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\r\n      JSBI.divide(numerator, denominator)\r\n    )\r\n    if (JSBI.equal(outputAmount.quotient, ZERO)) {\r\n      throw new InsufficientInputAmountError()\r\n    }\r\n    return [outputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\r\n  }\r\n\r\n  public getInputAmount(outputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, Pair] {\r\n    invariant(this.involvesToken(outputAmount.currency), 'TOKEN')\r\n    if (\r\n      JSBI.equal(this.reserve0.quotient, ZERO) ||\r\n      JSBI.equal(this.reserve1.quotient, ZERO) ||\r\n      JSBI.greaterThanOrEqual(outputAmount.quotient, this.reserveOf(outputAmount.currency).quotient)\r\n    ) {\r\n      throw new InsufficientReservesError()\r\n    }\r\n\r\n    const outputReserve = this.reserveOf(outputAmount.currency)\r\n    const inputReserve = this.reserveOf(outputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\r\n    const numerator = JSBI.multiply(JSBI.multiply(inputReserve.quotient, outputAmount.quotient), _1000)\r\n    const denominator = JSBI.multiply(JSBI.subtract(outputReserve.quotient, outputAmount.quotient), _997)\r\n    const inputAmount = CurrencyAmount.fromRawAmount(\r\n      outputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\r\n      JSBI.add(JSBI.divide(numerator, denominator), ONE)\r\n    )\r\n    return [inputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\r\n  }\r\n\r\n  public getLiquidityMinted(\r\n    totalSupply: CurrencyAmount<Token>,\r\n    tokenAmountA: CurrencyAmount<Token>,\r\n    tokenAmountB: CurrencyAmount<Token>\r\n  ): CurrencyAmount<Token> {\r\n    invariant(totalSupply.currency.equals(this.liquidityToken), 'LIQUIDITY')\r\n    const tokenAmounts = tokenAmountA.currency.sortsBefore(tokenAmountB.currency) // does safety checks\r\n      ? [tokenAmountA, tokenAmountB]\r\n      : [tokenAmountB, tokenAmountA]\r\n    invariant(tokenAmounts[0].currency.equals(this.token0) && tokenAmounts[1].currency.equals(this.token1), 'TOKEN')\r\n\r\n    let liquidity: JSBI\r\n    if (JSBI.equal(totalSupply.quotient, ZERO)) {\r\n      liquidity = JSBI.subtract(\r\n        sqrt(JSBI.multiply(tokenAmounts[0].quotient, tokenAmounts[1].quotient)),\r\n        MINIMUM_LIQUIDITY\r\n      )\r\n    } else {\r\n      const amount0 = JSBI.divide(JSBI.multiply(tokenAmounts[0].quotient, totalSupply.quotient), this.reserve0.quotient)\r\n      const amount1 = JSBI.divide(JSBI.multiply(tokenAmounts[1].quotient, totalSupply.quotient), this.reserve1.quotient)\r\n      liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1\r\n    }\r\n    if (!JSBI.greaterThan(liquidity, ZERO)) {\r\n      throw new InsufficientInputAmountError()\r\n    }\r\n    return CurrencyAmount.fromRawAmount(this.liquidityToken, liquidity)\r\n  }\r\n\r\n  public getLiquidityValue(\r\n    token: Token,\r\n    totalSupply: CurrencyAmount<Token>,\r\n    liquidity: CurrencyAmount<Token>,\r\n    feeOn: boolean = false,\r\n    kLast?: BigintIsh\r\n  ): CurrencyAmount<Token> {\r\n    invariant(this.involvesToken(token), 'TOKEN')\r\n    invariant(totalSupply.currency.equals(this.liquidityToken), 'TOTAL_SUPPLY')\r\n    invariant(liquidity.currency.equals(this.liquidityToken), 'LIQUIDITY')\r\n    invariant(JSBI.lessThanOrEqual(liquidity.quotient, totalSupply.quotient), 'LIQUIDITY')\r\n\r\n    let totalSupplyAdjusted: CurrencyAmount<Token>\r\n    if (!feeOn) {\r\n      totalSupplyAdjusted = totalSupply\r\n    } else {\r\n      invariant(!!kLast, 'K_LAST')\r\n      const kLastParsed = JSBI.BigInt(kLast)\r\n      if (!JSBI.equal(kLastParsed, ZERO)) {\r\n        const rootK = sqrt(JSBI.multiply(this.reserve0.quotient, this.reserve1.quotient))\r\n        const rootKLast = sqrt(kLastParsed)\r\n        if (JSBI.greaterThan(rootK, rootKLast)) {\r\n          const numerator = JSBI.multiply(totalSupply.quotient, JSBI.subtract(rootK, rootKLast))\r\n          const denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast)\r\n          const feeLiquidity = JSBI.divide(numerator, denominator)\r\n          totalSupplyAdjusted = totalSupply.add(CurrencyAmount.fromRawAmount(this.liquidityToken, feeLiquidity))\r\n        } else {\r\n          totalSupplyAdjusted = totalSupply\r\n        }\r\n      } else {\r\n        totalSupplyAdjusted = totalSupply\r\n      }\r\n    }\r\n\r\n    return CurrencyAmount.fromRawAmount(\r\n      token,\r\n      JSBI.divide(JSBI.multiply(liquidity.quotient, this.reserveOf(token).quotient), totalSupplyAdjusted.quotient)\r\n    )\r\n  }\r\n}\r\n","import { BigintIsh } from '../types'\r\nimport { Fraction } from './Fraction'\r\nimport JSBI from 'jsbi'\r\nimport { Rounding } from '../enums'\r\n\r\nconst ONE_HUNDRED = new Fraction(JSBI.BigInt(100))\r\n\r\n/**\r\n * Converts a fraction to a percent\r\n * @param fraction the fraction to convert\r\n */\r\nfunction toPercent(fraction: Fraction): Percent {\r\n  return new Percent(fraction.numerator, fraction.denominator)\r\n}\r\n\r\nexport class Percent extends Fraction {\r\n  /**\r\n   * This boolean prevents a fraction from being interpreted as a Percent\r\n   */\r\n  public readonly isPercent: true = true\r\n\r\n  add(other: Fraction | BigintIsh): Percent {\r\n    return toPercent(super.add(other))\r\n  }\r\n\r\n  subtract(other: Fraction | BigintIsh): Percent {\r\n    return toPercent(super.subtract(other))\r\n  }\r\n\r\n  multiply(other: Fraction | BigintIsh): Percent {\r\n    return toPercent(super.multiply(other))\r\n  }\r\n\r\n  divide(other: Fraction | BigintIsh): Percent {\r\n    return toPercent(super.divide(other))\r\n  }\r\n\r\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\r\n    return super.multiply(ONE_HUNDRED).toSignificant(significantDigits, format, rounding)\r\n  }\r\n\r\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\r\n    return super.multiply(ONE_HUNDRED).toFixed(decimalPlaces, format, rounding)\r\n  }\r\n}\r\n","import { Currency } from './Currency'\r\nimport { Pair } from './Pair'\r\nimport { Price } from './Price'\r\nimport { Token } from './Token'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class Route<TInput extends Currency, TOutput extends Currency> {\r\n  public readonly pairs: Pair[]\r\n  public readonly path: Token[]\r\n  public readonly input: TInput\r\n  public readonly output: TOutput\r\n\r\n  public constructor(pairs: Pair[], input: TInput, output: TOutput) {\r\n    invariant(pairs.length > 0, 'PAIRS')\r\n    const chainId: number = pairs[0].chainId\r\n    invariant(\r\n      pairs.every(pair => pair.chainId === chainId),\r\n      'CHAIN_IDS'\r\n    )\r\n\r\n    const wrappedInput = input.wrapped\r\n    invariant(pairs[0].involvesToken(wrappedInput), 'INPUT')\r\n    invariant(typeof output === 'undefined' || pairs[pairs.length - 1].involvesToken(output.wrapped), 'OUTPUT')\r\n\r\n    const path: Token[] = [wrappedInput]\r\n    for (const [i, pair] of pairs.entries()) {\r\n      const currentInput = path[i]\r\n      invariant(currentInput.equals(pair.token0) || currentInput.equals(pair.token1), 'PATH')\r\n      const output = currentInput.equals(pair.token0) ? pair.token1 : pair.token0\r\n      path.push(output)\r\n    }\r\n\r\n    this.pairs = pairs\r\n    this.path = path\r\n    this.input = input\r\n    this.output = output\r\n  }\r\n\r\n  private _midPrice: Price<TInput, TOutput> | null = null\r\n\r\n  public get midPrice(): Price<TInput, TOutput> {\r\n    if (this._midPrice !== null) return this._midPrice\r\n    const prices: Price<Currency, Currency>[] = []\r\n    for (const [i, pair] of this.pairs.entries()) {\r\n      prices.push(\r\n        this.path[i].equals(pair.token0)\r\n          ? new Price(pair.reserve0.currency, pair.reserve1.currency, pair.reserve0.quotient, pair.reserve1.quotient)\r\n          : new Price(pair.reserve1.currency, pair.reserve0.currency, pair.reserve1.quotient, pair.reserve0.quotient)\r\n      )\r\n    }\r\n    const reduced = prices.slice(1).reduce((accumulator, currentValue) => accumulator.multiply(currentValue), prices[0])\r\n    return (this._midPrice = new Price(this.input, this.output, reduced.denominator, reduced.numerator))\r\n  }\r\n\r\n  public get chainId(): number {\r\n    return this.pairs[0].chainId\r\n  }\r\n}\r\n","import { Currency } from '../entities/Currency'\r\nimport { CurrencyAmount } from '../entities/CurrencyAmount'\r\nimport { Percent } from '../entities/Percent'\r\nimport { Price } from '../entities/Price'\r\n/**\r\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\r\n * @param midPrice mid price before the trade\r\n * @param inputAmount the input amount of the trade\r\n * @param outputAmount the output amount of the trade\r\n */\r\nexport function computePriceImpact<TBase extends Currency, TQuote extends Currency>(\r\n  midPrice: Price<TBase, TQuote>,\r\n  inputAmount: CurrencyAmount<TBase>,\r\n  outputAmount: CurrencyAmount<TQuote>\r\n): Percent {\r\n  const quotedOutputAmount = midPrice.quote(inputAmount)\r\n  // calculate price impact := (exactQuote - outputAmount) / exactQuote\r\n  const priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount)\r\n  return new Percent(priceImpact.numerator, priceImpact.denominator)\r\n}\r\n","import invariant from 'tiny-invariant'\r\n\r\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\r\n// `maxSize` by removing the last item\r\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\r\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\r\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\r\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\r\n\r\n  // short circuit first item add\r\n  if (items.length === 0) {\r\n    items.push(add)\r\n    return null\r\n  } else {\r\n    const isFull = items.length === maxSize\r\n    // short circuit if full and the additional item does not come before the last item\r\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\r\n      return add\r\n    }\r\n\r\n    let lo = 0,\r\n      hi = items.length\r\n\r\n    while (lo < hi) {\r\n      const mid = (lo + hi) >>> 1\r\n      if (comparator(items[mid], add) <= 0) {\r\n        lo = mid + 1\r\n      } else {\r\n        hi = mid\r\n      }\r\n    }\r\n    items.splice(lo, 0, add)\r\n    return isFull ? items.pop()! : null\r\n  }\r\n}\r\n","import { ONE, ZERO } from '../constants'\r\n\r\nimport { Currency } from './Currency'\r\nimport { CurrencyAmount } from './CurrencyAmount'\r\nimport { Fraction } from './Fraction'\r\nimport { Pair } from './Pair'\r\nimport { Percent } from './Percent'\r\nimport { Price } from './Price'\r\nimport { Route } from './Route'\r\nimport { Token } from './Token'\r\nimport { TradeType } from '../enums'\r\nimport { computePriceImpact } from '../functions/computePriceImpact'\r\nimport invariant from 'tiny-invariant'\r\nimport { sortedInsert } from '../functions/sortedInsert'\r\n\r\n// minimal interface so the input output comparator may be shared across types\r\ninterface InputOutput<TInput extends Currency, TOutput extends Currency> {\r\n  readonly inputAmount: CurrencyAmount<TInput>\r\n  readonly outputAmount: CurrencyAmount<TOutput>\r\n}\r\n\r\n// comparator function that allows sorting trades by their output amounts, in decreasing order, and then input amounts\r\n// in increasing order. i.e. the best trades have the most outputs for the least inputs and are sorted first\r\nexport function inputOutputComparator<TInput extends Currency, TOutput extends Currency>(\r\n  a: InputOutput<TInput, TOutput>,\r\n  b: InputOutput<TInput, TOutput>\r\n): number {\r\n  // must have same input and output token for comparison\r\n  invariant(a.inputAmount.currency.equals(b.inputAmount.currency), 'INPUT_CURRENCY')\r\n  invariant(a.outputAmount.currency.equals(b.outputAmount.currency), 'OUTPUT_CURRENCY')\r\n  if (a.outputAmount.equalTo(b.outputAmount)) {\r\n    if (a.inputAmount.equalTo(b.inputAmount)) {\r\n      return 0\r\n    }\r\n    // trade A requires less input than trade B, so A should come first\r\n    if (a.inputAmount.lessThan(b.inputAmount)) {\r\n      return -1\r\n    } else {\r\n      return 1\r\n    }\r\n  } else {\r\n    // tradeA has less output than trade B, so should come second\r\n    if (a.outputAmount.lessThan(b.outputAmount)) {\r\n      return 1\r\n    } else {\r\n      return -1\r\n    }\r\n  }\r\n}\r\n\r\n// extension of the input output comparator that also considers other dimensions of the trade in ranking them\r\nexport function tradeComparator<TInput extends Currency, TOutput extends Currency, TTradeType extends TradeType>(\r\n  a: Trade<TInput, TOutput, TTradeType>,\r\n  b: Trade<TInput, TOutput, TTradeType>\r\n) {\r\n  const ioComp = inputOutputComparator(a, b)\r\n  if (ioComp !== 0) {\r\n    return ioComp\r\n  }\r\n\r\n  // consider lowest slippage next, since these are less likely to fail\r\n  if (a.priceImpact.lessThan(b.priceImpact)) {\r\n    return -1\r\n  } else if (a.priceImpact.greaterThan(b.priceImpact)) {\r\n    return 1\r\n  }\r\n\r\n  // finally consider the number of hops since each hop costs gas\r\n  return a.route.path.length - b.route.path.length\r\n}\r\n\r\nexport interface BestTradeOptions {\r\n  // how many results to return\r\n  maxNumResults?: number\r\n  // the maximum number of hops a trade should contain\r\n  maxHops?: number\r\n}\r\n\r\n/**\r\n * Represents a trade executed against a list of pairs.\r\n * Does not account for slippage, i.e. trades that front run this trade and move the price.\r\n */\r\nexport class Trade<TInput extends Currency, TOutput extends Currency, TTradeType extends TradeType> {\r\n  /**\r\n   * The route of the trade, i.e. which pairs the trade goes through and the input/output currencies.\r\n   */\r\n  public readonly route: Route<TInput, TOutput>\r\n  /**\r\n   * The type of the trade, either exact in or exact out.\r\n   */\r\n  public readonly tradeType: TTradeType\r\n  /**\r\n   * The input amount for the trade assuming no slippage.\r\n   */\r\n  public readonly inputAmount: CurrencyAmount<TInput>\r\n  /**\r\n   * The output amount for the trade assuming no slippage.\r\n   */\r\n  public readonly outputAmount: CurrencyAmount<TOutput>\r\n  /**\r\n   * The price expressed in terms of output amount/input amount.\r\n   */\r\n  public readonly executionPrice: Price<TInput, TOutput>\r\n  /**\r\n   * The percent difference between the mid price before the trade and the trade execution price.\r\n   */\r\n  public readonly priceImpact: Percent\r\n\r\n  /**\r\n   * Constructs an exact in trade with the given amount in and route\r\n   * @param route route of the exact in trade\r\n   * @param amountIn the amount being passed in\r\n   */\r\n  public static exactIn<TInput extends Currency, TOutput extends Currency>(\r\n    route: Route<TInput, TOutput>,\r\n    amountIn: CurrencyAmount<TInput>\r\n  ): Trade<TInput, TOutput, TradeType.EXACT_INPUT> {\r\n    return new Trade(route, amountIn, TradeType.EXACT_INPUT)\r\n  }\r\n\r\n  /**\r\n   * Constructs an exact out trade with the given amount out and route\r\n   * @param route route of the exact out trade\r\n   * @param amountOut the amount returned by the trade\r\n   */\r\n  public static exactOut<TInput extends Currency, TOutput extends Currency>(\r\n    route: Route<TInput, TOutput>,\r\n    amountOut: CurrencyAmount<TOutput>\r\n  ): Trade<TInput, TOutput, TradeType.EXACT_OUTPUT> {\r\n    return new Trade(route, amountOut, TradeType.EXACT_OUTPUT)\r\n  }\r\n\r\n  public constructor(\r\n    route: Route<TInput, TOutput>,\r\n    amount: TTradeType extends TradeType.EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>,\r\n    tradeType: TTradeType\r\n  ) {\r\n    this.route = route\r\n    this.tradeType = tradeType\r\n\r\n    const tokenAmounts: CurrencyAmount<Token>[] = new Array(route.path.length)\r\n    if (tradeType === TradeType.EXACT_INPUT) {\r\n      invariant(amount.currency.equals(route.input), 'INPUT')\r\n      tokenAmounts[0] = amount.wrapped\r\n      for (let i = 0; i < route.path.length - 1; i++) {\r\n        const pair = route.pairs[i]\r\n        const [outputAmount] = pair.getOutputAmount(tokenAmounts[i])\r\n        tokenAmounts[i + 1] = outputAmount\r\n      }\r\n      this.inputAmount = CurrencyAmount.fromFractionalAmount(route.input, amount.numerator, amount.denominator)\r\n      this.outputAmount = CurrencyAmount.fromFractionalAmount(\r\n        route.output,\r\n        tokenAmounts[tokenAmounts.length - 1].numerator,\r\n        tokenAmounts[tokenAmounts.length - 1].denominator\r\n      )\r\n    } else {\r\n      invariant(amount.currency.equals(route.output), 'OUTPUT')\r\n      tokenAmounts[tokenAmounts.length - 1] = amount.wrapped\r\n      for (let i = route.path.length - 1; i > 0; i--) {\r\n        const pair = route.pairs[i - 1]\r\n        const [inputAmount] = pair.getInputAmount(tokenAmounts[i])\r\n        tokenAmounts[i - 1] = inputAmount\r\n      }\r\n      this.inputAmount = CurrencyAmount.fromFractionalAmount(\r\n        route.input,\r\n        tokenAmounts[0].numerator,\r\n        tokenAmounts[0].denominator\r\n      )\r\n      this.outputAmount = CurrencyAmount.fromFractionalAmount(route.output, amount.numerator, amount.denominator)\r\n    }\r\n    this.executionPrice = new Price(\r\n      this.inputAmount.currency,\r\n      this.outputAmount.currency,\r\n      this.inputAmount.quotient,\r\n      this.outputAmount.quotient\r\n    )\r\n    this.priceImpact = computePriceImpact(route.midPrice, this.inputAmount, this.outputAmount)\r\n  }\r\n\r\n  /**\r\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\r\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\r\n   */\r\n  public minimumAmountOut(slippageTolerance: Percent): CurrencyAmount<TOutput> {\r\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\r\n    if (this.tradeType === TradeType.EXACT_OUTPUT) {\r\n      return this.outputAmount\r\n    } else {\r\n      const slippageAdjustedAmountOut = new Fraction(ONE)\r\n        .add(slippageTolerance)\r\n        .invert()\r\n        .multiply(this.outputAmount.quotient).quotient\r\n      return CurrencyAmount.fromRawAmount(this.outputAmount.currency, slippageAdjustedAmountOut)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\r\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\r\n   */\r\n  public maximumAmountIn(slippageTolerance: Percent): CurrencyAmount<TInput> {\r\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\r\n    if (this.tradeType === TradeType.EXACT_INPUT) {\r\n      return this.inputAmount\r\n    } else {\r\n      const slippageAdjustedAmountIn = new Fraction(ONE).add(slippageTolerance).multiply(this.inputAmount.quotient)\r\n        .quotient\r\n      return CurrencyAmount.fromRawAmount(this.inputAmount.currency, slippageAdjustedAmountIn)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Given a list of pairs, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\r\n   * amount to an output token, making at most `maxHops` hops.\r\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\r\n   * the amount in among multiple routes.\r\n   * @param pairs the pairs to consider in finding the best trade\r\n   * @param nextAmountIn exact amount of input currency to spend\r\n   * @param currencyOut the desired currency out\r\n   * @param maxNumResults maximum number of results to return\r\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\r\n   * @param currentPairs used in recursion; the current list of pairs\r\n   * @param currencyAmountIn used in recursion; the original value of the currencyAmountIn parameter\r\n   * @param bestTrades used in recursion; the current list of best trades\r\n   */\r\n  public static bestTradeExactIn<TInput extends Currency, TOutput extends Currency>(\r\n    pairs: Pair[],\r\n    currencyAmountIn: CurrencyAmount<TInput>,\r\n    currencyOut: TOutput,\r\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\r\n    // used in recursion.\r\n    currentPairs: Pair[] = [],\r\n    nextAmountIn: CurrencyAmount<Currency> = currencyAmountIn,\r\n    bestTrades: Trade<TInput, TOutput, TradeType.EXACT_INPUT>[] = []\r\n  ): Trade<TInput, TOutput, TradeType.EXACT_INPUT>[] {\r\n    invariant(pairs.length > 0, 'PAIRS')\r\n    invariant(maxHops > 0, 'MAX_HOPS')\r\n    invariant(currencyAmountIn === nextAmountIn || currentPairs.length > 0, 'INVALID_RECURSION')\r\n\r\n    const amountIn = nextAmountIn.wrapped\r\n    const tokenOut = currencyOut.wrapped\r\n    for (let i = 0; i < pairs.length; i++) {\r\n      const pair = pairs[i]\r\n      // pair irrelevant\r\n      if (!pair.token0.equals(amountIn.currency) && !pair.token1.equals(amountIn.currency)) continue\r\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\r\n\r\n      let amountOut: CurrencyAmount<Token>\r\n      try {\r\n        ;[amountOut] = pair.getOutputAmount(amountIn)\r\n      } catch (error) {\r\n        // input too low\r\n        if (error.isInsufficientInputAmountError) {\r\n          continue\r\n        }\r\n        throw error\r\n      }\r\n      // we have arrived at the output token, so this is the final trade of one of the paths\r\n      if (amountOut.currency.equals(tokenOut)) {\r\n        sortedInsert(\r\n          bestTrades,\r\n          new Trade(\r\n            new Route([...currentPairs, pair], currencyAmountIn.currency, currencyOut),\r\n            currencyAmountIn,\r\n            TradeType.EXACT_INPUT\r\n          ),\r\n          maxNumResults,\r\n          tradeComparator\r\n        )\r\n      } else if (maxHops > 1 && pairs.length > 1) {\r\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\r\n\r\n        // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\r\n        Trade.bestTradeExactIn(\r\n          pairsExcludingThisPair,\r\n          currencyAmountIn,\r\n          currencyOut,\r\n          {\r\n            maxNumResults,\r\n            maxHops: maxHops - 1\r\n          },\r\n          [...currentPairs, pair],\r\n          amountOut,\r\n          bestTrades\r\n        )\r\n      }\r\n    }\r\n\r\n    return bestTrades\r\n  }\r\n\r\n  /**\r\n   * Return the execution price after accounting for slippage tolerance\r\n   * @param slippageTolerance the allowed tolerated slippage\r\n   */\r\n  public worstExecutionPrice(slippageTolerance: Percent): Price<TInput, TOutput> {\r\n    return new Price(\r\n      this.inputAmount.currency,\r\n      this.outputAmount.currency,\r\n      this.maximumAmountIn(slippageTolerance).quotient,\r\n      this.minimumAmountOut(slippageTolerance).quotient\r\n    )\r\n  }\r\n\r\n  /**\r\n   * similar to the above method but instead targets a fixed output amount\r\n   * given a list of pairs, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\r\n   * to an output token amount, making at most `maxHops` hops\r\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\r\n   * the amount in among multiple routes.\r\n   * @param pairs the pairs to consider in finding the best trade\r\n   * @param currencyIn the currency to spend\r\n   * @param nextAmountOut the exact amount of currency out\r\n   * @param maxNumResults maximum number of results to return\r\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\r\n   * @param currentPairs used in recursion; the current list of pairs\r\n   * @param currencyAmountOut used in recursion; the original value of the currencyAmountOut parameter\r\n   * @param bestTrades used in recursion; the current list of best trades\r\n   */\r\n  public static bestTradeExactOut<TInput extends Currency, TOutput extends Currency>(\r\n    pairs: Pair[],\r\n    currencyIn: TInput,\r\n    currencyAmountOut: CurrencyAmount<TOutput>,\r\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\r\n    // used in recursion.\r\n    currentPairs: Pair[] = [],\r\n    nextAmountOut: CurrencyAmount<Currency> = currencyAmountOut,\r\n    bestTrades: Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>[] = []\r\n  ): Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>[] {\r\n    invariant(pairs.length > 0, 'PAIRS')\r\n    invariant(maxHops > 0, 'MAX_HOPS')\r\n    invariant(currencyAmountOut === nextAmountOut || currentPairs.length > 0, 'INVALID_RECURSION')\r\n\r\n    const amountOut = nextAmountOut.wrapped\r\n    const tokenIn = currencyIn.wrapped\r\n    for (let i = 0; i < pairs.length; i++) {\r\n      const pair = pairs[i]\r\n      // pair irrelevant\r\n      if (!pair.token0.equals(amountOut.currency) && !pair.token1.equals(amountOut.currency)) continue\r\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\r\n\r\n      let amountIn: CurrencyAmount<Token>\r\n      try {\r\n        ;[amountIn] = pair.getInputAmount(amountOut)\r\n      } catch (error) {\r\n        // not enough liquidity in this pair\r\n        if (error.isInsufficientReservesError) {\r\n          continue\r\n        }\r\n        throw error\r\n      }\r\n      // we have arrived at the input token, so this is the first trade of one of the paths\r\n      if (amountIn.currency.equals(tokenIn)) {\r\n        sortedInsert(\r\n          bestTrades,\r\n          new Trade(\r\n            new Route([pair, ...currentPairs], currencyIn, currencyAmountOut.currency),\r\n            currencyAmountOut,\r\n            TradeType.EXACT_OUTPUT\r\n          ),\r\n          maxNumResults,\r\n          tradeComparator\r\n        )\r\n      } else if (maxHops > 1 && pairs.length > 1) {\r\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\r\n\r\n        // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\r\n        Trade.bestTradeExactOut(\r\n          pairsExcludingThisPair,\r\n          currencyIn,\r\n          currencyAmountOut,\r\n          {\r\n            maxNumResults,\r\n            maxHops: maxHops - 1\r\n          },\r\n          [pair, ...currentPairs],\r\n          amountIn,\r\n          bestTrades\r\n        )\r\n      }\r\n    }\r\n\r\n    return bestTrades\r\n  }\r\n}\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber'\r\n\r\nexport interface RToken {\r\n  name: string\r\n  address: string\r\n}\r\n\r\nexport enum PoolType {\r\n  ConstantProduct = 'ConstantProduct',\r\n  Weighted = 'Weighted',\r\n  Hybrid = 'Hybrid',\r\n  ConcentratedLiquidity = 'ConcentratedLiquidity'\r\n}\r\n\r\nexport interface PoolInfo {\r\n  address: string\r\n  token0: RToken\r\n  token1: RToken\r\n  type: PoolType\r\n  reserve0: BigNumber\r\n  reserve1: BigNumber\r\n  fee: number\r\n  minLiquidity: number\r\n  swapGasCost: number\r\n}\r\n\r\ntype Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\r\ntype PartialBy<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\r\ntype PoolInfoWithDefaults = PartialBy<PoolInfo, 'minLiquidity' | 'swapGasCost'>\r\n\r\nexport class Pool {\r\n  address: string\r\n  token0: RToken\r\n  token1: RToken\r\n  type: PoolType\r\n  reserve0: BigNumber\r\n  reserve1: BigNumber\r\n  fee: number\r\n  minLiquidity: number\r\n  swapGasCost: number\r\n\r\n  constructor(_info: PoolInfoWithDefaults) {\r\n    const info = {\r\n      minLiquidity: 1000,\r\n      swapGasCost: 40_000,\r\n      ..._info\r\n    }\r\n    this.address = info.address\r\n    this.token0 = info.token0\r\n    this.token1 = info.token1\r\n    this.type = info.type\r\n    this.reserve0 = info.reserve0\r\n    this.reserve1 = info.reserve1\r\n    this.fee = info.fee\r\n    this.minLiquidity = info.minLiquidity\r\n    this.swapGasCost = info.swapGasCost\r\n  }\r\n}\r\n\r\ntype PoolInfoNoType = Omit<PoolInfoWithDefaults, 'type'>\r\n\r\nexport class RConstantProductPool extends Pool {\r\n  constructor(info: PoolInfoNoType) {\r\n    super({\r\n      type: PoolType.ConstantProduct,\r\n      ...info\r\n    })\r\n  }\r\n}\r\n\r\ntype HybridPoolInfo = PoolInfoNoType & { A: number }\r\n\r\nexport class RHybridPool extends Pool {\r\n  A: number\r\n  constructor(info: HybridPoolInfo) {\r\n    super({\r\n      type: PoolType.Hybrid,\r\n      ...info\r\n    })\r\n    this.A = info.A\r\n  }\r\n}\r\n\r\ntype WeightedPoolInfo = PoolInfoNoType & { weight0: number; weight1: number }\r\n\r\nexport class RWeightedPool extends Pool {\r\n  weight0: number\r\n  weight1: number\r\n  constructor(info: WeightedPoolInfo) {\r\n    super({\r\n      type: PoolType.Weighted,\r\n      ...info\r\n    })\r\n    this.weight0 = info.weight0\r\n    this.weight1 = info.weight1\r\n  }\r\n}\r\n\r\nexport const CL_MIN_TICK = -887272\r\nexport const CL_MAX_TICK = -CL_MIN_TICK - 1\r\ninterface CLTick {\r\n  index: number\r\n  DLiquidity: number\r\n}\r\n\r\ninterface CLSpecific {\r\n  liquidity: number\r\n  sqrtPrice: number\r\n  nearestTick: number\r\n  ticks: CLTick[]\r\n}\r\n\r\ntype CLPoolInfo = Omit<PoolInfoNoType, 'reserve0' | 'reserve1'> & CLSpecific\r\n\r\nexport class RConcentratedLiquidityPool extends Pool {\r\n  liquidity: number\r\n  sqrtPrice: number\r\n  nearestTick: number\r\n  ticks: CLTick[]\r\n  constructor(info: CLPoolInfo) {\r\n    super({\r\n      type: PoolType.ConcentratedLiquidity,\r\n      reserve0: BigNumber.from(0),\r\n      reserve1: BigNumber.from(0),\r\n      ...info\r\n    })\r\n    this.liquidity = info.liquidity\r\n    this.sqrtPrice = info.sqrtPrice\r\n    this.nearestTick = info.nearestTick\r\n    this.ticks = info.ticks\r\n  }\r\n}\r\n\r\nexport interface RouteLeg {\r\n  address: string\r\n  token: RToken\r\n  swapPortion: number // For router contract\r\n  absolutePortion: number // To depict at webpage for user\r\n}\r\n\r\nexport enum RouteStatus {\r\n  Success = 'Success',\r\n  NoWay = 'NoWay',\r\n  Partial = 'Partial'\r\n}\r\nexport interface MultiRoute {\r\n  status: RouteStatus\r\n  amountIn: number\r\n  amountOut: number\r\n  legs: RouteLeg[]\r\n  gasSpent: number\r\n  totalAmountOut: number\r\n}\r\n","export const types = {\r\n  EIP712Domain: [\r\n    { name: 'name', type: 'string' },\r\n    { name: 'chainId', type: 'uint256' },\r\n    { name: 'verifyingContract', type: 'address' }\r\n  ],\r\n  LimitOrder: [\r\n    { name: 'maker', type: 'address' },\r\n    { name: 'tokenIn', type: 'address' },\r\n    { name: 'tokenOut', type: 'address' },\r\n    { name: 'amountIn', type: 'uint256' },\r\n    { name: 'amountOut', type: 'uint256' },\r\n    { name: 'recipient', type: 'address' },\r\n    { name: 'startTime', type: 'uint256' },\r\n    { name: 'endTime', type: 'uint256' },\r\n    { name: 'stopPrice', type: 'uint256' },\r\n    { name: 'oracleAddress', type: 'address' },\r\n    { name: 'oracleData', type: 'bytes32' }\r\n  ]\r\n}\r\n\r\nexport const bentoTypes = {\r\n  EIP712Domain: [\r\n    { name: 'name', type: 'string' },\r\n    { name: 'chainId', type: 'uint256' },\r\n    { name: 'verifyingContract', type: 'address' }\r\n  ],\r\n  SetMasterContractApproval: [\r\n    { name: 'warning', type: 'string' },\r\n    { name: 'user', type: 'address' },\r\n    { name: 'masterContract', type: 'address' },\r\n    { name: 'approved', type: 'bool' },\r\n    { name: 'nonce', type: 'uint256' }\r\n  ]\r\n}\r\nexport const name = 'LimitOrder'\r\n","import { BENTOBOX_ADDRESS, STOP_LIMIT_ORDER_ADDRESS } from '../constants'\r\nimport { bentoTypes, name, types } from '../types'\r\n\r\nimport { ChainId } from 'enums'\r\nimport { SigningKey } from '@ethersproject/signing-key'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { getMessage } from 'eip-712'\r\nimport { splitSignature } from '@ethersproject/bytes'\r\n\r\nexport interface Domain {\r\n  name: string\r\n  chainId: ChainId\r\n  verifyingContract: string\r\n}\r\n\r\nexport interface Message {\r\n  maker: string\r\n  tokenIn: string\r\n  tokenOut: string\r\n  amountIn: string\r\n  amountOut: string\r\n  recipient: string\r\n  startTime: string\r\n  endTime: string\r\n  stopPrice: string\r\n  oracleAddress: string\r\n  oracleData: string\r\n}\r\n\r\nexport interface BentoApprovalMessage {\r\n  warning: string\r\n  user: string\r\n  masterContract: string\r\n  approved: boolean\r\n  nonce: number\r\n}\r\n\r\nexport const getSignature = (message: Message, chainId: ChainId, privateKey: string) => {\r\n  let domain: Domain = {\r\n    name: name,\r\n    chainId: chainId,\r\n    verifyingContract: STOP_LIMIT_ORDER_ADDRESS[chainId]\r\n  }\r\n  return sign({ types, primaryType: 'LimitOrder', domain, message }, privateKey)\r\n}\r\n\r\nexport const getTypedData = (message: Message, chainId: ChainId) => {\r\n  let domain: Domain = {\r\n    name: name,\r\n    chainId: chainId,\r\n    verifyingContract: STOP_LIMIT_ORDER_ADDRESS[chainId]\r\n  }\r\n  return { types, primaryType: 'LimitOrder', domain, message }\r\n}\r\n\r\nexport const getTypedDataBento = (message: BentoApprovalMessage, chainId: ChainId) => {\r\n  let domain: Domain = {\r\n    name: 'BentoBox V1',\r\n    chainId: chainId,\r\n    verifyingContract: BENTOBOX_ADDRESS[chainId]\r\n  }\r\n  return {\r\n    types: bentoTypes,\r\n    primaryType: 'SetMasterContractApproval',\r\n    domain,\r\n    message\r\n  }\r\n}\r\n\r\nexport const getTypeHash = (typedData: any) => {\r\n  let message = getMessage(typedData, true).toString('hex')\r\n  return `0x${message}`\r\n}\r\n\r\nconst sign = (typedData: any, privateKey: string) => {\r\n  let message = getMessage(typedData, true)\r\n  const signingKey = new SigningKey(privateKey)\r\n  const { v, r, s } = signingKey.signDigest(message)\r\n  return { v, r, s }\r\n}\r\n\r\nexport const getSignatureWithProvider = async (\r\n  message: Message,\r\n  chainId: ChainId,\r\n  provider: Web3Provider\r\n): Promise<{ v: number; r: string; s: string }> => {\r\n  const typedData = getTypedData(message, chainId)\r\n  const signature = await provider.send('eth_signTypedData_v4', [message.maker, JSON.stringify(typedData)])\r\n  const { v, r, s } = splitSignature(signature)\r\n  return { v, r, s }\r\n}\r\n\r\nexport const getSignatureWithProviderBentobox = async (\r\n  message: BentoApprovalMessage,\r\n  chainId: ChainId,\r\n  provider: Web3Provider\r\n): Promise<{ v: number; r: string; s: string }> => {\r\n  const typedData = getTypedDataBento(message, chainId)\r\n  const signature = await provider.send('eth_signTypedData_v4', [message.user, JSON.stringify(typedData)])\r\n  const { v, r, s } = splitSignature(signature)\r\n  return { v, r, s }\r\n}\r\n\r\nexport const getSignatureBento = async (bentoApproval: BentoApprovalMessage, chainId: ChainId, privateKey: string) => {\r\n  let domain: Domain = {\r\n    name: 'BentoBox V1',\r\n    chainId: chainId,\r\n    verifyingContract: BENTOBOX_ADDRESS[chainId]\r\n  }\r\n  return sign(\r\n    {\r\n      types: bentoTypes,\r\n      primaryType: 'SetMasterContractApproval',\r\n      domain,\r\n      message: bentoApproval\r\n    },\r\n    privateKey\r\n  )\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport {\r\n  Pool,\r\n  PoolType,\r\n  RHybridPool,\r\n  RWeightedPool,\r\n  RConcentratedLiquidityPool,\r\n  CL_MIN_TICK,\r\n  CL_MAX_TICK\r\n} from '../types/MultiRouterTypes'\r\n\r\nconst A_PRECISION = 100\r\n\r\nconst DCacheBN = new Map<Pool, BigNumber>()\r\nexport function HybridComputeLiquidity(pool: RHybridPool): BigNumber {\r\n  const res = DCacheBN.get(pool)\r\n  if (res !== undefined) return res\r\n\r\n  const r0 = pool.reserve0\r\n  const r1 = pool.reserve1\r\n\r\n  if (r0.isZero() && r1.isZero()) {\r\n    DCacheBN.set(pool, BigNumber.from(0))\r\n    return BigNumber.from(0)\r\n  }\r\n  const s = r0.add(r1)\r\n\r\n  const nA = BigNumber.from(pool.A * 2)\r\n\r\n  let prevD\r\n\r\n  let D = s\r\n  for (let i = 0; i < 256; i++) {\r\n    const dP = D.mul(D)\r\n      .div(r0)\r\n      .mul(D)\r\n      .div(r1)\r\n      .div(4)\r\n    prevD = D\r\n    D = nA\r\n      .mul(s)\r\n      .div(A_PRECISION)\r\n      .add(dP.mul(2))\r\n      .mul(D)\r\n      .div(\r\n        nA\r\n          .div(A_PRECISION)\r\n          .sub(1)\r\n          .mul(D)\r\n          .add(dP.mul(3))\r\n      )\r\n    if (\r\n      D.sub(prevD)\r\n        .abs()\r\n        .lte(1)\r\n    ) {\r\n      break\r\n    }\r\n  }\r\n  DCacheBN.set(pool, D)\r\n  return D\r\n}\r\n\r\nexport function HybridgetY(pool: RHybridPool, x: BigNumber): BigNumber {\r\n  const D = HybridComputeLiquidity(pool)\r\n\r\n  const nA = pool.A * 2\r\n\r\n  let c = D.mul(D)\r\n    .div(x.mul(2))\r\n    .mul(D)\r\n    .div((nA * 2) / A_PRECISION)\r\n  let b = D.mul(A_PRECISION)\r\n    .div(nA)\r\n    .add(x)\r\n\r\n  let yPrev\r\n  let y = D\r\n  for (let i = 0; i < 256; i++) {\r\n    yPrev = y\r\n\r\n    y = y\r\n      .mul(y)\r\n      .add(c)\r\n      .div(\r\n        y\r\n          .mul(2)\r\n          .add(b)\r\n          .sub(D)\r\n      )\r\n    if (\r\n      y\r\n        .sub(yPrev)\r\n        .abs()\r\n        .lte(1)\r\n    ) {\r\n      break\r\n    }\r\n  }\r\n  return y\r\n}\r\n\r\nexport function calcOutByIn(pool: Pool, amountIn: number, direction = true): number {\r\n  const xBN = direction ? pool.reserve0 : pool.reserve1\r\n  const yBN = direction ? pool.reserve1 : pool.reserve0\r\n  switch (pool.type) {\r\n    case PoolType.ConstantProduct: {\r\n      const x = parseInt(xBN.toString())\r\n      const y = parseInt(yBN.toString())\r\n      return (y * amountIn) / (x / (1 - pool.fee) + amountIn)\r\n    }\r\n    case PoolType.Weighted: {\r\n      const x = parseInt(xBN.toString())\r\n      const y = parseInt(yBN.toString())\r\n      const wPool = pool as RWeightedPool\r\n      const weightRatio = direction ? wPool.weight0 / wPool.weight1 : wPool.weight1 / wPool.weight0\r\n      const actualIn = amountIn * (1 - pool.fee)\r\n      const out = y * (1 - Math.pow(x / (x + actualIn), weightRatio))\r\n      return out\r\n    }\r\n    case PoolType.Hybrid: {\r\n      // const xNew = x + amountIn*(1-pool.fee);\r\n      // const yNew = HybridgetY(pool, xNew);\r\n      // const dy = y - yNew;\r\n\r\n      const xNewBN = xBN.add(getBigNumber(undefined, amountIn * (1 - pool.fee)))\r\n      const yNewBN = HybridgetY(pool as RHybridPool, xNewBN)\r\n      const dy = parseInt(yBN.sub(yNewBN).toString())\r\n\r\n      return dy\r\n    }\r\n    case PoolType.ConcentratedLiquidity: {\r\n      return ConcentratedLiquidityOutByIn(pool as RConcentratedLiquidityPool, amountIn, direction)\r\n    }\r\n  }\r\n}\r\n\r\nexport class OutOfLiquidity extends Error {}\r\n\r\nfunction ConcentratedLiquidityOutByIn(pool: RConcentratedLiquidityPool, inAmount: number, direction: boolean) {\r\n  if (pool.ticks.length === 0) return 0\r\n  if (pool.ticks[0].index > CL_MIN_TICK) pool.ticks.unshift({ index: CL_MIN_TICK, DLiquidity: 0 })\r\n  if (pool.ticks[pool.ticks.length - 1].index < CL_MAX_TICK) pool.ticks.push({ index: CL_MAX_TICK, DLiquidity: 0 })\r\n\r\n  let nextTickToCross = direction ? pool.nearestTick : pool.nearestTick + 1\r\n  let currentPrice = pool.sqrtPrice\r\n  let currentLiquidity = pool.liquidity\r\n  let outAmount = 0\r\n  let input = inAmount\r\n\r\n  while (input > 0) {\r\n    if (nextTickToCross < 0 || nextTickToCross >= pool.ticks.length) throw new OutOfLiquidity()\r\n\r\n    const nextTickPrice = Math.sqrt(Math.pow(1.0001, pool.ticks[nextTickToCross].index))\r\n    // console.log('L, P, tick, nextP', currentLiquidity,\r\n    //     currentPrice, pool.ticks[nextTickToCross].index, nextTickPrice);\r\n    let output = 0\r\n\r\n    if (direction) {\r\n      const maxDx = (currentLiquidity * (currentPrice - nextTickPrice)) / currentPrice / nextTickPrice\r\n      //console.log('input, maxDx', input, maxDx);\r\n\r\n      if (input <= maxDx) {\r\n        output = (currentLiquidity * currentPrice * input) / (input + currentLiquidity / currentPrice)\r\n        input = 0\r\n      } else {\r\n        output = currentLiquidity * (currentPrice - nextTickPrice)\r\n        currentPrice = nextTickPrice\r\n        input -= maxDx\r\n        if (pool.ticks[nextTickToCross].index % 2 === 0) {\r\n          currentLiquidity -= pool.ticks[nextTickToCross].DLiquidity\r\n        } else {\r\n          currentLiquidity += pool.ticks[nextTickToCross].DLiquidity\r\n        }\r\n        nextTickToCross--\r\n      }\r\n    } else {\r\n      const maxDy = currentLiquidity * (nextTickPrice - currentPrice)\r\n      //console.log('input, maxDy', input, maxDy);\r\n      if (input <= maxDy) {\r\n        output = input / currentPrice / (currentPrice + input / currentLiquidity)\r\n        input = 0\r\n      } else {\r\n        output = (currentLiquidity * (nextTickPrice - currentPrice)) / currentPrice / nextTickPrice\r\n        currentPrice = nextTickPrice\r\n        input -= maxDy\r\n        if (pool.ticks[nextTickToCross].index % 2 === 0) {\r\n          currentLiquidity += pool.ticks[nextTickToCross].DLiquidity\r\n        } else {\r\n          currentLiquidity -= pool.ticks[nextTickToCross].DLiquidity\r\n        }\r\n        nextTickToCross++\r\n      }\r\n    }\r\n\r\n    outAmount += output * (1 - pool.fee)\r\n    //console.log('out', outAmount);\r\n  }\r\n\r\n  return outAmount\r\n}\r\n\r\nexport function calcInByOut(pool: Pool, amountOut: number, direction: boolean): number {\r\n  let input = 0\r\n  const xBN = direction ? pool.reserve0 : pool.reserve1\r\n  const yBN = direction ? pool.reserve1 : pool.reserve0\r\n  switch (pool.type) {\r\n    case PoolType.ConstantProduct: {\r\n      const x = parseInt(xBN.toString())\r\n      const y = parseInt(yBN.toString())\r\n      input = (x * amountOut) / (1 - pool.fee) / (y - amountOut)\r\n      break\r\n    }\r\n    case PoolType.Weighted: {\r\n      const x = parseInt(xBN.toString())\r\n      const y = parseInt(yBN.toString())\r\n      const wPool = pool as RWeightedPool\r\n      const weightRatio = direction ? wPool.weight0 / wPool.weight1 : wPool.weight1 / wPool.weight0\r\n      input = x * (1 - pool.fee) * (Math.pow(1 - amountOut / y, -weightRatio) - 1)\r\n      break\r\n    }\r\n    case PoolType.Hybrid: {\r\n      let yNewBN = yBN.sub(getBigNumber(undefined, amountOut))\r\n      if (yNewBN.lt(1))\r\n        // lack of precision\r\n        yNewBN = BigNumber.from(1)\r\n\r\n      const xNewBN = HybridgetY(pool as RHybridPool, yNewBN)\r\n      input = Math.round(parseInt(xNewBN.sub(xBN).toString()) / (1 - pool.fee))\r\n\r\n      // const yNew = y - amountOut;\r\n      // const xNew = HybridgetY(pool, yNew);\r\n      // input = (xNew - x)/(1-pool.fee);\r\n      break\r\n    }\r\n    default:\r\n      console.error('Unknown pool type')\r\n  }\r\n\r\n  // ASSERT(() => {\r\n  //   const amount2 = calcOutByIn(pool, input, direction);\r\n  //   const res = closeValues(amountOut, amount2, 1e-6);\r\n  //   if (!res) console.log(\"Error 138:\", amountOut, amount2, Math.abs(amountOut/amount2 - 1));\r\n  //   return res;\r\n  // });\r\n  if (input < 1) input = 1\r\n  return input\r\n}\r\n\r\nexport function calcPrice(pool: Pool, amountIn: number, takeFeeIntoAccount = true): number {\r\n  const r0 = parseInt(pool.reserve0.toString())\r\n  const r1 = parseInt(pool.reserve1.toString())\r\n  const oneMinusFee = takeFeeIntoAccount ? 1 - pool.fee : 1\r\n  switch (pool.type) {\r\n    case PoolType.ConstantProduct: {\r\n      const x = r0 / oneMinusFee\r\n      return (r1 * x) / (x + amountIn) / (x + amountIn)\r\n    }\r\n    case PoolType.Weighted: {\r\n      const wPool = pool as RWeightedPool\r\n      const weightRatio = wPool.weight0 / wPool.weight1\r\n      const x = r0 + amountIn * oneMinusFee\r\n      return (r1 * weightRatio * oneMinusFee * Math.pow(r0 / x, weightRatio)) / x\r\n    }\r\n    case PoolType.Hybrid: {\r\n      const hPool = pool as RHybridPool\r\n      const D = parseInt(HybridComputeLiquidity(hPool).toString())\r\n      const A = hPool.A / A_PRECISION\r\n      const x = r0 + amountIn\r\n      const b = 4 * A * x + D - 4 * A * D\r\n      const ac4 = (D * D * D) / x\r\n      const Ds = Math.sqrt(b * b + 4 * A * ac4)\r\n      const res = (0.5 - (2 * b - ac4 / x) / Ds / 4) * oneMinusFee\r\n      return res\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction calcInputByPriceConstantMean(pool: RWeightedPool, price: number) {\r\n  const r0 = parseInt(pool.reserve0.toString())\r\n  const r1 = parseInt(pool.reserve1.toString())\r\n  const weightRatio = pool.weight0 / pool.weight1\r\n  const t = r1 * price * weightRatio * (1 - pool.fee) * Math.pow(r0, weightRatio)\r\n  return (Math.pow(t, 1 / (weightRatio + 1)) - r0) / (1 - pool.fee)\r\n}\r\n\r\nexport function calcInputByPrice(pool: Pool, priceEffective: number, hint = 1): number {\r\n  switch (pool.type) {\r\n    case PoolType.ConstantProduct: {\r\n      const r0 = parseInt(pool.reserve0.toString())\r\n      const r1 = parseInt(pool.reserve1.toString())\r\n      const x = r0 / (1 - pool.fee)\r\n      const res = Math.sqrt(r1 * x * priceEffective) - x\r\n      return res\r\n    }\r\n    case PoolType.Weighted: {\r\n      const res = calcInputByPriceConstantMean(pool as RWeightedPool, priceEffective)\r\n      return res\r\n    }\r\n    case PoolType.Hybrid: {\r\n      return revertPositive((x: number) => 1 / calcPrice(pool, x), priceEffective, hint)\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\n//================================= Utils ====================================\r\n\r\nexport function ASSERT(f: () => boolean, t?: string) {\r\n  if (!f() && t) console.error(t)\r\n}\r\n\r\nexport function closeValues(a: number, b: number, accuracy: number): boolean {\r\n  if (accuracy === 0) return a === b\r\n  if (a < 1 / accuracy) return Math.abs(a - b) <= 10\r\n  return Math.abs(a / b - 1) < accuracy\r\n}\r\n\r\nexport function calcSquareEquation(a: number, b: number, c: number): [number, number] {\r\n  const D = b * b - 4 * a * c\r\n  console.assert(D >= 0, `Discriminant is negative! ${a} ${b} ${c}`)\r\n  const sqrtD = Math.sqrt(D)\r\n  return [(-b - sqrtD) / 2 / a, (-b + sqrtD) / 2 / a]\r\n}\r\n\r\n// returns such x > 0 that f(x) = out or 0 if there is no such x or f defined not everywhere\r\n// hint - approximation of x to spead up the algorithm\r\n// f assumed to be continues monotone growth function defined everywhere\r\nexport function revertPositive(f: (x: number) => number, out: number, hint = 1) {\r\n  try {\r\n    if (out <= f(0)) return 0\r\n    let min, max\r\n    if (f(hint) > out) {\r\n      min = hint / 2\r\n      while (f(min) > out) min /= 2\r\n      max = min * 2\r\n    } else {\r\n      max = hint * 2\r\n      while (f(max) < out) max *= 2\r\n      min = max / 2\r\n    }\r\n\r\n    while (max / min - 1 > 1e-4) {\r\n      const x0: number = (min + max) / 2\r\n      const y0 = f(x0)\r\n      if (out === y0) return x0\r\n      if (out < y0) max = x0\r\n      else min = x0\r\n    }\r\n    return (min + max) / 2\r\n  } catch (e) {\r\n    return 0\r\n  }\r\n}\r\n\r\nexport function getBigNumber(valueBN: BigNumber | undefined, value: number): BigNumber {\r\n  if (valueBN !== undefined) return valueBN\r\n\r\n  if (value < Number.MAX_SAFE_INTEGER) return BigNumber.from(Math.round(value))\r\n\r\n  const exp = Math.floor(Math.log(value) / Math.LN2)\r\n  console.assert(exp >= 51, 'Internal Error 314')\r\n  const shift = exp - 51\r\n  const mant = Math.round(value / Math.pow(2, shift))\r\n  const res = BigNumber.from(mant).mul(BigNumber.from(2).pow(shift))\r\n  return res\r\n}\r\n","import { BigNumber } from '@ethersproject/bignumber'\r\nimport { Pool, RToken, RouteLeg, MultiRoute, RouteStatus } from '../types/MultiRouterTypes'\r\nimport { ASSERT, calcInByOut, calcOutByIn, closeValues, calcPrice } from '../utils/MultiRouterMath'\r\n\r\nexport class Edge {\r\n  readonly GasConsumption = 40_000\r\n  readonly MINIMUM_LIQUIDITY = 1000\r\n  pool: Pool\r\n  vert0: Vertice\r\n  vert1: Vertice\r\n\r\n  canBeUsed: boolean\r\n  direction: boolean\r\n  amountInPrevious: number // How many liquidity were passed from vert0 to vert1\r\n  amountOutPrevious: number // How many liquidity were passed from vert0 to vert1\r\n  bestEdgeIncome: number // debug data\r\n\r\n  constructor(p: Pool, v0: Vertice, v1: Vertice) {\r\n    this.pool = p\r\n    this.vert0 = v0\r\n    this.vert1 = v1\r\n    this.amountInPrevious = 0\r\n    this.amountOutPrevious = 0\r\n    this.canBeUsed = true\r\n    this.direction = true\r\n    this.bestEdgeIncome = 0\r\n  }\r\n\r\n  reserve(v: Vertice): BigNumber {\r\n    return v === this.vert0 ? this.pool.reserve0 : this.pool.reserve1\r\n  }\r\n\r\n  calcOutput(v: Vertice, amountIn: number) {\r\n    const pool = this.pool\r\n    let out,\r\n      gas = this.amountInPrevious ? 0 : this.GasConsumption\r\n    if (v === this.vert1) {\r\n      if (this.direction) {\r\n        if (amountIn < this.amountOutPrevious) {\r\n          out = this.amountInPrevious - calcInByOut(pool, this.amountOutPrevious - amountIn, true)\r\n        } else {\r\n          out = calcOutByIn(pool, amountIn - this.amountOutPrevious, false) + this.amountInPrevious\r\n        }\r\n        if (amountIn === this.amountOutPrevious) {\r\n          // TODO: accuracy?\r\n          gas = -this.GasConsumption\r\n        }\r\n      } else {\r\n        out = calcOutByIn(pool, this.amountOutPrevious + amountIn, false) - this.amountInPrevious\r\n      }\r\n    } else {\r\n      if (this.direction) {\r\n        out = calcOutByIn(pool, this.amountInPrevious + amountIn, true) - this.amountOutPrevious\r\n      } else {\r\n        if (amountIn === this.amountInPrevious) {\r\n          // TODO: accuracy?\r\n          gas = -this.GasConsumption\r\n        }\r\n        if (amountIn < this.amountInPrevious) {\r\n          out = this.amountOutPrevious - calcInByOut(pool, this.amountInPrevious - amountIn, false)\r\n        } else {\r\n          out = calcOutByIn(pool, amountIn - this.amountInPrevious, true) + this.amountOutPrevious\r\n        }\r\n      }\r\n    }\r\n\r\n    // this.testApply(v, amountIn, out);\r\n\r\n    return [out, gas]\r\n  }\r\n\r\n  checkMinimalLiquidityExceededAfterSwap(from: Vertice, amountOut: number): boolean {\r\n    if (from === this.vert0) {\r\n      const r1 = parseInt(this.pool.reserve1.toString())\r\n      if (this.direction) {\r\n        return r1 - amountOut - this.amountOutPrevious < this.MINIMUM_LIQUIDITY\r\n      } else {\r\n        return r1 - amountOut + this.amountOutPrevious < this.MINIMUM_LIQUIDITY\r\n      }\r\n    } else {\r\n      const r0 = parseInt(this.pool.reserve0.toString())\r\n      if (this.direction) {\r\n        return r0 - amountOut + this.amountInPrevious < this.MINIMUM_LIQUIDITY\r\n      } else {\r\n        return r0 - amountOut - this.amountInPrevious < this.MINIMUM_LIQUIDITY\r\n      }\r\n    }\r\n  }\r\n\r\n  // doesn't used in production - just for testing\r\n  testApply(from: Vertice, amountIn: number, amountOut: number) {\r\n    console.assert(this.amountInPrevious * this.amountOutPrevious >= 0)\r\n    const inPrev = this.direction ? this.amountInPrevious : -this.amountInPrevious\r\n    const outPrev = this.direction ? this.amountOutPrevious : -this.amountOutPrevious\r\n    const to = from.getNeibour(this)\r\n    let directionNew,\r\n      amountInNew = 0,\r\n      amountOutNew = 0\r\n    if (to) {\r\n      const inInc = from === this.vert0 ? amountIn : -amountOut\r\n      const outInc = from === this.vert0 ? amountOut : -amountIn\r\n      const inNew = inPrev + inInc\r\n      const outNew = outPrev + outInc\r\n      if (inNew * outNew < 0) console.log('333')\r\n      console.assert(inNew * outNew >= 0)\r\n      if (inNew >= 0) {\r\n        directionNew = true\r\n        amountInNew = inNew\r\n        amountOutNew = outNew\r\n      } else {\r\n        directionNew = false\r\n        amountInNew = -inNew\r\n        amountOutNew = -outNew\r\n      }\r\n    } else console.error('Error 221')\r\n\r\n    if (directionNew) {\r\n      const calc = calcOutByIn(this.pool, amountInNew, directionNew)\r\n      const res = closeValues(amountOutNew, calc, 1e-6)\r\n      if (!res) console.log('Err 225-1 !!', amountOutNew, calc, Math.abs(calc / amountOutNew - 1))\r\n      return res\r\n    } else {\r\n      const calc = calcOutByIn(this.pool, amountOutNew, directionNew)\r\n      const res = closeValues(amountInNew, calc, 1e-6)\r\n      if (!res) console.log('Err 225-2!!', amountInNew, calc, Math.abs(calc / amountInNew - 1))\r\n      return res\r\n    }\r\n  }\r\n\r\n  applySwap(from: Vertice) {\r\n    console.assert(this.amountInPrevious * this.amountOutPrevious >= 0)\r\n    const inPrev = this.direction ? this.amountInPrevious : -this.amountInPrevious\r\n    const outPrev = this.direction ? this.amountOutPrevious : -this.amountOutPrevious\r\n    const to = from.getNeibour(this)\r\n    if (to) {\r\n      const inInc = from === this.vert0 ? from.bestIncome : -to.bestIncome\r\n      const outInc = from === this.vert0 ? to.bestIncome : -from.bestIncome\r\n      const inNew = inPrev + inInc\r\n      const outNew = outPrev + outInc\r\n      console.assert(inNew * outNew >= 0)\r\n      if (inNew >= 0) {\r\n        this.direction = true\r\n        this.amountInPrevious = inNew\r\n        this.amountOutPrevious = outNew\r\n      } else {\r\n        this.direction = false\r\n        this.amountInPrevious = -inNew\r\n        this.amountOutPrevious = -outNew\r\n      }\r\n    } else console.error('Error 221')\r\n\r\n    ASSERT(() => {\r\n      if (this.direction)\r\n        return closeValues(this.amountOutPrevious, calcOutByIn(this.pool, this.amountInPrevious, this.direction), 1e-6)\r\n      else {\r\n        return closeValues(this.amountInPrevious, calcOutByIn(this.pool, this.amountOutPrevious, this.direction), 1e-6)\r\n      }\r\n    }, `Error 225`)\r\n  }\r\n}\r\n\r\nexport class Vertice {\r\n  token: RToken\r\n  edges: Edge[]\r\n\r\n  price: number\r\n  gasPrice: number\r\n\r\n  bestIncome: number // temp data used for findBestPath algorithm\r\n  gasSpent: number // temp data used for findBestPath algorithm\r\n  bestTotal: number // temp data used for findBestPath algorithm\r\n  bestSource?: Edge // temp data used for findBestPath algorithm\r\n  checkLine: number // debug data\r\n\r\n  constructor(t: RToken) {\r\n    this.token = t\r\n    this.edges = []\r\n    this.price = 0\r\n    this.gasPrice = 0\r\n    this.bestIncome = 0\r\n    this.gasSpent = 0\r\n    this.bestTotal = 0\r\n    this.bestSource = undefined\r\n    this.checkLine = -1\r\n  }\r\n\r\n  getNeibour(e?: Edge) {\r\n    if (!e) return\r\n    return e.vert0 === this ? e.vert1 : e.vert0\r\n  }\r\n}\r\n\r\nexport class Graph {\r\n  vertices: Vertice[]\r\n  edges: Edge[]\r\n  tokens: Map<RToken, Vertice>\r\n\r\n  constructor(pools: Pool[], baseToken: RToken, gasPrice: number) {\r\n    this.vertices = []\r\n    this.edges = []\r\n    this.tokens = new Map()\r\n    pools.forEach(p => {\r\n      const v0 = this.getOrCreateVertice(p.token0)\r\n      const v1 = this.getOrCreateVertice(p.token1)\r\n      const edge = new Edge(p, v0, v1)\r\n      v0.edges.push(edge)\r\n      v1.edges.push(edge)\r\n      this.edges.push(edge)\r\n    })\r\n    const baseVert = this.tokens.get(baseToken)\r\n    if (baseVert) {\r\n      this.setPrices(baseVert, 1, gasPrice)\r\n    }\r\n  }\r\n\r\n  setPrices(from: Vertice, price: number, gasPrice: number) {\r\n    if (from.price !== 0) return\r\n    from.price = price\r\n    from.gasPrice = gasPrice\r\n    const edges = from.edges\r\n      .map((e): [Edge, number] => [e, parseInt(e.reserve(from).toString())])\r\n      .sort(([_1, r1], [_2, r2]) => r2 - r1)\r\n    edges.forEach(([e, _]) => {\r\n      const v = e.vert0 === from ? e.vert1 : e.vert0\r\n      if (v.price !== 0) return\r\n      let p = calcPrice(e.pool, 0, false)\r\n      if (from === e.vert0) p = 1 / p\r\n      this.setPrices(v, price * p, gasPrice / p)\r\n    })\r\n  }\r\n\r\n  getOrCreateVertice(token: RToken) {\r\n    let vert = this.tokens.get(token)\r\n    if (vert) return vert\r\n    vert = new Vertice(token)\r\n    this.vertices.push(vert)\r\n    this.tokens.set(token, vert)\r\n    return vert\r\n  }\r\n\r\n  exportPath(from: RToken, to: RToken) {\r\n    //}, _route: MultiRoute) {\r\n    // const allPools = new Map<string, Pool>();\r\n    // this.edges.forEach(p => allPools.set(p.address, p));\r\n    // const usedPools = new Map<string, boolean>();\r\n    // route.legs.forEach(l => usedPools.set(l.address, l.token === allPools.get(l.address)?.token0))\r\n\r\n    const fromVert = this.tokens.get(from) as Vertice\r\n    const toVert = this.tokens.get(to) as Vertice\r\n    const initValue = (fromVert.bestIncome * fromVert.price) / toVert.price\r\n\r\n    const route = new Set<Edge>()\r\n    for (let v = toVert; v !== fromVert; v = v.getNeibour(v.bestSource) as Vertice) {\r\n      if (v.bestSource) route.add(v.bestSource)\r\n    }\r\n\r\n    function edgeStyle(e: Edge) {\r\n      const finish = e.vert1.bestSource === e\r\n      const start = e.vert0.bestSource === e\r\n      let label\r\n      if (e.bestEdgeIncome === -1) label = 'label: \"low_liq\"'\r\n      if (e.bestEdgeIncome !== 0) label = `label: \"${print((e.bestEdgeIncome / initValue - 1) * 100, 3)}%\"`\r\n      const edgeValue = route.has(e) ? 'value: 2' : undefined\r\n      let arrow\r\n      if (finish && start) arrow = 'arrows: \"from,to\"'\r\n      if (finish) arrow = 'arrows: \"to\"'\r\n      if (start) arrow = 'arrows: \"from\"'\r\n      return ['', label, edgeValue, arrow].filter(a => a !== undefined).join(', ')\r\n    }\r\n\r\n    function print(n: number, digits: number) {\r\n      let out\r\n      if (n === 0) out = '0'\r\n      else {\r\n        const n0 = n > 0 ? n : -n\r\n        const shift = digits - Math.ceil(Math.log(n0) / Math.LN10)\r\n        if (shift <= 0) out = `${Math.round(n0)}`\r\n        else {\r\n          const mult = Math.pow(10, shift)\r\n          out = `${Math.round(n0 * mult) / mult}`\r\n        }\r\n        if (n < 0) out = -out\r\n      }\r\n      return out\r\n    }\r\n\r\n    function nodeLabel(v: Vertice) {\r\n      const value = (v.bestIncome * v.price) / toVert.price\r\n      const income = `${print(value, 3)}`\r\n      const total = `${print(v.bestTotal, 3)}`\r\n      // const income = `${print((value/initValue-1)*100, 3)}%`\r\n      // const total = `${print((v.bestTotal/initValue-1)*100, 3)}%`\r\n      const checkLine = v.checkLine === -1 ? undefined : `${v.checkLine}`\r\n      return [checkLine, income, total].filter(a => a !== undefined).join(':')\r\n    }\r\n\r\n    const nodes = `var nodes = new vis.DataSet([\r\n      ${this.vertices.map(t => `{ id: ${t.token.name}, label: \"${nodeLabel(t)}\"}`).join(',\\n\\t\\t')}\r\n    ]);\\n`\r\n    const edges = `var edges = new vis.DataSet([\r\n      ${this.edges.map(p => `{ from: ${p.vert0.token.name}, to: ${p.vert1.token.name}${edgeStyle(p)}}`).join(',\\n\\t\\t')}\r\n    ]);\\n`\r\n    const data = `var data = {\r\n        nodes: nodes,\r\n        edges: edges,\r\n    };\\n`\r\n\r\n    const fs = require('fs')\r\n    fs.writeFileSync('D:/Info/Notes/GraphVisualization/data.js', nodes + edges + data)\r\n  }\r\n\r\n  findBestPath(\r\n    from: RToken,\r\n    to: RToken,\r\n    amountIn: number\r\n  ):\r\n    | {\r\n        path: Edge[]\r\n        output: number\r\n        gasSpent: number\r\n        totalOutput: number\r\n      }\r\n    | undefined {\r\n    const start = this.tokens.get(from)\r\n    const finish = this.tokens.get(to)\r\n    if (!start || !finish) return\r\n\r\n    this.edges.forEach(e => (e.bestEdgeIncome = 0))\r\n    this.vertices.forEach(v => {\r\n      v.bestIncome = 0\r\n      v.gasSpent = 0\r\n      v.bestTotal = 0\r\n      v.bestSource = undefined\r\n      v.checkLine = -1\r\n    })\r\n    start.bestIncome = amountIn\r\n    start.bestTotal = amountIn\r\n    const processedVert = new Set<Vertice>()\r\n    const nextVertList = [start] // TODO: Use sorted Set!\r\n\r\n    let checkLine = 0\r\n    for (;;) {\r\n      let closestVert: Vertice | undefined\r\n      let closestTotal = -1\r\n      let closestPosition = 0\r\n      nextVertList.forEach((v, i) => {\r\n        if (v.bestTotal > closestTotal) {\r\n          closestTotal = v.bestTotal\r\n          closestVert = v\r\n          closestPosition = i\r\n        }\r\n      })\r\n\r\n      if (!closestVert) return\r\n\r\n      closestVert.checkLine = checkLine++\r\n\r\n      if (closestVert === finish) {\r\n        const bestPath = []\r\n        for (let v: Vertice | undefined = finish; v?.bestSource; v = v.getNeibour(v.bestSource)) {\r\n          bestPath.unshift(v.bestSource)\r\n        }\r\n        return {\r\n          path: bestPath,\r\n          output: finish.bestIncome,\r\n          gasSpent: finish.gasSpent,\r\n          totalOutput: finish.bestTotal\r\n        }\r\n      }\r\n      nextVertList.splice(closestPosition, 1)\r\n\r\n      closestVert.edges.forEach(e => {\r\n        const v2 = closestVert === e.vert0 ? e.vert1 : e.vert0\r\n        if (processedVert.has(v2)) return\r\n        let newIncome, gas\r\n        try {\r\n          ;[newIncome, gas] = e.calcOutput(closestVert as Vertice, (closestVert as Vertice).bestIncome)\r\n        } catch (e) {\r\n          // Any arithmetic error or out-of-liquidity\r\n          return\r\n        }\r\n        if (e.checkMinimalLiquidityExceededAfterSwap(closestVert as Vertice, newIncome)) {\r\n          e.bestEdgeIncome = -1\r\n          return\r\n        }\r\n        const newGasSpent = (closestVert as Vertice).gasSpent + gas\r\n        const price = v2.price / finish.price\r\n        const newTotal = newIncome * price - newGasSpent * finish.gasPrice\r\n\r\n        console.assert(e.bestEdgeIncome === 0, 'Error 373')\r\n        e.bestEdgeIncome = newIncome * price\r\n\r\n        if (!v2.bestSource) nextVertList.push(v2)\r\n        if (!v2.bestSource || newTotal > v2.bestTotal) {\r\n          v2.bestIncome = newIncome\r\n          v2.gasSpent = newGasSpent\r\n          v2.bestTotal = newTotal\r\n          v2.bestSource = e\r\n        }\r\n      })\r\n      processedVert.add(closestVert)\r\n    }\r\n  }\r\n\r\n  addPath(from: Vertice | undefined, to: Vertice | undefined, path: Edge[]) {\r\n    let _from = from\r\n    path.forEach(e => {\r\n      if (_from) {\r\n        e.applySwap(_from)\r\n        _from = _from.getNeibour(e)\r\n      } else {\r\n        console.error('Unexpected 315')\r\n      }\r\n    })\r\n\r\n    ASSERT(() => {\r\n      const res = this.vertices.every(v => {\r\n        let total = 0\r\n        let totalModule = 0\r\n        v.edges.forEach(e => {\r\n          if (e.vert0 === v) {\r\n            if (e.direction) {\r\n              total -= e.amountInPrevious\r\n            } else {\r\n              total += e.amountInPrevious\r\n            }\r\n            totalModule += e.amountInPrevious\r\n          } else {\r\n            if (e.direction) {\r\n              total += e.amountOutPrevious\r\n            } else {\r\n              total -= e.amountOutPrevious\r\n            }\r\n            totalModule += e.amountOutPrevious\r\n          }\r\n        })\r\n        if (v === from) return total <= 0\r\n        if (v === to) return total >= 0\r\n        if (totalModule === 0) return total === 0\r\n        return Math.abs(total / totalModule) < 1e10\r\n      })\r\n      return res\r\n    }, 'Error 290')\r\n  }\r\n\r\n  findBestRoute(from: RToken, to: RToken, amountIn: number, mode: number | number[]): MultiRoute {\r\n    let routeValues = []\r\n    if (Array.isArray(mode)) {\r\n      const sum = mode.reduce((a, b) => a + b, 0)\r\n      routeValues = mode.map(e => e / sum)\r\n    } else {\r\n      for (let i = 0; i < mode; ++i) routeValues.push(1 / mode)\r\n    }\r\n\r\n    this.edges.forEach(e => {\r\n      e.amountInPrevious = 0\r\n      e.amountOutPrevious = 0\r\n      e.direction = true\r\n    })\r\n    let output = 0\r\n    let gasSpentInit = 0\r\n    //let totalOutput = 0\r\n    let totalrouted = 0\r\n    let step\r\n    for (step = 0; step < routeValues.length; ++step) {\r\n      const p = this.findBestPath(from, to, amountIn * routeValues[step])\r\n      if (!p) {\r\n        break\r\n      } else {\r\n        output += p.output\r\n        gasSpentInit += p.gasSpent\r\n        //totalOutput += p.totalOutput\r\n        this.addPath(this.tokens.get(from), this.tokens.get(to), p.path)\r\n        totalrouted += routeValues[step]\r\n      }\r\n    }\r\n    if (step == 0)\r\n      return {\r\n        status: RouteStatus.NoWay,\r\n        amountIn: 0,\r\n        amountOut: 0,\r\n        legs: [],\r\n        gasSpent: 0,\r\n        totalAmountOut: 0\r\n      }\r\n    let status\r\n    if (step < routeValues.length) status = RouteStatus.Partial\r\n    else status = RouteStatus.Success\r\n\r\n    const fromVert = this.tokens.get(from) as Vertice\r\n    const toVert = this.tokens.get(to) as Vertice\r\n    const [legs, gasSpent, topologyWasChanged] = this.getRouteLegs(fromVert, toVert)\r\n    console.assert(gasSpent <= gasSpentInit, 'Internal Error 491')\r\n\r\n    if (topologyWasChanged) {\r\n      output = this.calcLegsAmountOut(legs, amountIn, to)\r\n    }\r\n\r\n    return {\r\n      status,\r\n      amountIn: amountIn * totalrouted,\r\n      amountOut: output,\r\n      legs,\r\n      gasSpent,\r\n      totalAmountOut: output - gasSpent * toVert.gasPrice\r\n    }\r\n  }\r\n\r\n  getRouteLegs(from: Vertice, to: Vertice): [RouteLeg[], number, boolean] {\r\n    const [nodes, topologyWasChanged] = this.cleanTopology(from, to)\r\n    const legs: RouteLeg[] = []\r\n    let gasSpent = 0\r\n    nodes.forEach(n => {\r\n      const outEdges = this.getOutputEdges(n).map(e => {\r\n        const from = this.edgeFrom(e)\r\n        return from ? [e, from[0], from[1]] : [e]\r\n      })\r\n\r\n      let outAmount = outEdges.reduce((a, b) => a + (b[2] as number), 0)\r\n      if (outAmount <= 0) return\r\n\r\n      const total = outAmount\r\n      outEdges.forEach((e, i) => {\r\n        const p = e[2] as number\r\n        const quantity = i + 1 === outEdges.length ? 1 : p / outAmount\r\n        legs.push({\r\n          address: (e[0] as Edge).pool.address,\r\n          token: n.token,\r\n          swapPortion: quantity,\r\n          absolutePortion: p / total\r\n        })\r\n        gasSpent += (e[0] as Edge).pool.swapGasCost\r\n        outAmount -= p\r\n      })\r\n      console.assert(outAmount / total < 1e-12, 'Error 281')\r\n    })\r\n    return [legs, gasSpent, topologyWasChanged]\r\n  }\r\n\r\n  edgeFrom(e: Edge): [Vertice, number] | undefined {\r\n    if (e.amountInPrevious === 0) return undefined\r\n    return e.direction ? [e.vert0, e.amountInPrevious] : [e.vert1, e.amountOutPrevious]\r\n  }\r\n\r\n  getOutputEdges(v: Vertice): Edge[] {\r\n    return v.edges.filter(e => {\r\n      if (!e.canBeUsed) return false\r\n      if (e.amountInPrevious === 0) return false\r\n      if (e.direction !== (e.vert0 === v)) return false\r\n      return true\r\n    })\r\n  }\r\n\r\n  getInputEdges(v: Vertice): Edge[] {\r\n    return v.edges.filter(e => {\r\n      if (!e.canBeUsed) return false\r\n      if (e.amountInPrevious === 0) return false\r\n      if (e.direction === (e.vert0 === v)) return false\r\n      return true\r\n    })\r\n  }\r\n\r\n  calcLegsAmountOut(legs: RouteLeg[], amountIn: number, to: RToken) {\r\n    const amounts = new Map<RToken, number>()\r\n    amounts.set(legs[0].token, amountIn)\r\n    legs.forEach(l => {\r\n      const vert = this.tokens.get(l.token)\r\n      console.assert(vert !== undefined, 'Internal Error 570')\r\n      const edge = (vert as Vertice).edges.find(e => e.pool.address === l.address)\r\n      console.assert(edge !== undefined, 'Internel Error 569')\r\n      const pool = (edge as Edge).pool\r\n      const direction = vert === (edge as Edge).vert0\r\n\r\n      const inputTotal = amounts.get(l.token)\r\n      console.assert(inputTotal !== undefined, 'Internal Error 564')\r\n      const input = (inputTotal as number) * l.swapPortion\r\n      amounts.set(l.token, (inputTotal as number) - input)\r\n      const output = calcOutByIn(pool, input, direction)\r\n\r\n      const vertNext = (vert as Vertice).getNeibour(edge) as Vertice\r\n      const prevAmount = amounts.get(vertNext.token)\r\n      amounts.set(vertNext.token, (prevAmount || 0) + output)\r\n    })\r\n    return amounts.get(to) || 0\r\n  }\r\n\r\n  // removes all cycles if there are any, then removes all dead end could appear after cycle removing\r\n  // Returns clean result topologically sorted\r\n  cleanTopology(from: Vertice, to: Vertice): [Vertice[], boolean] {\r\n    let topologyWasChanged = false\r\n    let result = this.topologySort(from, to)\r\n    if (result[0] !== 2) {\r\n      topologyWasChanged = true\r\n      console.assert(result[0] === 0, 'Internal Error 554')\r\n      while (result[0] === 0) {\r\n        this.removeWeakestEdge(result[1])\r\n        result = this.topologySort(from, to)\r\n      }\r\n      if (result[0] === 3) {\r\n        this.removeDeadEnds(result[1])\r\n        result = this.topologySort(from, to)\r\n      }\r\n      console.assert(result[0] === 2, 'Internal Error 563')\r\n      if (result[0] !== 2) return [[], topologyWasChanged]\r\n    }\r\n    return [result[1], topologyWasChanged]\r\n  }\r\n\r\n  removeDeadEnds(verts: Vertice[]) {\r\n    verts.forEach(v => {\r\n      this.getInputEdges(v).forEach(e => {\r\n        e.canBeUsed = false\r\n      })\r\n    })\r\n  }\r\n\r\n  removeWeakestEdge(verts: Vertice[]) {\r\n    let minVert: Vertice, minVertNext: Vertice\r\n    let minOutput = Number.MAX_VALUE\r\n    verts.forEach((v1, i) => {\r\n      const v2 = i === 0 ? verts[verts.length - 1] : verts[i - 1]\r\n      let out = 0\r\n      this.getOutputEdges(v1).forEach(e => {\r\n        if (v1.getNeibour(e) !== v2) return\r\n        out += e.direction ? e.amountOutPrevious : e.amountInPrevious\r\n      })\r\n      if (out < minOutput) {\r\n        minVert = v1\r\n        minVertNext = v2\r\n        minOutput = out\r\n      }\r\n    })\r\n    // @ts-ignore\r\n    this.getOutputEdges(minVert).forEach(e => {\r\n      if (minVert.getNeibour(e) !== minVertNext) return\r\n      e.canBeUsed = false\r\n    })\r\n  }\r\n\r\n  // topological sort\r\n  // if there is a cycle - returns [0, <List of envolved vertices in the cycle>]\r\n  // if there are no cycles but deadends- returns [3, <List of all envolved deadend vertices>]\r\n  // if there are no cycles or deadends- returns [2, <List of all envolved vertices topologically sorted>]\r\n  topologySort(from: Vertice, to: Vertice): [number, Vertice[]] {\r\n    // undefined or 0 - not processed, 1 - in process, 2 - finished, 3 - dedend\r\n    const vertState = new Map<Vertice, number>()\r\n    const vertsFinished: Vertice[] = []\r\n    const foundCycle: Vertice[] = []\r\n    const foundDeadEndVerts: Vertice[] = []\r\n\r\n    const that = this\r\n    // 0 - cycle was found and created, return\r\n    // 1 - during cycle creating\r\n    // 2 - vertex is processed ok\r\n    // 3 - dead end vertex\r\n    function topSortRecursive(current: Vertice): number {\r\n      const state = vertState.get(current)\r\n      if (state === 2 || state === 3) return state\r\n      if (state === 1) {\r\n        console.assert(foundCycle.length == 0, 'Internal Error 566')\r\n        foundCycle.push(current)\r\n        return 1\r\n      }\r\n      vertState.set(current, 1)\r\n\r\n      let successors2Exist = false\r\n      const outEdges = that.getOutputEdges(current)\r\n      for (let i = 0; i < outEdges.length; ++i) {\r\n        const e = outEdges[i]\r\n        const res = topSortRecursive(current.getNeibour(e) as Vertice)\r\n        if (res === 0) return 0\r\n        if (res === 1) {\r\n          if (foundCycle[0] === current) return 0\r\n          else {\r\n            foundCycle.push(current)\r\n            return 1\r\n          }\r\n        }\r\n        if (res === 2) successors2Exist = true // Ok successors\r\n      }\r\n      if (successors2Exist) {\r\n        console.assert(current !== to, 'Internal Error 589')\r\n        vertsFinished.push(current)\r\n        vertState.set(current, 2)\r\n        return 2\r\n      } else {\r\n        if (current !== to) {\r\n          foundDeadEndVerts.push(current)\r\n          vertState.set(current, 3)\r\n          return 3\r\n        }\r\n        vertsFinished.push(current)\r\n        vertState.set(current, 2)\r\n        return 2\r\n      }\r\n    }\r\n\r\n    const res = topSortRecursive(from)\r\n    if (res === 0) return [0, foundCycle]\r\n    if (foundDeadEndVerts.length) return [3, foundDeadEndVerts]\r\n    ASSERT(() => {\r\n      if (vertsFinished[0] !== to) return false\r\n      if (vertsFinished[vertsFinished.length - 1] !== from) return false\r\n      return true\r\n    }, 'Internal Error 614')\r\n    if (res === 2) return [2, vertsFinished.reverse()]\r\n    console.assert(true, 'Internal Error 612')\r\n    return [1, []]\r\n  }\r\n}\r\n\r\nexport function findMultiRouting(\r\n  from: RToken,\r\n  to: RToken,\r\n  amountIn: number,\r\n  pools: Pool[],\r\n  baseToken: RToken,\r\n  gasPrice: number,\r\n  steps: number | number[] = 12\r\n): MultiRoute {\r\n  const g = new Graph(pools, baseToken, gasPrice)\r\n  const fromV = g.tokens.get(from)\r\n  if (fromV?.price === 0) {\r\n    g.setPrices(fromV, 1, 0)\r\n  }\r\n  const out = g.findBestRoute(from, to, amountIn, steps)\r\n  return out\r\n}\r\n","import { SOLIDITY_TYPE_MAXIMA, SolidityType, ZERO } from '../constants'\r\n\r\nimport JSBI from 'jsbi'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport function validateSolidityTypeInstance(value: JSBI, solidityType: SolidityType): void {\r\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), `${value} is not a ${solidityType}.`)\r\n  invariant(JSBI.lessThanOrEqual(value, SOLIDITY_TYPE_MAXIMA[solidityType]), `${value} is not a ${solidityType}.`)\r\n}\r\n","import { Currency } from './entities/Currency'\r\nimport { CurrencyAmount } from './entities/CurrencyAmount'\r\nimport { Percent } from './entities/Percent'\r\nimport { Token } from './entities/Token'\r\nimport { Trade } from './entities/Trade'\r\nimport { TradeType } from './enums/TradeType'\r\nimport invariant from 'tiny-invariant'\r\nimport { validateAndParseAddress } from './functions/validateAndParseAddress'\r\n\r\n/**\r\n * Options for producing the arguments to send call to the router.\r\n */\r\nexport interface TradeOptions {\r\n  /**\r\n   * How much the execution price is allowed to move unfavorably from the trade execution price.\r\n   */\r\n  allowedSlippage: Percent\r\n  /**\r\n   * How long the swap is valid until it expires, in seconds.\r\n   * This will be used to produce a `deadline` parameter which is computed from when the swap call parameters\r\n   * are generated.\r\n   */\r\n  ttl: number\r\n  /**\r\n   * The account that should receive the output of the swap.\r\n   */\r\n  recipient: string\r\n\r\n  /**\r\n   * Whether any of the tokens in the path are fee on transfer tokens, which should be handled with special methods\r\n   */\r\n  feeOnTransfer?: boolean\r\n}\r\n\r\nexport interface TradeOptionsDeadline extends Omit<TradeOptions, 'ttl'> {\r\n  /**\r\n   * When the transaction expires.\r\n   * This is an atlernate to specifying the ttl, for when you do not want to use local time.\r\n   */\r\n  deadline: number\r\n}\r\n\r\n/**\r\n * The parameters to use in the call to the Uniswap V2 Router to execute a trade.\r\n */\r\nexport interface SwapParameters {\r\n  /**\r\n   * The method to call on the Uniswap V2 Router.\r\n   */\r\n  methodName: string\r\n  /**\r\n   * The arguments to pass to the method, all hex encoded.\r\n   */\r\n  args: (string | string[])[]\r\n  /**\r\n   * The amount of wei to send in hex.\r\n   */\r\n  value: string\r\n}\r\n\r\nexport function toHex(currencyAmount: CurrencyAmount<Currency>) {\r\n  return `0x${currencyAmount.quotient.toString(16)}`\r\n}\r\n\r\nconst ZERO_HEX = '0x0'\r\n\r\n/**\r\n * Represents the Uniswap V2 Router, and has static methods for helping execute trades.\r\n */\r\nexport abstract class Router {\r\n  /**\r\n   * Cannot be constructed.\r\n   */\r\n  private constructor() {}\r\n  /**\r\n   * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\r\n   * @param trade to produce call parameters for\r\n   * @param options options for the call parameters\r\n   */\r\n  public static swapCallParameters(\r\n    trade: Trade<Currency, Currency, TradeType>,\r\n    options: TradeOptions | TradeOptionsDeadline\r\n  ): SwapParameters {\r\n    const etherIn = trade.inputAmount.currency.isNative\r\n    const etherOut = trade.outputAmount.currency.isNative\r\n    // the router does not support both ether in and out\r\n    invariant(!(etherIn && etherOut), 'ETHER_IN_OUT')\r\n    invariant(!('ttl' in options) || options.ttl > 0, 'TTL')\r\n\r\n    const to: string = validateAndParseAddress(options.recipient)\r\n    const amountIn: string = toHex(trade.maximumAmountIn(options.allowedSlippage))\r\n    const amountOut: string = toHex(trade.minimumAmountOut(options.allowedSlippage))\r\n    const path: string[] = trade.route.path.map((token: Token) => token.address)\r\n    const deadline =\r\n      'ttl' in options\r\n        ? `0x${(Math.floor(new Date().getTime() / 1000) + options.ttl).toString(16)}`\r\n        : `0x${options.deadline.toString(16)}`\r\n\r\n    const useFeeOnTransfer = Boolean(options.feeOnTransfer)\r\n\r\n    let methodName: string\r\n    let args: (string | string[])[]\r\n    let value: string\r\n    switch (trade.tradeType) {\r\n      case TradeType.EXACT_INPUT:\r\n        if (etherIn) {\r\n          methodName = useFeeOnTransfer ? 'swapExactETHForTokensSupportingFeeOnTransferTokens' : 'swapExactETHForTokens'\r\n          // (uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n          args = [amountOut, path, to, deadline]\r\n          value = amountIn\r\n        } else if (etherOut) {\r\n          methodName = useFeeOnTransfer ? 'swapExactTokensForETHSupportingFeeOnTransferTokens' : 'swapExactTokensForETH'\r\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n          args = [amountIn, amountOut, path, to, deadline]\r\n          value = ZERO_HEX\r\n        } else {\r\n          methodName = useFeeOnTransfer\r\n            ? 'swapExactTokensForTokensSupportingFeeOnTransferTokens'\r\n            : 'swapExactTokensForTokens'\r\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n          args = [amountIn, amountOut, path, to, deadline]\r\n          value = ZERO_HEX\r\n        }\r\n        break\r\n      case TradeType.EXACT_OUTPUT:\r\n        invariant(!useFeeOnTransfer, 'EXACT_OUT_FOT')\r\n        if (etherIn) {\r\n          methodName = 'swapETHForExactTokens'\r\n          // (uint amountOut, address[] calldata path, address to, uint deadline)\r\n          args = [amountOut, path, to, deadline]\r\n          value = amountIn\r\n        } else if (etherOut) {\r\n          methodName = 'swapTokensForExactETH'\r\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\r\n          args = [amountOut, amountIn, path, to, deadline]\r\n          value = ZERO_HEX\r\n        } else {\r\n          methodName = 'swapTokensForExactTokens'\r\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\r\n          args = [amountOut, amountIn, path, to, deadline]\r\n          value = ZERO_HEX\r\n        }\r\n        break\r\n    }\r\n    return {\r\n      methodName,\r\n      args,\r\n      value\r\n    }\r\n  }\r\n}\r\n","import { CurrencyAmount, Price, Token } from './entities'\r\nimport { LAMBDA_URL, STOP_LIMIT_ORDER_ADDRESS } from './constants'\r\nimport { Message, getSignature, getSignatureWithProvider, getTypeHash, getTypedData } from './entities'\r\n\r\nimport { BigNumber } from '@ethersproject/bignumber'\r\nimport { ChainId } from './enums'\r\nimport { Contract } from '@ethersproject/contracts'\r\nimport { NonceManager } from '@ethersproject/experimental'\r\nimport { Signer } from '@ethersproject/abstract-signer'\r\nimport { Transaction } from '@ethersproject/transactions'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport abi from './abis/StopLimitOrder.json'\r\nimport { defaultAbiCoder } from '@ethersproject/abi'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport { keccak256 } from '@ethersproject/solidity'\r\nimport { validateAndParseAddress } from './functions/validateAndParseAddress'\r\n\r\nexport interface ILimitOrderData {\r\n  maker: string\r\n  tokenIn: string\r\n  tokenOut: string\r\n  tokenInDecimals: number\r\n  tokenOutDecimals: number\r\n  tokenInSymbol: string\r\n  tokenOutSymbol: string\r\n  amountIn: string\r\n  amountOut: string\r\n  recipient: string\r\n  startTime: string | number\r\n  endTime: string | number\r\n  stopPrice?: string\r\n  oracleAddress?: string\r\n  oracleData?: string\r\n  v: number\r\n  r: string\r\n  s: string\r\n  chainId: ChainId\r\n  orderTypeHash?: string\r\n}\r\n\r\nexport class LimitOrder {\r\n  public readonly maker: string\r\n  public readonly amountIn: CurrencyAmount<Token>\r\n  public readonly amountOut: CurrencyAmount<Token>\r\n  public readonly recipient: string\r\n  public readonly startTime: string\r\n  public readonly endTime: string\r\n  public readonly stopPrice: string\r\n  public readonly oracleAddress: string\r\n  public readonly oracleData: string\r\n  public v: number\r\n  public r: string\r\n  public s: string\r\n\r\n  static getLimitOrder(data: ILimitOrderData): LimitOrder {\r\n    return new LimitOrder(\r\n      data.maker,\r\n      CurrencyAmount.fromRawAmount(\r\n        new Token(data.chainId, data.tokenIn, data.tokenInDecimals, data.tokenInSymbol),\r\n        data.amountIn\r\n      ),\r\n      CurrencyAmount.fromRawAmount(\r\n        new Token(data.chainId, data.tokenOut, data.tokenOutDecimals, data.tokenOutSymbol),\r\n        data.amountOut\r\n      ),\r\n      data.recipient,\r\n      data.startTime,\r\n      data.endTime,\r\n      data.stopPrice,\r\n      data.oracleAddress,\r\n      data.oracleData,\r\n      data.v,\r\n      data.r,\r\n      data.s\r\n    )\r\n  }\r\n\r\n  constructor(\r\n    maker: string,\r\n    amountIn: CurrencyAmount<Token>,\r\n    amountOut: CurrencyAmount<Token>,\r\n    recipient: string,\r\n    startTime: string | number,\r\n    endTime: string | number,\r\n    stopPrice = '0',\r\n    oracleAddress = '0x0000000000000000000000000000000000000000',\r\n    oracleData = '0x00000000000000000000000000000000000000000000000000000000000000',\r\n    v = 0,\r\n    r = '',\r\n    s = ''\r\n  ) {\r\n    this.maker = validateAndParseAddress(maker)\r\n    this.amountIn = amountIn\r\n    this.amountOut = amountOut\r\n    this.recipient = validateAndParseAddress(recipient)\r\n    this.startTime = startTime.toString()\r\n    this.endTime = endTime.toString()\r\n    this.stopPrice = stopPrice\r\n    this.oracleAddress = validateAndParseAddress(oracleAddress)\r\n    this.oracleData = oracleData\r\n    this.v = v\r\n    this.r = r\r\n    this.s = s\r\n  }\r\n\r\n  get amountInRaw(): string {\r\n    return this.amountIn.quotient.toString()\r\n  }\r\n\r\n  get amountOutRaw(): string {\r\n    return this.amountOut.quotient.toString()\r\n  }\r\n\r\n  get tokenInAddress(): string {\r\n    return this.amountIn.currency.address\r\n  }\r\n\r\n  get tokenOutAddress(): string {\r\n    return this.amountOut.currency.address\r\n  }\r\n\r\n  get tokenInDecimals(): number {\r\n    return this.amountIn.currency.decimals\r\n  }\r\n\r\n  get tokenOutDecimals(): number {\r\n    return this.amountOut.currency.decimals\r\n  }\r\n\r\n  get tokenInSymbol(): string {\r\n    return this.amountIn.currency.symbol || ''\r\n  }\r\n\r\n  get tokenOutSymbol(): string {\r\n    return this.amountOut.currency.symbol || ''\r\n  }\r\n\r\n  get chainId(): ChainId {\r\n    return this.amountIn.currency.chainId\r\n  }\r\n\r\n  usePrice(price: Price<Token, Token>): LimitOrder {\r\n    return new LimitOrder(\r\n      this.maker,\r\n      this.amountIn,\r\n      CurrencyAmount.fromRawAmount(this.amountOut.currency, price.quote(this.amountIn).quotient.toString()),\r\n      this.recipient,\r\n      this.startTime,\r\n      this.endTime,\r\n      this.stopPrice,\r\n      this.oracleAddress,\r\n      this.oracleData\r\n    )\r\n  }\r\n\r\n  signdOrderWithPrivatekey(chainId: ChainId, privateKey: string) {\r\n    let order: Message = {\r\n      maker: this.maker,\r\n      tokenIn: this.tokenInAddress,\r\n      tokenOut: this.tokenOutAddress,\r\n      amountIn: this.amountInRaw,\r\n      amountOut: this.amountOutRaw,\r\n      recipient: this.recipient,\r\n      startTime: this.startTime,\r\n      endTime: this.endTime,\r\n      stopPrice: this.stopPrice,\r\n      oracleAddress: this.oracleAddress,\r\n      oracleData: keccak256(['bytes'], [this.oracleData])\r\n    }\r\n\r\n    const { v, r, s } = getSignature(order, chainId, privateKey)\r\n\r\n    this.v = v\r\n    this.r = r\r\n    this.s = s\r\n\r\n    return { v, r, s }\r\n  }\r\n\r\n  async signOrderWithProvider(chainId: ChainId, provider: Web3Provider) {\r\n    let order: Message = {\r\n      maker: this.maker,\r\n      tokenIn: this.tokenInAddress,\r\n      tokenOut: this.tokenOutAddress,\r\n      amountIn: this.amountInRaw,\r\n      amountOut: this.amountOutRaw,\r\n      recipient: this.recipient,\r\n      startTime: this.startTime,\r\n      endTime: this.endTime,\r\n      stopPrice: this.stopPrice,\r\n      oracleAddress: this.oracleAddress,\r\n      oracleData: keccak256(['bytes'], [this.oracleData])\r\n    }\r\n\r\n    const { v, r, s } = await getSignatureWithProvider(order, chainId, provider)\r\n\r\n    this.v = v\r\n    this.r = r\r\n    this.s = s\r\n\r\n    return { v, r, s }\r\n  }\r\n\r\n  getTypedData() {\r\n    let order: Message = {\r\n      maker: this.maker,\r\n      tokenIn: this.tokenInAddress,\r\n      tokenOut: this.tokenOutAddress,\r\n      amountIn: this.amountInRaw,\r\n      amountOut: this.amountOutRaw,\r\n      recipient: this.recipient,\r\n      startTime: this.startTime,\r\n      endTime: this.endTime,\r\n      stopPrice: this.stopPrice,\r\n      oracleAddress: this.oracleAddress,\r\n      oracleData: keccak256(['bytes'], [this.oracleData])\r\n    }\r\n\r\n    return getTypedData(order, this.chainId)\r\n  }\r\n\r\n  getTypeHash() {\r\n    let typedData = this.getTypedData()\r\n    let digest = getTypeHash(typedData)\r\n    return digest\r\n  }\r\n\r\n  async send() {\r\n    const resp = await fetch(`${LAMBDA_URL}/orders/create`, {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        maker: this.maker,\r\n        tokenIn: this.tokenInAddress,\r\n        tokenOut: this.tokenOutAddress,\r\n        tokenInDecimals: this.tokenInDecimals,\r\n        tokenOutDecimals: this.tokenOutDecimals,\r\n        tokenInSymbol: this.tokenInSymbol,\r\n        tokenOutSymbol: this.tokenOutSymbol,\r\n        amountIn: this.amountInRaw,\r\n        amountOut: this.amountOutRaw,\r\n        recipient: this.recipient,\r\n        startTime: this.startTime,\r\n        endTime: this.endTime,\r\n        stopPrice: this.stopPrice,\r\n        oracleAddress: this.oracleAddress,\r\n        oracleData: this.oracleData,\r\n        v: this.v,\r\n        r: this.r,\r\n        s: this.s,\r\n        chainId: this.amountIn.currency.chainId\r\n      })\r\n    })\r\n\r\n    return resp.json()\r\n  }\r\n}\r\n\r\nexport class FillLimitOrder {\r\n  public readonly order: LimitOrder\r\n  public readonly path: string[]\r\n  public readonly amountExternal: BigNumber\r\n  public readonly amountToFill: BigNumber\r\n  public readonly limitOrderReceiver: string\r\n  public readonly to: string\r\n  public readonly tokenIn: string\r\n  public readonly tokenOut: string\r\n  public readonly limitOrderReceiverData: string\r\n\r\n  constructor(\r\n    order: LimitOrder,\r\n    path: string[],\r\n    amountExternal: BigNumber,\r\n    amountToFill: BigNumber,\r\n    limitOrderReceiver: string,\r\n    to: string,\r\n    keepTokenIn = false\r\n  ) {\r\n    this.order = order\r\n    this.path = path.map(validateAndParseAddress)\r\n    this.amountExternal = amountExternal\r\n    this.amountToFill = amountToFill\r\n    this.limitOrderReceiver = validateAndParseAddress(limitOrderReceiver)\r\n    this.to = validateAndParseAddress(to)\r\n    this.tokenIn = order.amountIn.currency.address\r\n    this.tokenOut = order.amountOut.currency.address\r\n\r\n    this.limitOrderReceiverData = defaultAbiCoder.encode(\r\n      ['address[]', 'uint256', 'address', 'bool'],\r\n      [this.path, this.amountExternal.toString(), this.to, keepTokenIn]\r\n    )\r\n  }\r\n\r\n  public fillOrderOpen(\r\n    signer: Signer,\r\n    extra: {\r\n      forceExecution?: boolean\r\n      gasPrice?: BigNumber\r\n      nonce?: number\r\n      debug?: boolean\r\n      open?: boolean\r\n    }\r\n  ) {\r\n    extra.open = true\r\n    return this.fillOrder(signer, extra)\r\n  }\r\n\r\n  public async fillOrder(\r\n    signer: Signer | NonceManager,\r\n    extra: {\r\n      debug?: boolean\r\n      forceExecution?: boolean\r\n      gasPrice?: BigNumber\r\n      open?: boolean\r\n      nonce?: number\r\n    }\r\n  ): Promise<{ executed: boolean; transaction?: Transaction }> {\r\n    const { gasPrice, nonce, forceExecution = false, open = false } = extra\r\n\r\n    const func = open ? 'fillOrderOpen' : 'fillOrder'\r\n\r\n    const orderArg = [\r\n      this.order.maker,\r\n      this.order.amountInRaw,\r\n      this.order.amountOutRaw,\r\n      this.order.recipient,\r\n      this.order.startTime,\r\n      this.order.endTime,\r\n      this.order.stopPrice,\r\n      this.order.oracleAddress,\r\n      this.order.oracleData,\r\n      this.amountToFill.toString(),\r\n      this.order.v,\r\n      this.order.r,\r\n      this.order.s\r\n    ]\r\n\r\n    const limitOrderContract = new Contract(STOP_LIMIT_ORDER_ADDRESS[this.order.chainId], abi, signer)\r\n\r\n    let gasLimit\r\n    let executed = true\r\n\r\n    if (extra.debug) console.log(orderArg, this.path, this.limitOrderReceiver, this.limitOrderReceiverData)\r\n\r\n    try {\r\n      gasLimit = await limitOrderContract.estimateGas[func](\r\n        orderArg,\r\n        this.path[0],\r\n        this.path[this.path.length - 1],\r\n        this.limitOrderReceiver,\r\n        this.limitOrderReceiverData\r\n      )\r\n      gasLimit = gasLimit.mul(11).div(10)\r\n    } catch (e) {\r\n      if (forceExecution) {\r\n        console.log('Failed to estimate gas, forcing execution')\r\n        gasLimit = BigNumber.from('400000') // 400k\r\n        executed = true\r\n      } else {\r\n        return { executed: false }\r\n      }\r\n    }\r\n\r\n    const transaction: Transaction = await limitOrderContract.fillOrder(\r\n      orderArg,\r\n      this.path[0],\r\n      this.path[this.path.length - 1],\r\n      this.limitOrderReceiver,\r\n      this.limitOrderReceiverData,\r\n      { gasLimit, gasPrice, nonce }\r\n    )\r\n\r\n    return { executed, transaction }\r\n  }\r\n}\r\n"],"names":["ChainId","Rounding","TradeType","KashiAction","Fee","OrderStatus","USDC_ADDRESS","MAINNET","ROPSTEN","KOVAN","MATIC","FANTOM","BSC","HARMONY","HECO","OKEX","XDAI","ARBITRUM","AURORA","FACTORY_ADDRESS","RINKEBY","GÖRLI","FANTOM_TESTNET","MATIC_TESTNET","BSC_TESTNET","ARBITRUM_TESTNET","MOONBEAM_TESTNET","AVALANCHE","AVALANCHE_TESTNET","HECO_TESTNET","HARMONY_TESTNET","OKEX_TESTNET","CELO","PALM","PALM_TESTNET","MOONRIVER","AURORA_TESTNET","AURORA_PRIVATENET","ROUTER_ADDRESS","SUSHI_ADDRESS","MASTERCHEF_ADDRESS","BAR_ADDRESS","MAKER_ADDRESS","TIMELOCK_ADDRESS","BENTOBOX_ADDRESS","KASHI_ADDRESS","SUSHISWAP_SWAPPER_ADDRESS","SUSHISWAP_MULTISWAPPER_ADDRESS","SUSHISWAP_MULTI_EXACT_SWAPPER_ADDRESS","PEGGED_ORACLE_ADDRESS","SUSHISWAP_TWAP_0_ORACLE_ADDRESS","SUSHISWAP_TWAP_1_ORACLE_ADDRESS","CHAINLINK_ORACLE_ADDRESS","BORING_HELPER_ADDRESS","STOP_LIMIT_ORDER_ADDRESS","ARCHER_ROUTER_ADDRESS","MINICHEF_ADDRESS","WETH9_ADDRESS","WNATIVE_ADDRESS","MASTERCHEF_V2_ADDRESS","ENS_REGISTRAR_ADDRESS","ZAPPER_ADDRESS","MERKLE_DISTRIBUTOR_ADDRESS","MULTICALL2_ADDRESS","ACTION_ADD_ASSET","ACTION_REPAY","ACTION_REMOVE_ASSET","ACTION_REMOVE_COLLATERAL","ACTION_BORROW","ACTION_GET_REPAY_SHARE","ACTION_GET_REPAY_PART","ACTION_ACCRUE","ACTION_ADD_COLLATERAL","ACTION_UPDATE_EXCHANGE_RATE","ACTION_BENTO_DEPOSIT","ACTION_BENTO_WITHDRAW","ACTION_BENTO_TRANSFER","ACTION_BENTO_TRANSFER_MULTIPLE","ACTION_BENTO_SETAPPROVAL","ACTION_CALL","MINIMUM_TARGET_UTILIZATION","BigNumber","from","MAXIMUM_TARGET_UTILIZATION","UTILIZATION_PRECISION","FULL_UTILIZATION","FULL_UTILIZATION_MINUS_MAX","sub","STARTING_INTEREST_PER_YEAR","mul","MINIMUM_INTEREST_PER_YEAR","MAXIMUM_INTEREST_PER_YEAR","INTEREST_ELASTICITY","FACTOR_PRECISION","PROTOCOL_FEE","PROTOCOL_FEE_DIVISOR","AbstractCurrency","chainId","decimals","symbol","name","Number","isSafeInteger","invariant","isInteger","NativeCurrency","validateAndParseAddress","address","checksummedAddress","getAddress","warning","error","Token","equals","other","isToken","sortsBefore","toLowerCase","currencyEquals","currencyA","currencyB","USDC","WETH9","WNATIVE","Avalanche","onChain","_cache","isNative","wnative","Binance","Celo","wcelo","Ether","_etherCache","weth9","Fantom","Harmony","Heco","Matic","Movr","Okex","xDai","Palm","Aurora","NATIVE","MaxUint256","JSBI","BigInt","ZERO","ONE","TWO","THREE","FIVE","TEN","_100","_997","_1000","INIT_CODE_HASH","MINIMUM_LIQUIDITY","SolidityType","SOLIDITY_TYPE_MAXIMA","uint8","uint256","LAMBDA_URL","SOCKET_URL","CAN_SET_PROTOTYPE","Object","InsufficientReservesError","constructor","setPrototypeOf","prototype","Error","InsufficientInputAmountError","Decimal","toFormat","_Decimal","Big","_Big","strict","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","tryParseFraction","fractionish","invert","add","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","format","rounding","groupSeparator","set","precision","quotient","toString","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","CurrencyAmount","currency","lessThanOrEqual","decimalScale","exponentiate","fromRawAmount","rawAmount","fromFractionalAmount","added","subtracted","multiplied","divided","toExact","wrapped","Price","baseCurrency","quoteCurrency","args","length","result","quoteAmount","baseAmount","scalar","fraction","quote","currencyAmount","adjustedForDecimals","computePoolInitCodeHash","creationCode","deployData","masterDeployerAddress","keccak256","pack","defaultAbiCoder","encode","MASTER_DEPLOYER_ADDRESS","CONSTANT_PRODUCT_POOL_CREATION_CODE","computeConstantProductPoolAddress","factoryAddress","tokenA","tokenB","fee","twap","token0","token1","sort","CONSTANT_PRODUCT_POOL_INIT_CODE_HASH","getCreate2Address","MAX_SAFE_INTEGER","sqrt","value","greaterThanOrEqual","Math","floor","toNumber","z","x","ConstantProductPool","currencyAmountA","currencyAmountB","currencyAmounts","liquidityToken","tokenAmounts","involvesToken","token","priceOf","token0Price","token1Price","reserveOf","reserve0","reserve1","getOutputAmount","inputAmount","inputReserve","outputReserve","inputAmountWithFee","outputAmount","getInputAmount","getLiquidityMinted","totalSupply","tokenAmountA","tokenAmountB","liquidity","amount0","amount1","getLiquidityValue","feeOn","kLast","totalSupplyAdjusted","kLastParsed","rootK","rootKLast","feeLiquidity","computePairAddress","Pair","ONE_HUNDRED","toPercent","Percent","Route","pairs","input","output","every","pair","wrappedInput","path","entries","i","currentInput","push","_midPrice","prices","reduced","slice","reduce","accumulator","currentValue","computePriceImpact","midPrice","quotedOutputAmount","priceImpact","sortedInsert","items","maxSize","comparator","isFull","lo","hi","mid","splice","pop","inputOutputComparator","a","b","tradeComparator","ioComp","route","Trade","amount","tradeType","Array","EXACT_INPUT","executionPrice","exactIn","amountIn","exactOut","amountOut","EXACT_OUTPUT","minimumAmountOut","slippageTolerance","slippageAdjustedAmountOut","maximumAmountIn","slippageAdjustedAmountIn","bestTradeExactIn","currencyAmountIn","currencyOut","currentPairs","nextAmountIn","bestTrades","maxNumResults","maxHops","tokenOut","isInsufficientInputAmountError","pairsExcludingThisPair","concat","worstExecutionPrice","bestTradeExactOut","currencyIn","currencyAmountOut","nextAmountOut","tokenIn","isInsufficientReservesError","undefined","PoolType","Pool","_info","info","minLiquidity","swapGasCost","type","RConstantProductPool","ConstantProduct","RHybridPool","Hybrid","A","RWeightedPool","Weighted","weight0","weight1","CL_MIN_TICK","CL_MAX_TICK","RConcentratedLiquidityPool","ConcentratedLiquidity","sqrtPrice","nearestTick","ticks","RouteStatus","types","EIP712Domain","LimitOrder","bentoTypes","SetMasterContractApproval","getSignature","message","privateKey","domain","verifyingContract","sign","primaryType","getTypedData","getTypedDataBento","getTypeHash","typedData","getMessage","signingKey","SigningKey","signDigest","v","r","s","getSignatureWithProvider","provider","send","maker","JSON","stringify","signature","splitSignature","getSignatureWithProviderBentobox","user","getSignatureBento","bentoApproval","A_PRECISION","DCacheBN","Map","HybridComputeLiquidity","pool","res","get","r0","r1","isZero","nA","prevD","D","dP","abs","lte","HybridgetY","c","yPrev","y","calcOutByIn","direction","xBN","yBN","parseInt","wPool","weightRatio","actualIn","out","pow","xNewBN","getBigNumber","yNewBN","dy","ConcentratedLiquidityOutByIn","OutOfLiquidity","inAmount","index","unshift","DLiquidity","nextTickToCross","currentPrice","currentLiquidity","outAmount","nextTickPrice","maxDx","maxDy","calcInByOut","lt","round","console","calcPrice","takeFeeIntoAccount","oneMinusFee","hPool","ac4","Ds","calcInputByPriceConstantMean","price","t","calcInputByPrice","priceEffective","hint","revertPositive","ASSERT","f","closeValues","accuracy","calcSquareEquation","assert","sqrtD","min","max","x0","y0","e","valueBN","exp","log","LN2","shift","mant","Edge","p","v0","v1","vert0","vert1","amountInPrevious","amountOutPrevious","canBeUsed","bestEdgeIncome","reserve","calcOutput","gas","GasConsumption","checkMinimalLiquidityExceededAfterSwap","testApply","inPrev","outPrev","to","getNeibour","directionNew","amountInNew","amountOutNew","inInc","outInc","inNew","outNew","calc","applySwap","bestIncome","Vertice","edges","gasPrice","gasSpent","bestTotal","bestSource","checkLine","Graph","pools","baseToken","vertices","tokens","forEach","getOrCreateVertice","edge","baseVert","setPrices","map","r2","vert","exportPath","fromVert","toVert","initValue","Set","edgeStyle","finish","start","label","print","edgeValue","has","arrow","filter","join","n","digits","n0","ceil","LN10","mult","nodeLabel","income","total","nodes","data","fs","require","writeFileSync","findBestPath","processedVert","nextVertList","closestVert","closestTotal","closestPosition","bestPath","totalOutput","v2","newIncome","newGasSpent","newTotal","addPath","_from","totalModule","findBestRoute","mode","routeValues","isArray","sum","gasSpentInit","totalrouted","step","status","NoWay","legs","totalAmountOut","Partial","Success","getRouteLegs","topologyWasChanged","calcLegsAmountOut","cleanTopology","outEdges","getOutputEdges","edgeFrom","quantity","swapPortion","absolutePortion","getInputEdges","amounts","l","find","inputTotal","vertNext","prevAmount","topologySort","removeWeakestEdge","removeDeadEnds","verts","minVert","minVertNext","minOutput","MAX_VALUE","vertState","vertsFinished","foundCycle","foundDeadEndVerts","that","topSortRecursive","current","state","successors2Exist","reverse","findMultiRouting","steps","g","fromV","validateSolidityTypeInstance","solidityType","toHex","ZERO_HEX","Router","swapCallParameters","trade","options","etherIn","etherOut","ttl","recipient","allowedSlippage","deadline","Date","getTime","useFeeOnTransfer","Boolean","feeOnTransfer","methodName","startTime","endTime","stopPrice","oracleAddress","oracleData","getLimitOrder","tokenInDecimals","tokenInSymbol","tokenOutDecimals","tokenOutSymbol","usePrice","signdOrderWithPrivatekey","order","tokenInAddress","tokenOutAddress","amountInRaw","amountOutRaw","signOrderWithProvider","digest","fetch","method","body","resp","json","FillLimitOrder","amountExternal","amountToFill","limitOrderReceiver","keepTokenIn","limitOrderReceiverData","fillOrderOpen","signer","extra","open","fillOrder","nonce","forceExecution","func","orderArg","limitOrderContract","Contract","abi","executed","debug","estimateGas","gasLimit","transaction"],"mappings":"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"}